;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 11.12.2018. 09:57:32
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0xFFFC2000  	536936444
0x0004	0x1A410000  	6721
0x0008	0x1A390000  	6713
0x000C	0x1A390000  	6713
0x0010	0x1A390000  	6713
0x0014	0x1A390000  	6713
0x0018	0x1A390000  	6713
0x001C	0x1A390000  	6713
0x0020	0x1A390000  	6713
0x0024	0x1A390000  	6713
0x0028	0x1A390000  	6713
0x002C	0x1A390000  	6713
0x0030	0x1A390000  	6713
0x0034	0x1A390000  	6713
0x0038	0x1A390000  	6713
0x003C	0x1A390000  	6713
0x0040	0x1A390000  	6713
0x0044	0x1A390000  	6713
0x0048	0x1A390000  	6713
0x004C	0x1A390000  	6713
0x0050	0x1A390000  	6713
0x0054	0x1A390000  	6713
0x0058	0x1A390000  	6713
0x005C	0x1A390000  	6713
0x0060	0x1A390000  	6713
0x0064	0x1A390000  	6713
0x0068	0x1A390000  	6713
0x006C	0x1A390000  	6713
0x0070	0x1A390000  	6713
0x0074	0x1A390000  	6713
0x0078	0x1A390000  	6713
0x007C	0x1A390000  	6713
0x0080	0x1A390000  	6713
0x0084	0x1A390000  	6713
0x0088	0x1A390000  	6713
0x008C	0x1A390000  	6713
0x0090	0x1A390000  	6713
0x0094	0x1A390000  	6713
0x0098	0x1A390000  	6713
0x009C	0x1A390000  	6713
0x00A0	0x1A390000  	6713
0x00A4	0x1A390000  	6713
0x00A8	0x1A390000  	6713
0x00AC	0x1A390000  	6713
0x00B0	0x1A390000  	6713
0x00B4	0x1A390000  	6713
0x00B8	0x1A390000  	6713
0x00BC	0x1A390000  	6713
0x00C0	0x1A390000  	6713
0x00C4	0x1A390000  	6713
0x00C8	0x1A390000  	6713
0x00CC	0x1A390000  	6713
0x00D0	0x1A390000  	6713
0x00D4	0x1A390000  	6713
0x00D8	0x1A390000  	6713
0x00DC	0x1A390000  	6713
0x00E0	0x1A390000  	6713
0x00E4	0x1A390000  	6713
0x00E8	0x1A390000  	6713
0x00EC	0x1A390000  	6713
0x00F0	0x1A390000  	6713
0x00F4	0x1A390000  	6713
0x00F8	0x1A390000  	6713
0x00FC	0x1A390000  	6713
0x0100	0x1A390000  	6713
0x0104	0x1A390000  	6713
0x0108	0x1A390000  	6713
0x010C	0x1A390000  	6713
0x0110	0x1A390000  	6713
0x0114	0x1A390000  	6713
0x0118	0x1A390000  	6713
0x011C	0x1A390000  	6713
0x0120	0x1A390000  	6713
0x0124	0x1A390000  	6713
0x0128	0x1A390000  	6713
0x012C	0x1A390000  	6713
0x0130	0x1A390000  	6713
0x0134	0x1A390000  	6713
0x0138	0x1A390000  	6713
0x013C	0x1A390000  	6713
0x0140	0x1A390000  	6713
0x0144	0x1A390000  	6713
0x0148	0x1A390000  	6713
0x014C	0x1A390000  	6713
; end of ____SysVT
_main:
;Click_Equalizer_STM.c, 204 :: 		void main()
0x1A40	0xF000F80E  BL	6752
0x1A44	0xF000FA5C  BL	7936
0x1A48	0xF7FFFFEC  BL	6692
0x1A4C	0xF000FA0A  BL	7780
;Click_Equalizer_STM.c, 206 :: 		systemInit();
0x1A50	0xF7FFFF16  BL	_systemInit+0
;Click_Equalizer_STM.c, 207 :: 		applicationInit();
0x1A54	0xF7FFFF44  BL	_applicationInit+0
;Click_Equalizer_STM.c, 209 :: 		while (1)
L_main34:
;Click_Equalizer_STM.c, 211 :: 		applicationTask();
0x1A58	0xF7FFFF70  BL	_applicationTask+0
;Click_Equalizer_STM.c, 212 :: 		}
0x1A5C	0xE7FC    B	L_main34
;Click_Equalizer_STM.c, 213 :: 		}
L_end_main:
L__main_end_loop:
0x1A5E	0xE7FE    B	L__main_end_loop
; end of _main
___CC2DW:
;__Lib_System_105_107.c, 28 :: 		
0x1A10	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 30 :: 		
L_loopDW:
;__Lib_System_105_107.c, 31 :: 		
0x1A12	0xF81C9B01  LDRB	R9, [R12], #1
;__Lib_System_105_107.c, 32 :: 		
0x1A16	0xF80B9B01  STRB	R9, [R11], #1
;__Lib_System_105_107.c, 33 :: 		
0x1A1A	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_105_107.c, 34 :: 		
0x1A1E	0xD1F8    BNE	L_loopDW
;__Lib_System_105_107.c, 36 :: 		
L_end___CC2DW:
0x1A20	0xB001    ADD	SP, SP, #4
0x1A22	0x4770    BX	LR
; end of ___CC2DW
___FillZeros:
;__Lib_System_105_107.c, 70 :: 		
0x1840	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 72 :: 		
0x1842	0xF04F0900  MOV	R9, #0
;__Lib_System_105_107.c, 73 :: 		
0x1846	0xF04F0C00  MOV	R12, #0
;__Lib_System_105_107.c, 74 :: 		
0x184A	0xEBBD0F0A  CMP	SP, R10, LSL #0
;__Lib_System_105_107.c, 75 :: 		
0x184E	0xDC04    BGT	L_loopFZs
;__Lib_System_105_107.c, 76 :: 		
0x1850	0xEBBD0F0B  CMP	SP, R11, LSL #0
;__Lib_System_105_107.c, 77 :: 		
0x1854	0xDB01    BLT	L_loopFZs
;__Lib_System_105_107.c, 78 :: 		
0x1856	0x46D4    MOV	R12, R10
;__Lib_System_105_107.c, 79 :: 		
0x1858	0x46EA    MOV	R10, SP
;__Lib_System_105_107.c, 80 :: 		
L_loopFZs:
;__Lib_System_105_107.c, 81 :: 		
0x185A	0xF84B9B04  STR	R9, [R11], #4
;__Lib_System_105_107.c, 82 :: 		
0x185E	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_105_107.c, 83 :: 		
0x1862	0xD1FA    BNE	L_loopFZs
;__Lib_System_105_107.c, 84 :: 		
0x1864	0xEBBC0F0A  CMP	R12, R10, LSL #0
;__Lib_System_105_107.c, 85 :: 		
0x1868	0xDD05    BLE	L_norep
;__Lib_System_105_107.c, 86 :: 		
0x186A	0x46E2    MOV	R10, R12
;__Lib_System_105_107.c, 87 :: 		
0x186C	0xF8D9B000  LDR	R11, [R9, #0]
;__Lib_System_105_107.c, 88 :: 		
0x1870	0xF10B0B04  ADD	R11, R11, #4
;__Lib_System_105_107.c, 89 :: 		
0x1874	0xE7F1    B	L_loopFZs
;__Lib_System_105_107.c, 90 :: 		
L_norep:
;__Lib_System_105_107.c, 92 :: 		
L_end___FillZeros:
0x1876	0xB001    ADD	SP, SP, #4
0x1878	0x4770    BX	LR
; end of ___FillZeros
_systemInit:
;Click_Equalizer_STM.c, 115 :: 		void systemInit()
0x1880	0xB081    SUB	SP, SP, #4
0x1882	0xF8CDE000  STR	LR, [SP, #0]
;Click_Equalizer_STM.c, 117 :: 		Delay_ms( 300 );
0x1886	0xF64E677F  MOVW	R7, #61055
0x188A	0xF2C00736  MOVT	R7, #54
0x188E	0xBF00    NOP
0x1890	0xBF00    NOP
L_systemInit16:
0x1892	0x1E7F    SUBS	R7, R7, #1
0x1894	0xD1FD    BNE	L_systemInit16
0x1896	0xBF00    NOP
0x1898	0xBF00    NOP
0x189A	0xBF00    NOP
;Click_Equalizer_STM.c, 119 :: 		mikrobus_i2cInit( _MIKROBUS1, &_EQUALIZER_I2C_CFG[0] );
0x189C	0x480E    LDR	R0, [PC, #56]
0x189E	0x4601    MOV	R1, R0
0x18A0	0x2000    MOVS	R0, #0
0x18A2	0xF7FFFEE7  BL	_mikrobus_i2cInit+0
;Click_Equalizer_STM.c, 120 :: 		mikrobus_logInit( _LOG_USBUART_A, 9600 );
0x18A6	0xF2425180  MOVW	R1, #9600
0x18AA	0x2020    MOVS	R0, #32
0x18AC	0xF7FFFF36  BL	_mikrobus_logInit+0
;Click_Equalizer_STM.c, 121 :: 		mikrobus_logWrite(" --- System Init --- ", _LOG_LINE);
0x18B0	0x480A    LDR	R0, [PC, #40]
0x18B2	0x2102    MOVS	R1, #2
0x18B4	0xF7FFFEA6  BL	_mikrobus_logWrite+0
;Click_Equalizer_STM.c, 122 :: 		Delay_ms( 100 );
0x18B8	0xF644777F  MOVW	R7, #20351
0x18BC	0xF2C00712  MOVT	R7, #18
L_systemInit18:
0x18C0	0x1E7F    SUBS	R7, R7, #1
0x18C2	0xD1FD    BNE	L_systemInit18
0x18C4	0xBF00    NOP
0x18C6	0xBF00    NOP
0x18C8	0xBF00    NOP
0x18CA	0xBF00    NOP
0x18CC	0xBF00    NOP
;Click_Equalizer_STM.c, 123 :: 		}
L_end_systemInit:
0x18CE	0xF8DDE000  LDR	LR, [SP, #0]
0x18D2	0xB001    ADD	SP, SP, #4
0x18D4	0x4770    BX	LR
0x18D6	0xBF00    NOP
0x18D8	0x16A40000  	__EQUALIZER_I2C_CFG+0
0x18DC	0x004E2000  	?lstr6_Click_Equalizer_STM+0
; end of _systemInit
_mikrobus_i2cInit:
;easymx_v7_STM32F107VC.c, 222 :: 		T_mikrobus_ret mikrobus_i2cInit(T_mikrobus_soc bus, const uint32_t *cfg)
; cfg start address is: 4 (R1)
; bus start address is: 0 (R0)
0x1674	0xB081    SUB	SP, SP, #4
0x1676	0xF8CDE000  STR	LR, [SP, #0]
0x167A	0x468B    MOV	R11, R1
; cfg end address is: 4 (R1)
; bus end address is: 0 (R0)
; bus start address is: 0 (R0)
; cfg start address is: 44 (R11)
;easymx_v7_STM32F107VC.c, 224 :: 		switch( bus )
0x167C	0xE009    B	L_mikrobus_i2cInit83
; bus end address is: 0 (R0)
;easymx_v7_STM32F107VC.c, 227 :: 		case _MIKROBUS1 : return _i2cInit_1( cfg );
L_mikrobus_i2cInit85:
0x167E	0x4658    MOV	R0, R11
; cfg end address is: 44 (R11)
0x1680	0xF7FFFEBA  BL	easymx_v7_STM32F107VC__i2cInit_1+0
0x1684	0xE00A    B	L_end_mikrobus_i2cInit
;easymx_v7_STM32F107VC.c, 230 :: 		case _MIKROBUS2 : return _i2cInit_2( cfg );
L_mikrobus_i2cInit86:
; cfg start address is: 44 (R11)
0x1686	0x4658    MOV	R0, R11
; cfg end address is: 44 (R11)
0x1688	0xF7FFFE78  BL	easymx_v7_STM32F107VC__i2cInit_2+0
0x168C	0xE006    B	L_end_mikrobus_i2cInit
;easymx_v7_STM32F107VC.c, 244 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_i2cInit87:
0x168E	0x2001    MOVS	R0, #1
0x1690	0xE004    B	L_end_mikrobus_i2cInit
;easymx_v7_STM32F107VC.c, 245 :: 		}
L_mikrobus_i2cInit83:
; cfg start address is: 44 (R11)
; bus start address is: 0 (R0)
0x1692	0x2800    CMP	R0, #0
0x1694	0xD0F3    BEQ	L_mikrobus_i2cInit85
0x1696	0x2801    CMP	R0, #1
0x1698	0xD0F5    BEQ	L_mikrobus_i2cInit86
; bus end address is: 0 (R0)
; cfg end address is: 44 (R11)
0x169A	0xE7F8    B	L_mikrobus_i2cInit87
;easymx_v7_STM32F107VC.c, 248 :: 		}
L_end_mikrobus_i2cInit:
0x169C	0xF8DDE000  LDR	LR, [SP, #0]
0x16A0	0xB001    ADD	SP, SP, #4
0x16A2	0x4770    BX	LR
; end of _mikrobus_i2cInit
easymx_v7_STM32F107VC__i2cInit_1:
;__em_f107vc_i2c.c, 29 :: 		static T_mikrobus_ret _i2cInit_1(const uint32_t* cfg)
; cfg start address is: 0 (R0)
0x13F8	0xB081    SUB	SP, SP, #4
0x13FA	0xF8CDE000  STR	LR, [SP, #0]
; cfg end address is: 0 (R0)
; cfg start address is: 0 (R0)
;__em_f107vc_i2c.c, 31 :: 		I2C1_Init_Advanced( cfg[0], &_GPIO_MODULE_I2C1_PB67);
0x13FE	0x6801    LDR	R1, [R0, #0]
; cfg end address is: 0 (R0)
0x1400	0x4608    MOV	R0, R1
0x1402	0x4904    LDR	R1, [PC, #16]
0x1404	0xF7FFFEFA  BL	_I2C1_Init_Advanced+0
;__em_f107vc_i2c.c, 32 :: 		return _MIKROBUS_OK;
0x1408	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_f107vc_i2c.c, 33 :: 		}
L_end__i2cInit_1:
0x140A	0xF8DDE000  LDR	LR, [SP, #0]
0x140E	0xB001    ADD	SP, SP, #4
0x1410	0x4770    BX	LR
0x1412	0xBF00    NOP
0x1414	0x1C2C0000  	__GPIO_MODULE_I2C1_PB67+0
; end of easymx_v7_STM32F107VC__i2cInit_1
_I2C1_Init_Advanced:
;__Lib_I2C_12.c, 544 :: 		
; module start address is: 4 (R1)
; I2C_ClockSpeed start address is: 0 (R0)
0x11FC	0xB081    SUB	SP, SP, #4
0x11FE	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 4 (R1)
; I2C_ClockSpeed end address is: 0 (R0)
; I2C_ClockSpeed start address is: 0 (R0)
; module start address is: 4 (R1)
;__Lib_I2C_12.c, 545 :: 		
0x1202	0x460A    MOV	R2, R1
; module end address is: 4 (R1)
0x1204	0x4601    MOV	R1, R0
; I2C_ClockSpeed end address is: 0 (R0)
0x1206	0x4803    LDR	R0, [PC, #12]
0x1208	0xF7FFFC82  BL	_I2Cx_Init_Advanced+0
;__Lib_I2C_12.c, 546 :: 		
L_end_I2C1_Init_Advanced:
0x120C	0xF8DDE000  LDR	LR, [SP, #0]
0x1210	0xB001    ADD	SP, SP, #4
0x1212	0x4770    BX	LR
0x1214	0x54004000  	I2C1_CR1+0
; end of _I2C1_Init_Advanced
_I2Cx_Init_Advanced:
;__Lib_I2C_12.c, 591 :: 		
; module start address is: 8 (R2)
; I2C_ClockSpeed start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x0B10	0xB088    SUB	SP, SP, #32
0x0B12	0xF8CDE000  STR	LR, [SP, #0]
0x0B16	0x460E    MOV	R6, R1
; module end address is: 8 (R2)
; I2C_ClockSpeed end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
; I2C_ClockSpeed start address is: 24 (R6)
; module start address is: 8 (R2)
;__Lib_I2C_12.c, 593 :: 		
;__Lib_I2C_12.c, 600 :: 		
0x0B18	0x4B55    LDR	R3, [PC, #340]
0x0B1A	0x4298    CMP	R0, R3
0x0B1C	0xD10D    BNE	L_I2Cx_Init_Advanced112
;__Lib_I2C_12.c, 601 :: 		
0x0B1E	0x2401    MOVS	R4, #1
0x0B20	0xB264    SXTB	R4, R4
0x0B22	0x4B54    LDR	R3, [PC, #336]
0x0B24	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 602 :: 		
0x0B26	0x4C54    LDR	R4, [PC, #336]
0x0B28	0x4B54    LDR	R3, [PC, #336]
0x0B2A	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 603 :: 		
0x0B2C	0x4C54    LDR	R4, [PC, #336]
0x0B2E	0x4B55    LDR	R3, [PC, #340]
0x0B30	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 604 :: 		
0x0B32	0x4C55    LDR	R4, [PC, #340]
0x0B34	0x4B55    LDR	R3, [PC, #340]
0x0B36	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 605 :: 		
0x0B38	0xE00F    B	L_I2Cx_Init_Advanced113
L_I2Cx_Init_Advanced112:
;__Lib_I2C_12.c, 606 :: 		
0x0B3A	0x4B55    LDR	R3, [PC, #340]
0x0B3C	0x4298    CMP	R0, R3
0x0B3E	0xD10C    BNE	L_I2Cx_Init_Advanced114
;__Lib_I2C_12.c, 607 :: 		
0x0B40	0x2401    MOVS	R4, #1
0x0B42	0xB264    SXTB	R4, R4
0x0B44	0x4B53    LDR	R3, [PC, #332]
0x0B46	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 608 :: 		
0x0B48	0x4C53    LDR	R4, [PC, #332]
0x0B4A	0x4B4C    LDR	R3, [PC, #304]
0x0B4C	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 609 :: 		
0x0B4E	0x4C53    LDR	R4, [PC, #332]
0x0B50	0x4B4C    LDR	R3, [PC, #304]
0x0B52	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 610 :: 		
0x0B54	0x4C52    LDR	R4, [PC, #328]
0x0B56	0x4B4D    LDR	R3, [PC, #308]
0x0B58	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 611 :: 		
L_I2Cx_Init_Advanced114:
L_I2Cx_Init_Advanced113:
;__Lib_I2C_12.c, 612 :: 		
0x0B5A	0x9601    STR	R6, [SP, #4]
; module end address is: 8 (R2)
0x0B5C	0x9002    STR	R0, [SP, #8]
0x0B5E	0x4610    MOV	R0, R2
0x0B60	0xF7FFFE0A  BL	_GPIO_Alternate_Function_Enable+0
0x0B64	0x9802    LDR	R0, [SP, #8]
0x0B66	0x9E01    LDR	R6, [SP, #4]
;__Lib_I2C_12.c, 617 :: 		
0x0B68	0x1D03    ADDS	R3, R0, #4
0x0B6A	0x681B    LDR	R3, [R3, #0]
;__Lib_I2C_12.c, 619 :: 		
0x0B6C	0xB29C    UXTH	R4, R3
0x0B6E	0xF06F033F  MVN	R3, #63
0x0B72	0xEA040303  AND	R3, R4, R3, LSL #0
; tmpreg start address is: 20 (R5)
0x0B76	0xB29D    UXTH	R5, R3
;__Lib_I2C_12.c, 621 :: 		
0x0B78	0xAB03    ADD	R3, SP, #12
0x0B7A	0x9001    STR	R0, [SP, #4]
0x0B7C	0x4618    MOV	R0, R3
0x0B7E	0xF7FFFE83  BL	_RCC_GetClocksFrequency+0
0x0B82	0x9801    LDR	R0, [SP, #4]
;__Lib_I2C_12.c, 622 :: 		
; pclk1 start address is: 28 (R7)
0x0B84	0x9F05    LDR	R7, [SP, #20]
;__Lib_I2C_12.c, 624 :: 		
0x0B86	0x9C05    LDR	R4, [SP, #20]
0x0B88	0x4B46    LDR	R3, [PC, #280]
0x0B8A	0xFBB4F3F3  UDIV	R3, R4, R3
; freqrange start address is: 4 (R1)
0x0B8E	0xB299    UXTH	R1, R3
;__Lib_I2C_12.c, 625 :: 		
0x0B90	0xB29B    UXTH	R3, R3
0x0B92	0xEA450403  ORR	R4, R5, R3, LSL #0
0x0B96	0xB2A4    UXTH	R4, R4
; tmpreg end address is: 20 (R5)
;__Lib_I2C_12.c, 627 :: 		
0x0B98	0x1D03    ADDS	R3, R0, #4
0x0B9A	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 631 :: 		
0x0B9C	0x2400    MOVS	R4, #0
0x0B9E	0x6803    LDR	R3, [R0, #0]
0x0BA0	0xF3640300  BFI	R3, R4, #0, #1
0x0BA4	0x6003    STR	R3, [R0, #0]
;__Lib_I2C_12.c, 634 :: 		
; tmpreg start address is: 8 (R2)
0x0BA6	0x2200    MOVS	R2, #0
;__Lib_I2C_12.c, 637 :: 		
0x0BA8	0x4B3F    LDR	R3, [PC, #252]
0x0BAA	0x429E    CMP	R6, R3
0x0BAC	0xD812    BHI	L_I2Cx_Init_Advanced115
;__Lib_I2C_12.c, 640 :: 		
0x0BAE	0x0073    LSLS	R3, R6, #1
; I2C_ClockSpeed end address is: 24 (R6)
0x0BB0	0xFBB7F4F3  UDIV	R4, R7, R3
; pclk1 end address is: 28 (R7)
; result start address is: 16 (R4)
0x0BB4	0xB2A4    UXTH	R4, R4
;__Lib_I2C_12.c, 642 :: 		
0x0BB6	0x2C04    CMP	R4, #4
0x0BB8	0xD202    BCS	L__I2Cx_Init_Advanced144
; result end address is: 16 (R4)
;__Lib_I2C_12.c, 645 :: 		
; result start address is: 12 (R3)
0x0BBA	0x2304    MOVS	R3, #4
; result end address is: 12 (R3)
0x0BBC	0x461C    MOV	R4, R3
;__Lib_I2C_12.c, 646 :: 		
0x0BBE	0xE7FF    B	L_I2Cx_Init_Advanced116
L__I2Cx_Init_Advanced144:
;__Lib_I2C_12.c, 642 :: 		
;__Lib_I2C_12.c, 646 :: 		
L_I2Cx_Init_Advanced116:
;__Lib_I2C_12.c, 648 :: 		
; result start address is: 16 (R4)
0x0BC0	0xEA420304  ORR	R3, R2, R4, LSL #0
; result end address is: 16 (R4)
0x0BC4	0xB29A    UXTH	R2, R3
;__Lib_I2C_12.c, 650 :: 		
0x0BC6	0xF2000420  ADDW	R4, R0, #32
0x0BCA	0x1C4B    ADDS	R3, R1, #1
0x0BCC	0xB29B    UXTH	R3, R3
; freqrange end address is: 4 (R1)
0x0BCE	0x6023    STR	R3, [R4, #0]
;__Lib_I2C_12.c, 651 :: 		
0x0BD0	0xB291    UXTH	R1, R2
0x0BD2	0xE03F    B	L_I2Cx_Init_Advanced117
L_I2Cx_Init_Advanced115:
;__Lib_I2C_12.c, 656 :: 		
; freqrange start address is: 4 (R1)
; pclk1 start address is: 28 (R7)
; I2C_ClockSpeed start address is: 24 (R6)
0x0BD4	0x2303    MOVS	R3, #3
0x0BD6	0xFB06F403  MUL	R4, R6, R3
0x0BDA	0xFBB7F3F4  UDIV	R3, R7, R4
; result start address is: 32 (R8)
0x0BDE	0xFA1FF883  UXTH	R8, R3
;__Lib_I2C_12.c, 659 :: 		
0x0BE2	0x2319    MOVS	R3, #25
0x0BE4	0xFB06F503  MUL	R5, R6, R3
0x0BE8	0xFBB7F3F5  UDIV	R3, R7, R5
; result25 start address is: 36 (R9)
0x0BEC	0xFA1FF983  UXTH	R9, R3
;__Lib_I2C_12.c, 661 :: 		
0x0BF0	0xFB08F404  MUL	R4, R8, R4
; result end address is: 32 (R8)
;__Lib_I2C_12.c, 663 :: 		
0x0BF4	0xFB09F305  MUL	R3, R9, R5
; result25 end address is: 36 (R9)
;__Lib_I2C_12.c, 665 :: 		
0x0BF8	0x1B3C    SUB	R4, R7, R4
0x0BFA	0x1AFB    SUB	R3, R7, R3
0x0BFC	0x429C    CMP	R4, R3
0x0BFE	0xD205    BCS	L_I2Cx_Init_Advanced118
;__Lib_I2C_12.c, 666 :: 		
0x0C00	0x2303    MOVS	R3, #3
0x0C02	0x4373    MULS	R3, R6, R3
; I2C_ClockSpeed end address is: 24 (R6)
0x0C04	0xFBB7F4F3  UDIV	R4, R7, R3
; pclk1 end address is: 28 (R7)
; result start address is: 16 (R4)
0x0C08	0xB2A4    UXTH	R4, R4
;__Lib_I2C_12.c, 667 :: 		
; result end address is: 16 (R4)
0x0C0A	0xE006    B	L_I2Cx_Init_Advanced119
L_I2Cx_Init_Advanced118:
;__Lib_I2C_12.c, 669 :: 		
; pclk1 start address is: 28 (R7)
; I2C_ClockSpeed start address is: 24 (R6)
0x0C0C	0x2319    MOVS	R3, #25
0x0C0E	0x4373    MULS	R3, R6, R3
; I2C_ClockSpeed end address is: 24 (R6)
0x0C10	0xFBB7F4F3  UDIV	R4, R7, R3
; pclk1 end address is: 28 (R7)
; result start address is: 16 (R4)
0x0C14	0xB2A4    UXTH	R4, R4
;__Lib_I2C_12.c, 670 :: 		
0x0C16	0xF4444480  ORR	R4, R4, #16384
; result end address is: 16 (R4)
;__Lib_I2C_12.c, 671 :: 		
L_I2Cx_Init_Advanced119:
;__Lib_I2C_12.c, 674 :: 		
; result start address is: 16 (R4)
0x0C1A	0xF64073FF  MOVW	R3, #4095
0x0C1E	0xEA040303  AND	R3, R4, R3, LSL #0
0x0C22	0xB913    CBNZ	R3, L__I2Cx_Init_Advanced145
;__Lib_I2C_12.c, 677 :: 		
0x0C24	0xF0440401  ORR	R4, R4, #1
; result end address is: 16 (R4)
;__Lib_I2C_12.c, 678 :: 		
0x0C28	0xE7FF    B	L_I2Cx_Init_Advanced120
L__I2Cx_Init_Advanced145:
;__Lib_I2C_12.c, 674 :: 		
;__Lib_I2C_12.c, 678 :: 		
L_I2Cx_Init_Advanced120:
;__Lib_I2C_12.c, 680 :: 		
; result start address is: 16 (R4)
0x0C2A	0xF4444300  ORR	R3, R4, #32768
; result end address is: 16 (R4)
0x0C2E	0xB29B    UXTH	R3, R3
0x0C30	0x431A    ORRS	R2, R3
0x0C32	0xB292    UXTH	R2, R2
;__Lib_I2C_12.c, 682 :: 		
0x0C34	0xF2000520  ADDW	R5, R0, #32
0x0C38	0xF240132C  MOVW	R3, #300
0x0C3C	0xFB01F403  MUL	R4, R1, R3
0x0C40	0xB2A4    UXTH	R4, R4
; freqrange end address is: 4 (R1)
0x0C42	0xF24033E8  MOVW	R3, #1000
0x0C46	0xFBB4F3F3  UDIV	R3, R4, R3
0x0C4A	0xB29B    UXTH	R3, R3
0x0C4C	0x1C5B    ADDS	R3, R3, #1
0x0C4E	0xB29B    UXTH	R3, R3
0x0C50	0x602B    STR	R3, [R5, #0]
; tmpreg end address is: 8 (R2)
0x0C52	0xB291    UXTH	R1, R2
;__Lib_I2C_12.c, 683 :: 		
L_I2Cx_Init_Advanced117:
;__Lib_I2C_12.c, 685 :: 		
; tmpreg start address is: 4 (R1)
0x0C54	0xF200031C  ADDW	R3, R0, #28
0x0C58	0x6019    STR	R1, [R3, #0]
; tmpreg end address is: 4 (R1)
;__Lib_I2C_12.c, 687 :: 		
0x0C5A	0x2300    MOVS	R3, #0
0x0C5C	0x6003    STR	R3, [R0, #0]
;__Lib_I2C_12.c, 688 :: 		
0x0C5E	0x2401    MOVS	R4, #1
0x0C60	0x6803    LDR	R3, [R0, #0]
0x0C62	0xF3640300  BFI	R3, R4, #0, #1
0x0C66	0x6003    STR	R3, [R0, #0]
; I2C_BASE end address is: 0 (R0)
;__Lib_I2C_12.c, 689 :: 		
L_end_I2Cx_Init_Advanced:
0x0C68	0xF8DDE000  LDR	LR, [SP, #0]
0x0C6C	0xB008    ADD	SP, SP, #32
0x0C6E	0x4770    BX	LR
0x0C70	0x54004000  	I2C1_CR1+0
0x0C74	0x03D44242  	RCC_APB1ENR+0
0x0C78	0x10790000  	_I2C1_Start+0
0x0C7C	0x00D02000  	_I2C_Start_Ptr+0
0x0C80	0xFFFFFFFF  	_I2C1_Read+0
0x0C84	0x00D42000  	_I2C_Read_Ptr+0
0x0C88	0x0FBD0000  	_I2C1_Write+0
0x0C8C	0x00D82000  	_I2C_Write_Ptr+0
0x0C90	0x58004000  	I2C2_CR1+0
0x0C94	0x03D84242  	RCC_APB1ENR+0
0x0C98	0x0CC50000  	_I2C2_Start+0
0x0C9C	0xFFFFFFFF  	_I2C2_Read+0
0x0CA0	0x0F990000  	_I2C2_Write+0
0x0CA4	0x4240000F  	#1000000
0x0CA8	0x86A00001  	#100000
; end of _I2Cx_Init_Advanced
_RCC_GetClocksFrequency:
;__Lib_System_105_107.c, 452 :: 		
; RCC_Clocks start address is: 0 (R0)
0x0888	0xB082    SUB	SP, SP, #8
0x088A	0xF8CDE000  STR	LR, [SP, #0]
0x088E	0x4603    MOV	R3, R0
; RCC_Clocks end address is: 0 (R0)
; RCC_Clocks start address is: 12 (R3)
;__Lib_System_105_107.c, 455 :: 		
0x0890	0x4619    MOV	R1, R3
0x0892	0x9101    STR	R1, [SP, #4]
0x0894	0xF7FFFEA0  BL	_Get_Fosc_kHz+0
0x0898	0xF24031E8  MOVW	R1, #1000
0x089C	0xFB00F201  MUL	R2, R0, R1
0x08A0	0x9901    LDR	R1, [SP, #4]
0x08A2	0x600A    STR	R2, [R1, #0]
;__Lib_System_105_107.c, 458 :: 		
0x08A4	0x491F    LDR	R1, [PC, #124]
0x08A6	0x7809    LDRB	R1, [R1, #0]
0x08A8	0xF3C11103  UBFX	R1, R1, #4, #4
; tmp start address is: 0 (R0)
0x08AC	0xB2C8    UXTB	R0, R1
;__Lib_System_105_107.c, 459 :: 		
0x08AE	0x491E    LDR	R1, [PC, #120]
0x08B0	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x08B2	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x08B4	0xB2C0    UXTB	R0, R0
;__Lib_System_105_107.c, 461 :: 		
0x08B6	0x1D1A    ADDS	R2, R3, #4
0x08B8	0x6819    LDR	R1, [R3, #0]
0x08BA	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x08BC	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 463 :: 		
0x08BE	0x4919    LDR	R1, [PC, #100]
0x08C0	0x8809    LDRH	R1, [R1, #0]
0x08C2	0xF3C12102  UBFX	R1, R1, #8, #3
; tmp start address is: 0 (R0)
0x08C6	0xB288    UXTH	R0, R1
;__Lib_System_105_107.c, 464 :: 		
0x08C8	0x4917    LDR	R1, [PC, #92]
0x08CA	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x08CC	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x08CE	0xB2C0    UXTB	R0, R0
;__Lib_System_105_107.c, 466 :: 		
0x08D0	0xF2030208  ADDW	R2, R3, #8
0x08D4	0x1D19    ADDS	R1, R3, #4
0x08D6	0x6809    LDR	R1, [R1, #0]
0x08D8	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x08DA	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 468 :: 		
0x08DC	0x4911    LDR	R1, [PC, #68]
0x08DE	0x8809    LDRH	R1, [R1, #0]
0x08E0	0xF3C121C2  UBFX	R1, R1, #11, #3
; tmp start address is: 0 (R0)
0x08E4	0xB288    UXTH	R0, R1
;__Lib_System_105_107.c, 469 :: 		
0x08E6	0x4910    LDR	R1, [PC, #64]
0x08E8	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x08EA	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x08EC	0xB2C0    UXTB	R0, R0
;__Lib_System_105_107.c, 471 :: 		
0x08EE	0xF203020C  ADDW	R2, R3, #12
0x08F2	0x1D19    ADDS	R1, R3, #4
0x08F4	0x6809    LDR	R1, [R1, #0]
0x08F6	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x08F8	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 473 :: 		
0x08FA	0x490A    LDR	R1, [PC, #40]
0x08FC	0x8809    LDRH	R1, [R1, #0]
0x08FE	0xF3C13181  UBFX	R1, R1, #14, #2
; tmp start address is: 0 (R0)
0x0902	0xB288    UXTH	R0, R1
;__Lib_System_105_107.c, 474 :: 		
0x0904	0x4909    LDR	R1, [PC, #36]
0x0906	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x0908	0x7809    LDRB	R1, [R1, #0]
; presc start address is: 0 (R0)
0x090A	0xB2C8    UXTB	R0, R1
;__Lib_System_105_107.c, 476 :: 		
0x090C	0xF2030210  ADDW	R2, R3, #16
0x0910	0xF203010C  ADDW	R1, R3, #12
; RCC_Clocks end address is: 12 (R3)
0x0914	0x6809    LDR	R1, [R1, #0]
0x0916	0xFBB1F1F0  UDIV	R1, R1, R0
; presc end address is: 0 (R0)
0x091A	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 477 :: 		
L_end_RCC_GetClocksFrequency:
0x091C	0xF8DDE000  LDR	LR, [SP, #0]
0x0920	0xB002    ADD	SP, SP, #8
0x0922	0x4770    BX	LR
0x0924	0x10044002  	RCC_CFGRbits+0
0x0928	0x1E3C0000  	__Lib_System_105_107_APBAHBPrescTable+0
0x092C	0x187A0000  	__Lib_System_105_107_ADCPrescTable+0
; end of _RCC_GetClocksFrequency
_Get_Fosc_kHz:
;__Lib_Delays.c, 9 :: 		unsigned long Get_Fosc_kHz(){
;__Lib_Delays.c, 10 :: 		return __System_CLOCK_IN_KHZ;
0x05D8	0x4801    LDR	R0, [PC, #4]
0x05DA	0x6800    LDR	R0, [R0, #0]
;__Lib_Delays.c, 11 :: 		}
L_end_Get_Fosc_kHz:
0x05DC	0x4770    BX	LR
0x05DE	0xBF00    NOP
0x05E0	0x00C02000  	___System_CLOCK_IN_KHZ+0
; end of _Get_Fosc_kHz
_GPIO_Alternate_Function_Enable:
;__Lib_GPIO_32F10x.c, 303 :: 		
; module start address is: 0 (R0)
0x0778	0xB081    SUB	SP, SP, #4
0x077A	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 0 (R0)
; module start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 304 :: 		
;__Lib_GPIO_32F10x.c, 305 :: 		
;__Lib_GPIO_32F10x.c, 307 :: 		
0x077E	0x2201    MOVS	R2, #1
0x0780	0xB252    SXTB	R2, R2
0x0782	0x493E    LDR	R1, [PC, #248]
0x0784	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 309 :: 		
0x0786	0xF2000168  ADDW	R1, R0, #104
0x078A	0x680B    LDR	R3, [R1, #0]
0x078C	0xF06F6100  MVN	R1, #134217728
0x0790	0xEA030201  AND	R2, R3, R1, LSL #0
; gpio_remap start address is: 16 (R4)
0x0794	0x4614    MOV	R4, R2
;__Lib_GPIO_32F10x.c, 310 :: 		
0x0796	0xF0036100  AND	R1, R3, #134217728
0x079A	0x0EC9    LSRS	R1, R1, #27
; newstate start address is: 12 (R3)
0x079C	0x460B    MOV	R3, R1
;__Lib_GPIO_32F10x.c, 312 :: 		
0x079E	0xF0024100  AND	R1, R2, #-2147483648
0x07A2	0xF1B14F00  CMP	R1, #-2147483648
0x07A6	0xD102    BNE	L_GPIO_Alternate_Function_Enable66
;__Lib_GPIO_32F10x.c, 314 :: 		
0x07A8	0x4935    LDR	R1, [PC, #212]
; tmpreg start address is: 8 (R2)
0x07AA	0x680A    LDR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 315 :: 		
; tmpreg end address is: 8 (R2)
0x07AC	0xE001    B	L_GPIO_Alternate_Function_Enable67
L_GPIO_Alternate_Function_Enable66:
;__Lib_GPIO_32F10x.c, 318 :: 		
0x07AE	0x4935    LDR	R1, [PC, #212]
; tmpreg start address is: 8 (R2)
0x07B0	0x680A    LDR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 319 :: 		
L_GPIO_Alternate_Function_Enable67:
;__Lib_GPIO_32F10x.c, 321 :: 		
; tmpreg start address is: 8 (R2)
0x07B2	0xF4042170  AND	R1, R4, #983040
0x07B6	0x0C09    LSRS	R1, R1, #16
; tmpmask start address is: 24 (R6)
0x07B8	0x460E    MOV	R6, R1
;__Lib_GPIO_32F10x.c, 322 :: 		
0x07BA	0xF64F71FF  MOVW	R1, #65535
0x07BE	0xEA040101  AND	R1, R4, R1, LSL #0
; tmp start address is: 20 (R5)
0x07C2	0x460D    MOV	R5, R1
;__Lib_GPIO_32F10x.c, 324 :: 		
0x07C4	0xF4041140  AND	R1, R4, #3145728
0x07C8	0xF5B11F40  CMP	R1, #3145728
0x07CC	0xD10D    BNE	L_GPIO_Alternate_Function_Enable68
; tmpmask end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 326 :: 		
0x07CE	0xF06F6170  MVN	R1, #251658240
0x07D2	0xEA020101  AND	R1, R2, R1, LSL #0
; tmpreg end address is: 8 (R2)
; tmpreg start address is: 24 (R6)
0x07D6	0x460E    MOV	R6, R1
;__Lib_GPIO_32F10x.c, 327 :: 		
0x07D8	0x492A    LDR	R1, [PC, #168]
0x07DA	0x680A    LDR	R2, [R1, #0]
0x07DC	0xF06F6170  MVN	R1, #251658240
0x07E0	0x400A    ANDS	R2, R1
0x07E2	0x4928    LDR	R1, [PC, #160]
0x07E4	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 328 :: 		
0x07E6	0x4632    MOV	R2, R6
; tmpreg end address is: 24 (R6)
0x07E8	0xE016    B	L_GPIO_Alternate_Function_Enable69
L_GPIO_Alternate_Function_Enable68:
;__Lib_GPIO_32F10x.c, 329 :: 		
; tmpreg start address is: 8 (R2)
; tmpmask start address is: 24 (R6)
0x07EA	0xF4041180  AND	R1, R4, #1048576
0x07EE	0xF5B11F80  CMP	R1, #1048576
0x07F2	0xD109    BNE	L_GPIO_Alternate_Function_Enable70
;__Lib_GPIO_32F10x.c, 331 :: 		
0x07F4	0xF04F0103  MOV	R1, #3
0x07F8	0x40B1    LSLS	R1, R6
; tmpmask end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 332 :: 		
0x07FA	0x43C9    MVN	R1, R1
0x07FC	0xEA020101  AND	R1, R2, R1, LSL #0
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 333 :: 		
0x0800	0xF0416170  ORR	R1, R1, #251658240
; tmpreg start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 334 :: 		
0x0804	0x460A    MOV	R2, R1
; tmpreg end address is: 4 (R1)
0x0806	0xE007    B	L_GPIO_Alternate_Function_Enable71
L_GPIO_Alternate_Function_Enable70:
;__Lib_GPIO_32F10x.c, 337 :: 		
; tmpreg start address is: 8 (R2)
0x0808	0x0D61    LSRS	R1, R4, #21
0x080A	0x0109    LSLS	R1, R1, #4
0x080C	0xFA05F101  LSL	R1, R5, R1
0x0810	0x43C9    MVN	R1, R1
0x0812	0x400A    ANDS	R2, R1
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 338 :: 		
0x0814	0xF0426270  ORR	R2, R2, #251658240
; tmpreg start address is: 8 (R2)
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 339 :: 		
L_GPIO_Alternate_Function_Enable71:
; tmpreg start address is: 8 (R2)
; tmpreg end address is: 8 (R2)
L_GPIO_Alternate_Function_Enable69:
;__Lib_GPIO_32F10x.c, 341 :: 		
; tmpreg start address is: 8 (R2)
0x0818	0xB12B    CBZ	R3, L__GPIO_Alternate_Function_Enable106
; newstate end address is: 12 (R3)
;__Lib_GPIO_32F10x.c, 343 :: 		
0x081A	0x0D61    LSRS	R1, R4, #21
0x081C	0x0109    LSLS	R1, R1, #4
0x081E	0xFA05F101  LSL	R1, R5, R1
; tmp end address is: 20 (R5)
0x0822	0x430A    ORRS	R2, R1
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 344 :: 		
0x0824	0xE7FF    B	L_GPIO_Alternate_Function_Enable72
L__GPIO_Alternate_Function_Enable106:
;__Lib_GPIO_32F10x.c, 341 :: 		
;__Lib_GPIO_32F10x.c, 344 :: 		
L_GPIO_Alternate_Function_Enable72:
;__Lib_GPIO_32F10x.c, 346 :: 		
; tmpreg start address is: 8 (R2)
0x0826	0xF0044100  AND	R1, R4, #-2147483648
; gpio_remap end address is: 16 (R4)
0x082A	0xF1B14F00  CMP	R1, #-2147483648
0x082E	0xD102    BNE	L_GPIO_Alternate_Function_Enable73
;__Lib_GPIO_32F10x.c, 348 :: 		
0x0830	0x4913    LDR	R1, [PC, #76]
0x0832	0x600A    STR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 349 :: 		
0x0834	0xE001    B	L_GPIO_Alternate_Function_Enable74
L_GPIO_Alternate_Function_Enable73:
;__Lib_GPIO_32F10x.c, 352 :: 		
; tmpreg start address is: 8 (R2)
0x0836	0x4913    LDR	R1, [PC, #76]
0x0838	0x600A    STR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 353 :: 		
L_GPIO_Alternate_Function_Enable74:
;__Lib_GPIO_32F10x.c, 356 :: 		
; i start address is: 40 (R10)
0x083A	0xF2400A00  MOVW	R10, #0
; module end address is: 0 (R0)
; i end address is: 40 (R10)
0x083E	0x4681    MOV	R9, R0
;__Lib_GPIO_32F10x.c, 357 :: 		
L_GPIO_Alternate_Function_Enable75:
; i start address is: 40 (R10)
; module start address is: 36 (R9)
0x0840	0xEA4F018A  LSL	R1, R10, #2
0x0844	0xEB090101  ADD	R1, R9, R1, LSL #0
0x0848	0x6809    LDR	R1, [R1, #0]
0x084A	0xF1B13FFF  CMP	R1, #-1
0x084E	0xD010    BEQ	L_GPIO_Alternate_Function_Enable76
;__Lib_GPIO_32F10x.c, 358 :: 		
0x0850	0xF1090134  ADD	R1, R9, #52
0x0854	0xEA4F038A  LSL	R3, R10, #2
0x0858	0x18C9    ADDS	R1, R1, R3
0x085A	0x6809    LDR	R1, [R1, #0]
0x085C	0x460A    MOV	R2, R1
0x085E	0xEB090103  ADD	R1, R9, R3, LSL #0
0x0862	0x6809    LDR	R1, [R1, #0]
0x0864	0x4608    MOV	R0, R1
0x0866	0x4611    MOV	R1, R2
0x0868	0xF7FFFEBC  BL	__Lib_GPIO_32F10x_GPIO_Configure_Pin+0
;__Lib_GPIO_32F10x.c, 359 :: 		
0x086C	0xF10A0A01  ADD	R10, R10, #1
;__Lib_GPIO_32F10x.c, 360 :: 		
; module end address is: 36 (R9)
; i end address is: 40 (R10)
0x0870	0xE7E6    B	L_GPIO_Alternate_Function_Enable75
L_GPIO_Alternate_Function_Enable76:
;__Lib_GPIO_32F10x.c, 363 :: 		
L_end_GPIO_Alternate_Function_Enable:
0x0872	0xF8DDE000  LDR	LR, [SP, #0]
0x0876	0xB001    ADD	SP, SP, #4
0x0878	0x4770    BX	LR
0x087A	0xBF00    NOP
0x087C	0x03004242  	RCC_APB2ENRbits+0
0x0880	0x001C4001  	AFIO_MAPR2+0
0x0884	0x00044001  	AFIO_MAPR+0
; end of _GPIO_Alternate_Function_Enable
__Lib_GPIO_32F10x_GPIO_Configure_Pin:
;__Lib_GPIO_32F10x.c, 282 :: 		
; config start address is: 4 (R1)
; af_pin start address is: 0 (R0)
0x05E4	0xB083    SUB	SP, SP, #12
0x05E6	0xF8CDE000  STR	LR, [SP, #0]
; config end address is: 4 (R1)
; af_pin end address is: 0 (R0)
; af_pin start address is: 0 (R0)
; config start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 286 :: 		
0x05EA	0xF00003FF  AND	R3, R0, #255
; af_pin end address is: 0 (R0)
0x05EE	0x091A    LSRS	R2, R3, #4
; port start address is: 0 (R0)
0x05F0	0x4610    MOV	R0, R2
;__Lib_GPIO_32F10x.c, 287 :: 		
0x05F2	0xF003020F  AND	R2, R3, #15
; pin start address is: 12 (R3)
0x05F6	0x4613    MOV	R3, R2
;__Lib_GPIO_32F10x.c, 290 :: 		
0x05F8	0xE014    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin57
; port end address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 291 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin59:
0x05FA	0x4A19    LDR	R2, [PC, #100]
0x05FC	0x9202    STR	R2, [SP, #8]
0x05FE	0xE01F    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 292 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin60:
0x0600	0x4A18    LDR	R2, [PC, #96]
0x0602	0x9202    STR	R2, [SP, #8]
0x0604	0xE01C    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 293 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin61:
0x0606	0x4A18    LDR	R2, [PC, #96]
0x0608	0x9202    STR	R2, [SP, #8]
0x060A	0xE019    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 294 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin62:
0x060C	0x4A17    LDR	R2, [PC, #92]
0x060E	0x9202    STR	R2, [SP, #8]
0x0610	0xE016    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 295 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin63:
0x0612	0x4A17    LDR	R2, [PC, #92]
0x0614	0x9202    STR	R2, [SP, #8]
0x0616	0xE013    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 296 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin64:
0x0618	0x4A16    LDR	R2, [PC, #88]
0x061A	0x9202    STR	R2, [SP, #8]
0x061C	0xE010    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 297 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin65:
0x061E	0x4A16    LDR	R2, [PC, #88]
0x0620	0x9202    STR	R2, [SP, #8]
0x0622	0xE00D    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 298 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin57:
; port start address is: 0 (R0)
0x0624	0x2800    CMP	R0, #0
0x0626	0xD0E8    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin59
0x0628	0x2801    CMP	R0, #1
0x062A	0xD0E9    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin60
0x062C	0x2802    CMP	R0, #2
0x062E	0xD0EA    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin61
0x0630	0x2803    CMP	R0, #3
0x0632	0xD0EB    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin62
0x0634	0x2804    CMP	R0, #4
0x0636	0xD0EC    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin63
0x0638	0x2805    CMP	R0, #5
0x063A	0xD0ED    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin64
0x063C	0x2806    CMP	R0, #6
0x063E	0xD0EE    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin65
; port end address is: 0 (R0)
L___Lib_GPIO_32F10x_GPIO_Configure_Pin58:
;__Lib_GPIO_32F10x.c, 300 :: 		
0x0640	0x2201    MOVS	R2, #1
0x0642	0xB212    SXTH	R2, R2
0x0644	0x409A    LSLS	R2, R3
; pin end address is: 12 (R3)
0x0646	0xF8AD2004  STRH	R2, [SP, #4]
; config end address is: 4 (R1)
0x064A	0x9802    LDR	R0, [SP, #8]
0x064C	0x460A    MOV	R2, R1
0x064E	0xF8BD1004  LDRH	R1, [SP, #4]
0x0652	0xF7FFFDC3  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 301 :: 		
L_end_GPIO_Configure_Pin:
0x0656	0xF8DDE000  LDR	LR, [SP, #0]
0x065A	0xB003    ADD	SP, SP, #12
0x065C	0x4770    BX	LR
0x065E	0xBF00    NOP
0x0660	0x08004001  	#1073809408
0x0664	0x0C004001  	#1073810432
0x0668	0x10004001  	#1073811456
0x066C	0x14004001  	#1073812480
0x0670	0x18004001  	#1073813504
0x0674	0x1C004001  	#1073814528
0x0678	0x20004001  	#1073815552
; end of __Lib_GPIO_32F10x_GPIO_Configure_Pin
_GPIO_Config:
;__Lib_GPIO_32F10x.c, 124 :: 		
; config start address is: 8 (R2)
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x01DC	0xB081    SUB	SP, SP, #4
0x01DE	0xF8CDE000  STR	LR, [SP, #0]
0x01E2	0xB28C    UXTH	R4, R1
0x01E4	0x4615    MOV	R5, R2
; config end address is: 8 (R2)
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 16 (R4)
; config start address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 129 :: 		
0x01E6	0x4B77    LDR	R3, [PC, #476]
0x01E8	0xEA000303  AND	R3, R0, R3, LSL #0
; port end address is: 0 (R0)
; port start address is: 24 (R6)
0x01EC	0x461E    MOV	R6, R3
;__Lib_GPIO_32F10x.c, 131 :: 		
0x01EE	0x4618    MOV	R0, R3
0x01F0	0xF7FFFFAE  BL	_GPIO_Clk_Enable+0
;__Lib_GPIO_32F10x.c, 134 :: 		
0x01F4	0xF1B40FFF  CMP	R4, #255
0x01F8	0xD10C    BNE	L_GPIO_Config18
;__Lib_GPIO_32F10x.c, 135 :: 		
0x01FA	0x4B73    LDR	R3, [PC, #460]
0x01FC	0x429D    CMP	R5, R3
0x01FE	0xD103    BNE	L_GPIO_Config19
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 136 :: 		
0x0200	0xF04F3333  MOV	R3, #858993459
0x0204	0x6033    STR	R3, [R6, #0]
; port end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 137 :: 		
0x0206	0xE0D9    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 138 :: 		
L_GPIO_Config19:
;__Lib_GPIO_32F10x.c, 139 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
0x0208	0x2D42    CMP	R5, #66
0x020A	0xD103    BNE	L_GPIO_Config20
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 140 :: 		
0x020C	0xF04F3344  MOV	R3, #1145324612
0x0210	0x6033    STR	R3, [R6, #0]
; port end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 141 :: 		
0x0212	0xE0D3    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 142 :: 		
L_GPIO_Config20:
;__Lib_GPIO_32F10x.c, 143 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
L_GPIO_Config18:
;__Lib_GPIO_32F10x.c, 145 :: 		
0x0214	0xF64F73FF  MOVW	R3, #65535
0x0218	0x429C    CMP	R4, R3
0x021A	0xD114    BNE	L_GPIO_Config21
;__Lib_GPIO_32F10x.c, 146 :: 		
0x021C	0x4B6A    LDR	R3, [PC, #424]
0x021E	0x429D    CMP	R5, R3
0x0220	0xD107    BNE	L_GPIO_Config22
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 147 :: 		
0x0222	0xF04F3333  MOV	R3, #858993459
0x0226	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F10x.c, 148 :: 		
0x0228	0x1D34    ADDS	R4, R6, #4
; port end address is: 24 (R6)
0x022A	0xF04F3333  MOV	R3, #858993459
0x022E	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 149 :: 		
0x0230	0xE0C4    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 150 :: 		
L_GPIO_Config22:
;__Lib_GPIO_32F10x.c, 151 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
0x0232	0x2D42    CMP	R5, #66
0x0234	0xD107    BNE	L_GPIO_Config23
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 152 :: 		
0x0236	0xF04F3344  MOV	R3, #1145324612
0x023A	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F10x.c, 153 :: 		
0x023C	0x1D34    ADDS	R4, R6, #4
; port end address is: 24 (R6)
0x023E	0xF04F3344  MOV	R3, #1145324612
0x0242	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 154 :: 		
0x0244	0xE0BA    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 155 :: 		
L_GPIO_Config23:
;__Lib_GPIO_32F10x.c, 156 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
L_GPIO_Config21:
;__Lib_GPIO_32F10x.c, 158 :: 		
; currentmode start address is: 4 (R1)
0x0246	0x2100    MOVS	R1, #0
;__Lib_GPIO_32F10x.c, 159 :: 		
; speed start address is: 0 (R0)
0x0248	0x2000    MOVS	R0, #0
;__Lib_GPIO_32F10x.c, 161 :: 		
0x024A	0xF0050301  AND	R3, R5, #1
0x024E	0xB10B    CBZ	R3, L_GPIO_Config24
;__Lib_GPIO_32F10x.c, 162 :: 		
0x0250	0x2100    MOVS	R1, #0
0x0252	0xE01D    B	L_GPIO_Config25
L_GPIO_Config24:
;__Lib_GPIO_32F10x.c, 163 :: 		
0x0254	0xF0050302  AND	R3, R5, #2
0x0258	0xB133    CBZ	R3, L_GPIO_Config26
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 164 :: 		
0x025A	0xF40573C0  AND	R3, R5, #384
0x025E	0xB10B    CBZ	R3, L_GPIO_Config27
;__Lib_GPIO_32F10x.c, 165 :: 		
; currentmode start address is: 4 (R1)
0x0260	0x2108    MOVS	R1, #8
; currentmode end address is: 4 (R1)
0x0262	0xE000    B	L_GPIO_Config28
L_GPIO_Config27:
;__Lib_GPIO_32F10x.c, 167 :: 		
; currentmode start address is: 4 (R1)
0x0264	0x2104    MOVS	R1, #4
; currentmode end address is: 4 (R1)
L_GPIO_Config28:
;__Lib_GPIO_32F10x.c, 168 :: 		
; currentmode start address is: 4 (R1)
0x0266	0xE013    B	L_GPIO_Config29
L_GPIO_Config26:
;__Lib_GPIO_32F10x.c, 169 :: 		
0x0268	0xF0050304  AND	R3, R5, #4
0x026C	0xB133    CBZ	R3, L_GPIO_Config30
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 170 :: 		
0x026E	0xF0050320  AND	R3, R5, #32
0x0272	0xB10B    CBZ	R3, L_GPIO_Config31
;__Lib_GPIO_32F10x.c, 171 :: 		
; currentmode start address is: 4 (R1)
0x0274	0x2104    MOVS	R1, #4
; currentmode end address is: 4 (R1)
0x0276	0xE000    B	L_GPIO_Config32
L_GPIO_Config31:
;__Lib_GPIO_32F10x.c, 173 :: 		
; currentmode start address is: 4 (R1)
0x0278	0x2100    MOVS	R1, #0
; currentmode end address is: 4 (R1)
L_GPIO_Config32:
;__Lib_GPIO_32F10x.c, 174 :: 		
; currentmode start address is: 4 (R1)
0x027A	0xE009    B	L_GPIO_Config33
L_GPIO_Config30:
;__Lib_GPIO_32F10x.c, 175 :: 		
0x027C	0xF0050308  AND	R3, R5, #8
0x0280	0xB133    CBZ	R3, L__GPIO_Config100
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 176 :: 		
0x0282	0xF0050320  AND	R3, R5, #32
0x0286	0xB10B    CBZ	R3, L_GPIO_Config35
;__Lib_GPIO_32F10x.c, 177 :: 		
; currentmode start address is: 4 (R1)
0x0288	0x210C    MOVS	R1, #12
; currentmode end address is: 4 (R1)
0x028A	0xE000    B	L_GPIO_Config36
L_GPIO_Config35:
;__Lib_GPIO_32F10x.c, 179 :: 		
; currentmode start address is: 4 (R1)
0x028C	0x2108    MOVS	R1, #8
; currentmode end address is: 4 (R1)
L_GPIO_Config36:
;__Lib_GPIO_32F10x.c, 180 :: 		
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
0x028E	0xE7FF    B	L_GPIO_Config34
L__GPIO_Config100:
;__Lib_GPIO_32F10x.c, 175 :: 		
;__Lib_GPIO_32F10x.c, 180 :: 		
L_GPIO_Config34:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config33:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config29:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config25:
;__Lib_GPIO_32F10x.c, 182 :: 		
; currentmode start address is: 4 (R1)
0x0290	0x4B4E    LDR	R3, [PC, #312]
0x0292	0xEA050303  AND	R3, R5, R3, LSL #0
0x0296	0xB10B    CBZ	R3, L_GPIO_Config37
;__Lib_GPIO_32F10x.c, 183 :: 		
0x0298	0x2003    MOVS	R0, #3
0x029A	0xE009    B	L_GPIO_Config38
L_GPIO_Config37:
;__Lib_GPIO_32F10x.c, 184 :: 		
0x029C	0xF4057300  AND	R3, R5, #512
0x02A0	0xB10B    CBZ	R3, L_GPIO_Config39
;__Lib_GPIO_32F10x.c, 185 :: 		
0x02A2	0x2002    MOVS	R0, #2
0x02A4	0xE004    B	L_GPIO_Config40
L_GPIO_Config39:
;__Lib_GPIO_32F10x.c, 186 :: 		
0x02A6	0xF4056380  AND	R3, R5, #1024
0x02AA	0xB10B    CBZ	R3, L__GPIO_Config101
;__Lib_GPIO_32F10x.c, 187 :: 		
0x02AC	0x2001    MOVS	R0, #1
; speed end address is: 0 (R0)
0x02AE	0xE7FF    B	L_GPIO_Config41
L__GPIO_Config101:
;__Lib_GPIO_32F10x.c, 186 :: 		
;__Lib_GPIO_32F10x.c, 187 :: 		
L_GPIO_Config41:
; speed start address is: 0 (R0)
; speed end address is: 0 (R0)
L_GPIO_Config40:
; speed start address is: 0 (R0)
; speed end address is: 0 (R0)
L_GPIO_Config38:
;__Lib_GPIO_32F10x.c, 189 :: 		
; speed start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 195 :: 		
0x02B0	0xF005030C  AND	R3, R5, #12
0x02B4	0xB10B    CBZ	R3, L__GPIO_Config102
;__Lib_GPIO_32F10x.c, 198 :: 		
0x02B6	0x4301    ORRS	R1, R0
; speed end address is: 0 (R0)
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 199 :: 		
0x02B8	0xE7FF    B	L_GPIO_Config42
L__GPIO_Config102:
;__Lib_GPIO_32F10x.c, 195 :: 		
;__Lib_GPIO_32F10x.c, 199 :: 		
L_GPIO_Config42:
;__Lib_GPIO_32F10x.c, 201 :: 		
; currentmode start address is: 4 (R1)
0x02BA	0xF00403FF  AND	R3, R4, #255
0x02BE	0xB29B    UXTH	R3, R3
0x02C0	0x2B00    CMP	R3, #0
0x02C2	0xD03B    BEQ	L__GPIO_Config104
;__Lib_GPIO_32F10x.c, 202 :: 		
0x02C4	0x6837    LDR	R7, [R6, #0]
; tmpreg start address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 204 :: 		
; pinpos start address is: 0 (R0)
0x02C6	0x2000    MOVS	R0, #0
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
; currentmode end address is: 4 (R1)
; tmpreg end address is: 28 (R7)
; pinpos end address is: 0 (R0)
; port end address is: 24 (R6)
0x02C8	0xFA1FF884  UXTH	R8, R4
0x02CC	0x4632    MOV	R2, R6
0x02CE	0x462E    MOV	R6, R5
L_GPIO_Config44:
; pinpos start address is: 0 (R0)
; tmpreg start address is: 28 (R7)
; currentmode start address is: 4 (R1)
; port start address is: 8 (R2)
; config start address is: 24 (R6)
; pin_mask start address is: 32 (R8)
0x02D0	0x2808    CMP	R0, #8
0x02D2	0xD22C    BCS	L_GPIO_Config45
;__Lib_GPIO_32F10x.c, 206 :: 		
0x02D4	0xF04F0301  MOV	R3, #1
0x02D8	0xFA03F400  LSL	R4, R3, R0
;__Lib_GPIO_32F10x.c, 208 :: 		
0x02DC	0xEA080304  AND	R3, R8, R4, LSL #0
;__Lib_GPIO_32F10x.c, 210 :: 		
0x02E0	0x42A3    CMP	R3, R4
0x02E2	0xD122    BNE	L__GPIO_Config103
;__Lib_GPIO_32F10x.c, 212 :: 		
0x02E4	0x0085    LSLS	R5, R0, #2
;__Lib_GPIO_32F10x.c, 214 :: 		
0x02E6	0xF04F030F  MOV	R3, #15
0x02EA	0x40AB    LSLS	R3, R5
;__Lib_GPIO_32F10x.c, 215 :: 		
0x02EC	0x43DB    MVN	R3, R3
0x02EE	0xEA070403  AND	R4, R7, R3, LSL #0
; tmpreg end address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 218 :: 		
0x02F2	0xFA01F305  LSL	R3, R1, R5
0x02F6	0xEA440303  ORR	R3, R4, R3, LSL #0
; tmpreg start address is: 20 (R5)
0x02FA	0x461D    MOV	R5, R3
;__Lib_GPIO_32F10x.c, 221 :: 		
0x02FC	0xF4067381  AND	R3, R6, #258
0x0300	0xF5B37F81  CMP	R3, #258
0x0304	0xD105    BNE	L_GPIO_Config48
;__Lib_GPIO_32F10x.c, 223 :: 		
0x0306	0xF2020414  ADDW	R4, R2, #20
0x030A	0xF04F0301  MOV	R3, #1
0x030E	0x4083    LSLS	R3, R0
0x0310	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 224 :: 		
L_GPIO_Config48:
;__Lib_GPIO_32F10x.c, 226 :: 		
0x0312	0xF0060382  AND	R3, R6, #130
0x0316	0x2B82    CMP	R3, #130
0x0318	0xD105    BNE	L_GPIO_Config49
;__Lib_GPIO_32F10x.c, 228 :: 		
0x031A	0xF2020410  ADDW	R4, R2, #16
0x031E	0xF04F0301  MOV	R3, #1
0x0322	0x4083    LSLS	R3, R0
0x0324	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 229 :: 		
L_GPIO_Config49:
;__Lib_GPIO_32F10x.c, 230 :: 		
0x0326	0x462F    MOV	R7, R5
0x0328	0xE7FF    B	L_GPIO_Config47
; tmpreg end address is: 20 (R5)
L__GPIO_Config103:
;__Lib_GPIO_32F10x.c, 210 :: 		
;__Lib_GPIO_32F10x.c, 230 :: 		
L_GPIO_Config47:
;__Lib_GPIO_32F10x.c, 204 :: 		
; tmpreg start address is: 28 (R7)
0x032A	0x1C40    ADDS	R0, R0, #1
;__Lib_GPIO_32F10x.c, 231 :: 		
; pinpos end address is: 0 (R0)
0x032C	0xE7D0    B	L_GPIO_Config44
L_GPIO_Config45:
;__Lib_GPIO_32F10x.c, 232 :: 		
0x032E	0x6017    STR	R7, [R2, #0]
; currentmode end address is: 4 (R1)
; port end address is: 8 (R2)
; config end address is: 24 (R6)
; pin_mask end address is: 32 (R8)
; tmpreg end address is: 28 (R7)
0x0330	0xFA1FF088  UXTH	R0, R8
0x0334	0x460F    MOV	R7, R1
0x0336	0x4631    MOV	R1, R6
0x0338	0x4616    MOV	R6, R2
;__Lib_GPIO_32F10x.c, 234 :: 		
0x033A	0xE002    B	L_GPIO_Config43
L__GPIO_Config104:
;__Lib_GPIO_32F10x.c, 201 :: 		
0x033C	0x460F    MOV	R7, R1
0x033E	0x4629    MOV	R1, R5
0x0340	0xB2A0    UXTH	R0, R4
;__Lib_GPIO_32F10x.c, 234 :: 		
L_GPIO_Config43:
;__Lib_GPIO_32F10x.c, 238 :: 		
; currentmode start address is: 28 (R7)
; port start address is: 24 (R6)
; config start address is: 4 (R1)
; pin_mask start address is: 0 (R0)
0x0342	0xF1B00FFF  CMP	R0, #255
0x0346	0xD939    BLS	L_GPIO_Config50
;__Lib_GPIO_32F10x.c, 240 :: 		
0x0348	0x1D33    ADDS	R3, R6, #4
0x034A	0xF8D38000  LDR	R8, [R3, #0]
; tmpreg start address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 241 :: 		
; pinpos start address is: 8 (R2)
0x034E	0x2200    MOVS	R2, #0
; port end address is: 24 (R6)
; tmpreg end address is: 32 (R8)
; pinpos end address is: 8 (R2)
L_GPIO_Config51:
; pinpos start address is: 8 (R2)
; tmpreg start address is: 32 (R8)
; pin_mask start address is: 0 (R0)
; pin_mask end address is: 0 (R0)
; config start address is: 4 (R1)
; config end address is: 4 (R1)
; port start address is: 24 (R6)
; currentmode start address is: 28 (R7)
; currentmode end address is: 28 (R7)
0x0350	0x2A08    CMP	R2, #8
0x0352	0xD230    BCS	L_GPIO_Config52
; pin_mask end address is: 0 (R0)
; config end address is: 4 (R1)
; currentmode end address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 243 :: 		
; currentmode start address is: 28 (R7)
; config start address is: 4 (R1)
; pin_mask start address is: 0 (R0)
0x0354	0xF2020408  ADDW	R4, R2, #8
0x0358	0xF04F0301  MOV	R3, #1
0x035C	0xFA03F404  LSL	R4, R3, R4
;__Lib_GPIO_32F10x.c, 245 :: 		
0x0360	0xEA000304  AND	R3, R0, R4, LSL #0
;__Lib_GPIO_32F10x.c, 246 :: 		
0x0364	0x42A3    CMP	R3, R4
0x0366	0xD124    BNE	L__GPIO_Config105
;__Lib_GPIO_32F10x.c, 248 :: 		
0x0368	0x0095    LSLS	R5, R2, #2
;__Lib_GPIO_32F10x.c, 250 :: 		
0x036A	0xF04F030F  MOV	R3, #15
0x036E	0x40AB    LSLS	R3, R5
;__Lib_GPIO_32F10x.c, 251 :: 		
0x0370	0x43DB    MVN	R3, R3
0x0372	0xEA080803  AND	R8, R8, R3, LSL #0
; tmpreg end address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 254 :: 		
0x0376	0xFA07F305  LSL	R3, R7, R5
0x037A	0xEA480803  ORR	R8, R8, R3, LSL #0
; tmpreg start address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 257 :: 		
0x037E	0xF4017381  AND	R3, R1, #258
0x0382	0xF5B37F81  CMP	R3, #258
0x0386	0xD107    BNE	L_GPIO_Config55
;__Lib_GPIO_32F10x.c, 259 :: 		
0x0388	0xF2060514  ADDW	R5, R6, #20
0x038C	0xF2020408  ADDW	R4, R2, #8
0x0390	0xF04F0301  MOV	R3, #1
0x0394	0x40A3    LSLS	R3, R4
0x0396	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F10x.c, 260 :: 		
L_GPIO_Config55:
;__Lib_GPIO_32F10x.c, 262 :: 		
0x0398	0xF0010382  AND	R3, R1, #130
0x039C	0x2B82    CMP	R3, #130
0x039E	0xD107    BNE	L_GPIO_Config56
;__Lib_GPIO_32F10x.c, 264 :: 		
0x03A0	0xF2060510  ADDW	R5, R6, #16
0x03A4	0xF2020408  ADDW	R4, R2, #8
0x03A8	0xF04F0301  MOV	R3, #1
0x03AC	0x40A3    LSLS	R3, R4
0x03AE	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F10x.c, 265 :: 		
L_GPIO_Config56:
;__Lib_GPIO_32F10x.c, 266 :: 		
0x03B0	0xE7FF    B	L_GPIO_Config54
; tmpreg end address is: 32 (R8)
L__GPIO_Config105:
;__Lib_GPIO_32F10x.c, 246 :: 		
;__Lib_GPIO_32F10x.c, 266 :: 		
L_GPIO_Config54:
;__Lib_GPIO_32F10x.c, 241 :: 		
; tmpreg start address is: 32 (R8)
0x03B2	0x1C52    ADDS	R2, R2, #1
;__Lib_GPIO_32F10x.c, 267 :: 		
; pin_mask end address is: 0 (R0)
; config end address is: 4 (R1)
; currentmode end address is: 28 (R7)
; pinpos end address is: 8 (R2)
0x03B4	0xE7CC    B	L_GPIO_Config51
L_GPIO_Config52:
;__Lib_GPIO_32F10x.c, 268 :: 		
0x03B6	0x1D33    ADDS	R3, R6, #4
; port end address is: 24 (R6)
0x03B8	0xF8C38000  STR	R8, [R3, #0]
; tmpreg end address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 269 :: 		
L_GPIO_Config50:
;__Lib_GPIO_32F10x.c, 270 :: 		
L_end_GPIO_Config:
0x03BC	0xF8DDE000  LDR	LR, [SP, #0]
0x03C0	0xB001    ADD	SP, SP, #4
0x03C2	0x4770    BX	LR
0x03C4	0xFC00FFFF  	#-1024
0x03C8	0x00140008  	#524308
0x03CC	0x08000008  	#526336
; end of _GPIO_Config
_GPIO_Clk_Enable:
;__Lib_GPIO_32F10x.c, 83 :: 		
; gpio_port start address is: 0 (R0)
0x0150	0xB081    SUB	SP, SP, #4
; gpio_port end address is: 0 (R0)
; gpio_port start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 85 :: 		
0x0152	0x4919    LDR	R1, [PC, #100]
0x0154	0xEA000101  AND	R1, R0, R1, LSL #0
; gpio_port end address is: 0 (R0)
; prt start address is: 0 (R0)
0x0158	0x4608    MOV	R0, R1
;__Lib_GPIO_32F10x.c, 86 :: 		
; pos start address is: 8 (R2)
0x015A	0x2200    MOVS	R2, #0
;__Lib_GPIO_32F10x.c, 87 :: 		
0x015C	0xE00E    B	L_GPIO_Clk_Enable0
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 88 :: 		
L_GPIO_Clk_Enable2:
; pos start address is: 0 (R0)
0x015E	0x2004    MOVS	R0, #4
; pos end address is: 0 (R0)
0x0160	0xE022    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 89 :: 		
L_GPIO_Clk_Enable3:
; pos start address is: 0 (R0)
0x0162	0x2008    MOVS	R0, #8
; pos end address is: 0 (R0)
0x0164	0xE020    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 90 :: 		
L_GPIO_Clk_Enable4:
; pos start address is: 0 (R0)
0x0166	0x2010    MOVS	R0, #16
; pos end address is: 0 (R0)
0x0168	0xE01E    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 91 :: 		
L_GPIO_Clk_Enable5:
; pos start address is: 0 (R0)
0x016A	0x2020    MOVS	R0, #32
; pos end address is: 0 (R0)
0x016C	0xE01C    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 92 :: 		
L_GPIO_Clk_Enable6:
; pos start address is: 0 (R0)
0x016E	0x2040    MOVS	R0, #64
; pos end address is: 0 (R0)
0x0170	0xE01A    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 93 :: 		
L_GPIO_Clk_Enable7:
; pos start address is: 0 (R0)
0x0172	0x2080    MOVS	R0, #128
; pos end address is: 0 (R0)
0x0174	0xE018    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 94 :: 		
L_GPIO_Clk_Enable8:
; pos start address is: 0 (R0)
0x0176	0xF2401000  MOVW	R0, #256
; pos end address is: 0 (R0)
0x017A	0xE015    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 95 :: 		
L_GPIO_Clk_Enable0:
; pos start address is: 8 (R2)
; prt start address is: 0 (R0)
0x017C	0x490F    LDR	R1, [PC, #60]
0x017E	0x4288    CMP	R0, R1
0x0180	0xD0ED    BEQ	L_GPIO_Clk_Enable2
0x0182	0x490F    LDR	R1, [PC, #60]
0x0184	0x4288    CMP	R0, R1
0x0186	0xD0EC    BEQ	L_GPIO_Clk_Enable3
0x0188	0x490E    LDR	R1, [PC, #56]
0x018A	0x4288    CMP	R0, R1
0x018C	0xD0EB    BEQ	L_GPIO_Clk_Enable4
0x018E	0x490E    LDR	R1, [PC, #56]
0x0190	0x4288    CMP	R0, R1
0x0192	0xD0EA    BEQ	L_GPIO_Clk_Enable5
0x0194	0x490D    LDR	R1, [PC, #52]
0x0196	0x4288    CMP	R0, R1
0x0198	0xD0E9    BEQ	L_GPIO_Clk_Enable6
0x019A	0x490D    LDR	R1, [PC, #52]
0x019C	0x4288    CMP	R0, R1
0x019E	0xD0E8    BEQ	L_GPIO_Clk_Enable7
0x01A0	0x490C    LDR	R1, [PC, #48]
0x01A2	0x4288    CMP	R0, R1
0x01A4	0xD0E7    BEQ	L_GPIO_Clk_Enable8
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
0x01A6	0x4610    MOV	R0, R2
L_GPIO_Clk_Enable1:
;__Lib_GPIO_32F10x.c, 97 :: 		
; pos start address is: 0 (R0)
0x01A8	0x490B    LDR	R1, [PC, #44]
0x01AA	0x6809    LDR	R1, [R1, #0]
0x01AC	0xEA410200  ORR	R2, R1, R0, LSL #0
; pos end address is: 0 (R0)
0x01B0	0x4909    LDR	R1, [PC, #36]
0x01B2	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 98 :: 		
L_end_GPIO_Clk_Enable:
0x01B4	0xB001    ADD	SP, SP, #4
0x01B6	0x4770    BX	LR
0x01B8	0xFC00FFFF  	#-1024
0x01BC	0x08004001  	#1073809408
0x01C0	0x0C004001  	#1073810432
0x01C4	0x10004001  	#1073811456
0x01C8	0x14004001  	#1073812480
0x01CC	0x18004001  	#1073813504
0x01D0	0x1C004001  	#1073814528
0x01D4	0x20004001  	#1073815552
0x01D8	0x10184002  	RCC_APB2ENR+0
; end of _GPIO_Clk_Enable
easymx_v7_STM32F107VC__i2cInit_2:
;__em_f107vc_i2c.c, 35 :: 		static T_mikrobus_ret _i2cInit_2(const uint32_t* cfg)
; cfg start address is: 0 (R0)
0x137C	0xB081    SUB	SP, SP, #4
0x137E	0xF8CDE000  STR	LR, [SP, #0]
; cfg end address is: 0 (R0)
; cfg start address is: 0 (R0)
;__em_f107vc_i2c.c, 37 :: 		I2C1_Init_Advanced( cfg[0], &_GPIO_MODULE_I2C1_PB67);
0x1382	0x6801    LDR	R1, [R0, #0]
; cfg end address is: 0 (R0)
0x1384	0x4608    MOV	R0, R1
0x1386	0x4904    LDR	R1, [PC, #16]
0x1388	0xF7FFFF38  BL	_I2C1_Init_Advanced+0
;__em_f107vc_i2c.c, 38 :: 		return _MIKROBUS_OK;
0x138C	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_f107vc_i2c.c, 39 :: 		}
L_end__i2cInit_2:
0x138E	0xF8DDE000  LDR	LR, [SP, #0]
0x1392	0xB001    ADD	SP, SP, #4
0x1394	0x4770    BX	LR
0x1396	0xBF00    NOP
0x1398	0x1C2C0000  	__GPIO_MODULE_I2C1_PB67+0
; end of easymx_v7_STM32F107VC__i2cInit_2
_mikrobus_logInit:
;easymx_v7_STM32F107VC.c, 283 :: 		T_mikrobus_ret mikrobus_logInit(T_log_bus port, const uint32_t baud)
; baud start address is: 4 (R1)
; port start address is: 0 (R0)
0x171C	0xB081    SUB	SP, SP, #4
0x171E	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; baud start address is: 4 (R1)
;easymx_v7_STM32F107VC.c, 285 :: 		switch( port )
0x1722	0xE011    B	L_mikrobus_logInit88
; port end address is: 0 (R0)
;easymx_v7_STM32F107VC.c, 288 :: 		case _MIKROBUS1 : return _log_init1( baud );
L_mikrobus_logInit90:
0x1724	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x1726	0xF7FFFF03  BL	easymx_v7_STM32F107VC__log_init1+0
0x172A	0xE016    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 291 :: 		case _MIKROBUS2: return _log_init2( baud );
L_mikrobus_logInit91:
; baud start address is: 4 (R1)
0x172C	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x172E	0xF7FFFEAB  BL	easymx_v7_STM32F107VC__log_init2+0
0x1732	0xE012    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 309 :: 		case _LOG_USBUART_A : return _log_initUartA( baud );
L_mikrobus_logInit92:
; baud start address is: 4 (R1)
0x1734	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x1736	0xF7FFFEDF  BL	easymx_v7_STM32F107VC__log_initUartA+0
0x173A	0xE00E    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 312 :: 		case _LOG_USBUART_B : return _log_initUartB( baud );
L_mikrobus_logInit93:
; baud start address is: 4 (R1)
0x173C	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x173E	0xF7FFFEBF  BL	easymx_v7_STM32F107VC__log_initUartB+0
0x1742	0xE00A    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 314 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_logInit94:
0x1744	0x2001    MOVS	R0, #1
0x1746	0xE008    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 315 :: 		}
L_mikrobus_logInit88:
; baud start address is: 4 (R1)
; port start address is: 0 (R0)
0x1748	0x2800    CMP	R0, #0
0x174A	0xD0EB    BEQ	L_mikrobus_logInit90
0x174C	0x2801    CMP	R0, #1
0x174E	0xD0ED    BEQ	L_mikrobus_logInit91
0x1750	0x2820    CMP	R0, #32
0x1752	0xD0EF    BEQ	L_mikrobus_logInit92
0x1754	0x2830    CMP	R0, #48
0x1756	0xD0F1    BEQ	L_mikrobus_logInit93
; port end address is: 0 (R0)
; baud end address is: 4 (R1)
0x1758	0xE7F4    B	L_mikrobus_logInit94
;easymx_v7_STM32F107VC.c, 317 :: 		}
L_end_mikrobus_logInit:
0x175A	0xF8DDE000  LDR	LR, [SP, #0]
0x175E	0xB001    ADD	SP, SP, #4
0x1760	0x4770    BX	LR
; end of _mikrobus_logInit
easymx_v7_STM32F107VC__log_init1:
;__em_f107vc_log.c, 23 :: 		static T_mikrobus_ret _log_init1(uint32_t baud)
; baud start address is: 0 (R0)
0x1530	0xB081    SUB	SP, SP, #4
0x1532	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_f107vc_log.c, 25 :: 		UART3_Init_Advanced(baud, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART3_PD89);
0x1536	0x4909    LDR	R1, [PC, #36]
0x1538	0xB402    PUSH	(R1)
0x153A	0xF2400300  MOVW	R3, #0
0x153E	0xF2400200  MOVW	R2, #0
0x1542	0xF2400100  MOVW	R1, #0
; baud end address is: 0 (R0)
0x1546	0xF7FFFE31  BL	_UART3_Init_Advanced+0
0x154A	0xB001    ADD	SP, SP, #4
;__em_f107vc_log.c, 26 :: 		logger = UART3_Write;
0x154C	0x4A04    LDR	R2, [PC, #16]
0x154E	0x4905    LDR	R1, [PC, #20]
0x1550	0x600A    STR	R2, [R1, #0]
;__em_f107vc_log.c, 27 :: 		return 0;
0x1552	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 28 :: 		}
L_end__log_init1:
0x1554	0xF8DDE000  LDR	LR, [SP, #0]
0x1558	0xB001    ADD	SP, SP, #4
0x155A	0x4770    BX	LR
0x155C	0x1D040000  	__GPIO_MODULE_USART3_PD89+0
0x1560	0x11910000  	_UART3_Write+0
0x1564	0x00B02000  	_logger+0
; end of easymx_v7_STM32F107VC__log_init1
_UART3_Init_Advanced:
;__Lib_UART_123_45.c, 384 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x11AC	0xB081    SUB	SP, SP, #4
0x11AE	0xF8CDE000  STR	LR, [SP, #0]
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x11B2	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_123_45.c, 386 :: 		
0x11B4	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x11B6	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x11B8	0xB408    PUSH	(R3)
0x11BA	0xB293    UXTH	R3, R2
0x11BC	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x11BE	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x11C0	0x4803    LDR	R0, [PC, #12]
; stop_bits end address is: 12 (R3)
0x11C2	0xF7FFFD8B  BL	__Lib_UART_123_45_UARTx_Init_Advanced+0
0x11C6	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45.c, 387 :: 		
L_end_UART3_Init_Advanced:
0x11C8	0xF8DDE000  LDR	LR, [SP, #0]
0x11CC	0xB001    ADD	SP, SP, #4
0x11CE	0x4770    BX	LR
0x11D0	0x48004000  	USART3_SR+0
; end of _UART3_Init_Advanced
__Lib_UART_123_45_UARTx_Init_Advanced:
;__Lib_UART_123_45.c, 294 :: 		
; parity start address is: 12 (R3)
; baud_rate start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x0CDC	0xB089    SUB	SP, SP, #36
0x0CDE	0xF8CDE000  STR	LR, [SP, #0]
0x0CE2	0x4683    MOV	R11, R0
0x0CE4	0xB298    UXTH	R0, R3
0x0CE6	0x468C    MOV	R12, R1
; parity end address is: 12 (R3)
; baud_rate end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 44 (R11)
; baud_rate start address is: 48 (R12)
; parity start address is: 0 (R0)
; stop_bits start address is: 4 (R1)
0x0CE8	0xF8BD1024  LDRH	R1, [SP, #36]
; module start address is: 24 (R6)
0x0CEC	0x9E0A    LDR	R6, [SP, #40]
;__Lib_UART_123_45.c, 298 :: 		
0x0CEE	0xAC04    ADD	R4, SP, #16
0x0CF0	0xF8AD1004  STRH	R1, [SP, #4]
0x0CF4	0xF8AD0008  STRH	R0, [SP, #8]
0x0CF8	0x4620    MOV	R0, R4
0x0CFA	0xF7FFFDC5  BL	_RCC_GetClocksFrequency+0
0x0CFE	0xF8BD0008  LDRH	R0, [SP, #8]
0x0D02	0xF8BD1004  LDRH	R1, [SP, #4]
;__Lib_UART_123_45.c, 301 :: 		
0x0D06	0x4C64    LDR	R4, [PC, #400]
0x0D08	0x45A3    CMP	R11, R4
0x0D0A	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced15
;__Lib_UART_123_45.c, 302 :: 		
0x0D0C	0x2501    MOVS	R5, #1
0x0D0E	0xB26D    SXTB	R5, R5
0x0D10	0x4C62    LDR	R4, [PC, #392]
0x0D12	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 303 :: 		
0x0D14	0x4D62    LDR	R5, [PC, #392]
0x0D16	0x4C63    LDR	R4, [PC, #396]
0x0D18	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 304 :: 		
0x0D1A	0x4D63    LDR	R5, [PC, #396]
0x0D1C	0x4C63    LDR	R4, [PC, #396]
0x0D1E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 305 :: 		
0x0D20	0x4D63    LDR	R5, [PC, #396]
0x0D22	0x4C64    LDR	R4, [PC, #400]
0x0D24	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 306 :: 		
0x0D26	0x4D64    LDR	R5, [PC, #400]
0x0D28	0x4C64    LDR	R4, [PC, #400]
0x0D2A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 307 :: 		
0x0D2C	0x9C07    LDR	R4, [SP, #28]
0x0D2E	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 308 :: 		
0x0D30	0xE056    B	L___Lib_UART_123_45_UARTx_Init_Advanced16
L___Lib_UART_123_45_UARTx_Init_Advanced15:
;__Lib_UART_123_45.c, 309 :: 		
0x0D32	0x4C63    LDR	R4, [PC, #396]
0x0D34	0x45A3    CMP	R11, R4
0x0D36	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced17
;__Lib_UART_123_45.c, 310 :: 		
0x0D38	0x2501    MOVS	R5, #1
0x0D3A	0xB26D    SXTB	R5, R5
0x0D3C	0x4C61    LDR	R4, [PC, #388]
0x0D3E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 311 :: 		
0x0D40	0x4D61    LDR	R5, [PC, #388]
0x0D42	0x4C58    LDR	R4, [PC, #352]
0x0D44	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 312 :: 		
0x0D46	0x4D61    LDR	R5, [PC, #388]
0x0D48	0x4C58    LDR	R4, [PC, #352]
0x0D4A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 313 :: 		
0x0D4C	0x4D60    LDR	R5, [PC, #384]
0x0D4E	0x4C59    LDR	R4, [PC, #356]
0x0D50	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 314 :: 		
0x0D52	0x4D60    LDR	R5, [PC, #384]
0x0D54	0x4C59    LDR	R4, [PC, #356]
0x0D56	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 315 :: 		
0x0D58	0x9C06    LDR	R4, [SP, #24]
0x0D5A	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 316 :: 		
0x0D5C	0xE040    B	L___Lib_UART_123_45_UARTx_Init_Advanced18
L___Lib_UART_123_45_UARTx_Init_Advanced17:
;__Lib_UART_123_45.c, 317 :: 		
0x0D5E	0x4C5E    LDR	R4, [PC, #376]
0x0D60	0x45A3    CMP	R11, R4
0x0D62	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced19
;__Lib_UART_123_45.c, 318 :: 		
0x0D64	0x2501    MOVS	R5, #1
0x0D66	0xB26D    SXTB	R5, R5
0x0D68	0x4C5C    LDR	R4, [PC, #368]
0x0D6A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 319 :: 		
0x0D6C	0x4D5C    LDR	R5, [PC, #368]
0x0D6E	0x4C4D    LDR	R4, [PC, #308]
0x0D70	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 320 :: 		
0x0D72	0x4D5C    LDR	R5, [PC, #368]
0x0D74	0x4C4D    LDR	R4, [PC, #308]
0x0D76	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 321 :: 		
0x0D78	0x4D5B    LDR	R5, [PC, #364]
0x0D7A	0x4C4E    LDR	R4, [PC, #312]
0x0D7C	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 322 :: 		
0x0D7E	0x4D5B    LDR	R5, [PC, #364]
0x0D80	0x4C4E    LDR	R4, [PC, #312]
0x0D82	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 323 :: 		
0x0D84	0x9C06    LDR	R4, [SP, #24]
0x0D86	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 324 :: 		
0x0D88	0xE02A    B	L___Lib_UART_123_45_UARTx_Init_Advanced20
L___Lib_UART_123_45_UARTx_Init_Advanced19:
;__Lib_UART_123_45.c, 325 :: 		
0x0D8A	0x4C59    LDR	R4, [PC, #356]
0x0D8C	0x45A3    CMP	R11, R4
0x0D8E	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced21
;__Lib_UART_123_45.c, 326 :: 		
0x0D90	0x2501    MOVS	R5, #1
0x0D92	0xB26D    SXTB	R5, R5
0x0D94	0x4C57    LDR	R4, [PC, #348]
0x0D96	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 327 :: 		
0x0D98	0x4D57    LDR	R5, [PC, #348]
0x0D9A	0x4C42    LDR	R4, [PC, #264]
0x0D9C	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 328 :: 		
0x0D9E	0x4D57    LDR	R5, [PC, #348]
0x0DA0	0x4C42    LDR	R4, [PC, #264]
0x0DA2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 329 :: 		
0x0DA4	0x4D56    LDR	R5, [PC, #344]
0x0DA6	0x4C43    LDR	R4, [PC, #268]
0x0DA8	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 330 :: 		
0x0DAA	0x4D56    LDR	R5, [PC, #344]
0x0DAC	0x4C43    LDR	R4, [PC, #268]
0x0DAE	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 331 :: 		
0x0DB0	0x9C06    LDR	R4, [SP, #24]
0x0DB2	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 332 :: 		
0x0DB4	0xE014    B	L___Lib_UART_123_45_UARTx_Init_Advanced22
L___Lib_UART_123_45_UARTx_Init_Advanced21:
;__Lib_UART_123_45.c, 333 :: 		
0x0DB6	0x4C54    LDR	R4, [PC, #336]
0x0DB8	0x45A3    CMP	R11, R4
0x0DBA	0xD111    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced23
;__Lib_UART_123_45.c, 334 :: 		
0x0DBC	0x2501    MOVS	R5, #1
0x0DBE	0xB26D    SXTB	R5, R5
0x0DC0	0x4C52    LDR	R4, [PC, #328]
0x0DC2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 335 :: 		
0x0DC4	0x4D52    LDR	R5, [PC, #328]
0x0DC6	0x4C37    LDR	R4, [PC, #220]
0x0DC8	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 336 :: 		
0x0DCA	0x4D52    LDR	R5, [PC, #328]
0x0DCC	0x4C37    LDR	R4, [PC, #220]
0x0DCE	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 337 :: 		
0x0DD0	0x4D51    LDR	R5, [PC, #324]
0x0DD2	0x4C38    LDR	R4, [PC, #224]
0x0DD4	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 338 :: 		
0x0DD6	0x4D51    LDR	R5, [PC, #324]
0x0DD8	0x4C38    LDR	R4, [PC, #224]
0x0DDA	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 339 :: 		
0x0DDC	0x9C06    LDR	R4, [SP, #24]
0x0DDE	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 340 :: 		
L___Lib_UART_123_45_UARTx_Init_Advanced23:
L___Lib_UART_123_45_UARTx_Init_Advanced22:
L___Lib_UART_123_45_UARTx_Init_Advanced20:
L___Lib_UART_123_45_UARTx_Init_Advanced18:
L___Lib_UART_123_45_UARTx_Init_Advanced16:
;__Lib_UART_123_45.c, 342 :: 		
0x0DE0	0xF8AD1004  STRH	R1, [SP, #4]
; module end address is: 24 (R6)
0x0DE4	0xF8AD0008  STRH	R0, [SP, #8]
0x0DE8	0x4630    MOV	R0, R6
0x0DEA	0xF7FFFCC5  BL	_GPIO_Alternate_Function_Enable+0
0x0DEE	0xF8BD0008  LDRH	R0, [SP, #8]
0x0DF2	0xF8BD1004  LDRH	R1, [SP, #4]
;__Lib_UART_123_45.c, 344 :: 		
0x0DF6	0xF10B0510  ADD	R5, R11, #16
0x0DFA	0x2400    MOVS	R4, #0
0x0DFC	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 345 :: 		
0x0DFE	0xF10B0510  ADD	R5, R11, #16
0x0E02	0x682C    LDR	R4, [R5, #0]
0x0E04	0x430C    ORRS	R4, R1
; stop_bits end address is: 4 (R1)
0x0E06	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 346 :: 		
0x0E08	0xF10B050C  ADD	R5, R11, #12
0x0E0C	0x2400    MOVS	R4, #0
0x0E0E	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 348 :: 		
0x0E10	0xB118    CBZ	R0, L___Lib_UART_123_45_UARTx_Init_Advanced38
;__Lib_UART_123_45.c, 349 :: 		
0x0E12	0xF4406080  ORR	R0, R0, #1024
0x0E16	0xB280    UXTH	R0, R0
; parity end address is: 0 (R0)
;__Lib_UART_123_45.c, 350 :: 		
0x0E18	0xE7FF    B	L___Lib_UART_123_45_UARTx_Init_Advanced24
L___Lib_UART_123_45_UARTx_Init_Advanced38:
;__Lib_UART_123_45.c, 348 :: 		
;__Lib_UART_123_45.c, 350 :: 		
L___Lib_UART_123_45_UARTx_Init_Advanced24:
;__Lib_UART_123_45.c, 352 :: 		
; parity start address is: 0 (R0)
0x0E1A	0xF10B050C  ADD	R5, R11, #12
0x0E1E	0x682C    LDR	R4, [R5, #0]
0x0E20	0x4304    ORRS	R4, R0
; parity end address is: 0 (R0)
0x0E22	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 354 :: 		
0x0E24	0xF10B060C  ADD	R6, R11, #12
0x0E28	0x2501    MOVS	R5, #1
0x0E2A	0x6834    LDR	R4, [R6, #0]
0x0E2C	0xF365344D  BFI	R4, R5, #13, #1
0x0E30	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45.c, 355 :: 		
0x0E32	0xF10B060C  ADD	R6, R11, #12
0x0E36	0x2501    MOVS	R5, #1
0x0E38	0x6834    LDR	R4, [R6, #0]
0x0E3A	0xF36504C3  BFI	R4, R5, #3, #1
0x0E3E	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45.c, 356 :: 		
0x0E40	0xF10B060C  ADD	R6, R11, #12
0x0E44	0x2501    MOVS	R5, #1
0x0E46	0x6834    LDR	R4, [R6, #0]
0x0E48	0xF3650482  BFI	R4, R5, #2, #1
0x0E4C	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45.c, 357 :: 		
0x0E4E	0xF10B0514  ADD	R5, R11, #20
0x0E52	0x2400    MOVS	R4, #0
0x0E54	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 362 :: 		
0x0E56	0x9D03    LDR	R5, [SP, #12]
0x0E58	0x2419    MOVS	R4, #25
0x0E5A	0x4365    MULS	R5, R4, R5
0x0E5C	0xEA4F048C  LSL	R4, R12, #2
; baud_rate end address is: 48 (R12)
0x0E60	0xFBB5F7F4  UDIV	R7, R5, R4
;__Lib_UART_123_45.c, 363 :: 		
0x0E64	0x2464    MOVS	R4, #100
0x0E66	0xFBB7F4F4  UDIV	R4, R7, R4
0x0E6A	0x0126    LSLS	R6, R4, #4
;__Lib_UART_123_45.c, 365 :: 		
0x0E6C	0x0935    LSRS	R5, R6, #4
0x0E6E	0x2464    MOVS	R4, #100
0x0E70	0x436C    MULS	R4, R5, R4
0x0E72	0x1B3C    SUB	R4, R7, R4
;__Lib_UART_123_45.c, 366 :: 		
0x0E74	0x0124    LSLS	R4, R4, #4
0x0E76	0xF2040532  ADDW	R5, R4, #50
0x0E7A	0x2464    MOVS	R4, #100
0x0E7C	0xFBB5F4F4  UDIV	R4, R5, R4
0x0E80	0xF004040F  AND	R4, R4, #15
0x0E84	0xEA460404  ORR	R4, R6, R4, LSL #0
;__Lib_UART_123_45.c, 368 :: 		
0x0E88	0xF10B0508  ADD	R5, R11, #8
; UART_Base end address is: 44 (R11)
0x0E8C	0xB2A4    UXTH	R4, R4
0x0E8E	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 369 :: 		
L_end_UARTx_Init_Advanced:
0x0E90	0xF8DDE000  LDR	LR, [SP, #0]
0x0E94	0xB009    ADD	SP, SP, #36
0x0E96	0x4770    BX	LR
0x0E98	0x38004001  	USART1_SR+0
0x0E9C	0x03384242  	RCC_APB2ENR+0
0x0EA0	0x12190000  	_UART1_Write+0
0x0EA4	0x00DC2000  	_UART_Wr_Ptr+0
0x0EA8	0x0CAD0000  	_UART1_Read+0
0x0EAC	0x00982000  	_UART_Rd_Ptr+0
0x0EB0	0x0F210000  	_UART1_Data_Ready+0
0x0EB4	0x00942000  	_UART_Rdy_Ptr+0
0x0EB8	0x0AC90000  	_UART1_Tx_Idle+0
0x0EBC	0x00E02000  	_UART_Tx_Idle_Ptr+0
0x0EC0	0x44004000  	USART2_SR+0
0x0EC4	0x03C44242  	RCC_APB1ENR+0
0x0EC8	0x11490000  	_UART2_Write+0
0x0ECC	0x0AF90000  	_UART2_Read+0
0x0ED0	0x0AE10000  	_UART2_Data_Ready+0
0x0ED4	0x10290000  	_UART2_Tx_Idle+0
0x0ED8	0x48004000  	USART3_SR+0
0x0EDC	0x03C84242  	RCC_APB1ENR+0
0x0EE0	0x11910000  	_UART3_Write+0
0x0EE4	0x10110000  	_UART3_Read+0
0x0EE8	0x0FF90000  	_UART3_Data_Ready+0
0x0EEC	0x10910000  	_UART3_Tx_Idle+0
0x0EF0	0x4C004000  	UART4_SR+0
0x0EF4	0x03CC4242  	RCC_APB1ENR+0
0x0EF8	0x12510000  	_UART4_Write+0
0x0EFC	0x10610000  	_UART4_Read+0
0x0F00	0x0F690000  	_UART4_Data_Ready+0
0x0F04	0x0F510000  	_UART4_Tx_Idle+0
0x0F08	0x50004000  	UART5_SR+0
0x0F0C	0x03D04242  	RCC_APB1ENR+0
0x0F10	0x12350000  	_UART5_Write+0
0x0F14	0x0F390000  	_UART5_Read+0
0x0F18	0x0F810000  	_UART5_Data_Ready+0
0x0F1C	0x0FE10000  	_UART5_Tx_Idle+0
; end of __Lib_UART_123_45_UARTx_Init_Advanced
easymx_v7_STM32F107VC__log_init2:
;__em_f107vc_log.c, 30 :: 		static T_mikrobus_ret _log_init2(uint32_t baud)
; baud start address is: 0 (R0)
0x1488	0xB081    SUB	SP, SP, #4
0x148A	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_f107vc_log.c, 32 :: 		UART2_Init_Advanced(baud, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART2_PD56);
0x148E	0x4909    LDR	R1, [PC, #36]
0x1490	0xB402    PUSH	(R1)
0x1492	0xF2400300  MOVW	R3, #0
0x1496	0xF2400200  MOVW	R2, #0
0x149A	0xF2400100  MOVW	R1, #0
; baud end address is: 0 (R0)
0x149E	0xF7FFFE3F  BL	_UART2_Init_Advanced+0
0x14A2	0xB001    ADD	SP, SP, #4
;__em_f107vc_log.c, 33 :: 		logger = UART2_Write;
0x14A4	0x4A04    LDR	R2, [PC, #16]
0x14A6	0x4905    LDR	R1, [PC, #20]
0x14A8	0x600A    STR	R2, [R1, #0]
;__em_f107vc_log.c, 34 :: 		return 0;
0x14AA	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 35 :: 		}
L_end__log_init2:
0x14AC	0xF8DDE000  LDR	LR, [SP, #0]
0x14B0	0xB001    ADD	SP, SP, #4
0x14B2	0x4770    BX	LR
0x14B4	0x1D700000  	__GPIO_MODULE_USART2_PD56+0
0x14B8	0x11490000  	_UART2_Write+0
0x14BC	0x00B02000  	_logger+0
; end of easymx_v7_STM32F107VC__log_init2
_UART2_Init_Advanced:
;__Lib_UART_123_45.c, 378 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x1120	0xB081    SUB	SP, SP, #4
0x1122	0xF8CDE000  STR	LR, [SP, #0]
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x1126	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_123_45.c, 380 :: 		
0x1128	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x112A	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x112C	0xB408    PUSH	(R3)
0x112E	0xB293    UXTH	R3, R2
0x1130	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x1132	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x1134	0x4803    LDR	R0, [PC, #12]
; stop_bits end address is: 12 (R3)
0x1136	0xF7FFFDD1  BL	__Lib_UART_123_45_UARTx_Init_Advanced+0
0x113A	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45.c, 381 :: 		
L_end_UART2_Init_Advanced:
0x113C	0xF8DDE000  LDR	LR, [SP, #0]
0x1140	0xB001    ADD	SP, SP, #4
0x1142	0x4770    BX	LR
0x1144	0x44004000  	USART2_SR+0
; end of _UART2_Init_Advanced
easymx_v7_STM32F107VC__log_initUartA:
;__em_f107vc_log.c, 37 :: 		static T_mikrobus_ret _log_initUartA(uint32_t baud)
; baud start address is: 0 (R0)
0x14F8	0xB081    SUB	SP, SP, #4
0x14FA	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_f107vc_log.c, 39 :: 		UART1_Init_Advanced(baud, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART1_PA9_10);
0x14FE	0x4909    LDR	R1, [PC, #36]
0x1500	0xB402    PUSH	(R1)
0x1502	0xF2400300  MOVW	R3, #0
0x1506	0xF2400200  MOVW	R2, #0
0x150A	0xF2400100  MOVW	R1, #0
; baud end address is: 0 (R0)
0x150E	0xF7FFFE61  BL	_UART1_Init_Advanced+0
0x1512	0xB001    ADD	SP, SP, #4
;__em_f107vc_log.c, 40 :: 		logger = UART1_Write;
0x1514	0x4A04    LDR	R2, [PC, #16]
0x1516	0x4905    LDR	R1, [PC, #20]
0x1518	0x600A    STR	R2, [R1, #0]
;__em_f107vc_log.c, 41 :: 		return 0;
0x151A	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 42 :: 		}
L_end__log_initUartA:
0x151C	0xF8DDE000  LDR	LR, [SP, #0]
0x1520	0xB001    ADD	SP, SP, #4
0x1522	0x4770    BX	LR
0x1524	0x1C980000  	__GPIO_MODULE_USART1_PA9_10+0
0x1528	0x12190000  	_UART1_Write+0
0x152C	0x00B02000  	_logger+0
; end of easymx_v7_STM32F107VC__log_initUartA
_UART1_Init_Advanced:
;__Lib_UART_123_45.c, 372 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x11D4	0xB081    SUB	SP, SP, #4
0x11D6	0xF8CDE000  STR	LR, [SP, #0]
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x11DA	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_123_45.c, 374 :: 		
0x11DC	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x11DE	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x11E0	0xB408    PUSH	(R3)
0x11E2	0xB293    UXTH	R3, R2
0x11E4	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x11E6	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x11E8	0x4803    LDR	R0, [PC, #12]
; stop_bits end address is: 12 (R3)
0x11EA	0xF7FFFD77  BL	__Lib_UART_123_45_UARTx_Init_Advanced+0
0x11EE	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45.c, 375 :: 		
L_end_UART1_Init_Advanced:
0x11F0	0xF8DDE000  LDR	LR, [SP, #0]
0x11F4	0xB001    ADD	SP, SP, #4
0x11F6	0x4770    BX	LR
0x11F8	0x38004001  	USART1_SR+0
; end of _UART1_Init_Advanced
easymx_v7_STM32F107VC__log_initUartB:
;__em_f107vc_log.c, 44 :: 		static T_mikrobus_ret _log_initUartB(uint32_t baud)
; baud start address is: 0 (R0)
0x14C0	0xB081    SUB	SP, SP, #4
0x14C2	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_f107vc_log.c, 46 :: 		UART2_Init_Advanced(baud, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART2_PD56);
0x14C6	0x4909    LDR	R1, [PC, #36]
0x14C8	0xB402    PUSH	(R1)
0x14CA	0xF2400300  MOVW	R3, #0
0x14CE	0xF2400200  MOVW	R2, #0
0x14D2	0xF2400100  MOVW	R1, #0
; baud end address is: 0 (R0)
0x14D6	0xF7FFFE23  BL	_UART2_Init_Advanced+0
0x14DA	0xB001    ADD	SP, SP, #4
;__em_f107vc_log.c, 47 :: 		logger = UART2_Write;
0x14DC	0x4A04    LDR	R2, [PC, #16]
0x14DE	0x4905    LDR	R1, [PC, #20]
0x14E0	0x600A    STR	R2, [R1, #0]
;__em_f107vc_log.c, 48 :: 		return 0;
0x14E2	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 49 :: 		}
L_end__log_initUartB:
0x14E4	0xF8DDE000  LDR	LR, [SP, #0]
0x14E8	0xB001    ADD	SP, SP, #4
0x14EA	0x4770    BX	LR
0x14EC	0x1D700000  	__GPIO_MODULE_USART2_PD56+0
0x14F0	0x11490000  	_UART2_Write+0
0x14F4	0x00B02000  	_logger+0
; end of easymx_v7_STM32F107VC__log_initUartB
_mikrobus_logWrite:
;easymx_v7_STM32F107VC.c, 319 :: 		T_mikrobus_ret mikrobus_logWrite(uint8_t* data_, T_log_format format)
; format start address is: 4 (R1)
; data_ start address is: 0 (R0)
0x1604	0xB083    SUB	SP, SP, #12
0x1606	0xF8CDE000  STR	LR, [SP, #0]
0x160A	0x4602    MOV	R2, R0
; format end address is: 4 (R1)
; data_ end address is: 0 (R0)
; data_ start address is: 8 (R2)
; format start address is: 4 (R1)
;easymx_v7_STM32F107VC.c, 321 :: 		uint8_t *ptr = data_;
; ptr start address is: 0 (R0)
0x160C	0x4610    MOV	R0, R2
; data_ end address is: 8 (R2)
;easymx_v7_STM32F107VC.c, 322 :: 		uint8_t row = 13;
0x160E	0x220D    MOVS	R2, #13
0x1610	0xF88D2008  STRB	R2, [SP, #8]
0x1614	0x220A    MOVS	R2, #10
0x1616	0xF88D2009  STRB	R2, [SP, #9]
;easymx_v7_STM32F107VC.c, 323 :: 		uint8_t line = 10;
;easymx_v7_STM32F107VC.c, 324 :: 		switch( format )
0x161A	0xE01F    B	L_mikrobus_logWrite95
; format end address is: 4 (R1)
;easymx_v7_STM32F107VC.c, 326 :: 		case _LOG_BYTE :
L_mikrobus_logWrite97:
;easymx_v7_STM32F107VC.c, 327 :: 		_log_write( ptr );
; ptr end address is: 0 (R0)
0x161C	0xF7FFFE26  BL	easymx_v7_STM32F107VC__log_write+0
;easymx_v7_STM32F107VC.c, 328 :: 		break;
0x1620	0xE023    B	L_mikrobus_logWrite96
;easymx_v7_STM32F107VC.c, 329 :: 		case _LOG_TEXT :
L_mikrobus_logWrite98:
;easymx_v7_STM32F107VC.c, 330 :: 		while( *ptr )
; ptr start address is: 0 (R0)
L_mikrobus_logWrite99:
; ptr end address is: 0 (R0)
; ptr start address is: 0 (R0)
0x1622	0x7802    LDRB	R2, [R0, #0]
0x1624	0xB12A    CBZ	R2, L_mikrobus_logWrite100
;easymx_v7_STM32F107VC.c, 332 :: 		_log_write( ptr );
0x1626	0x9001    STR	R0, [SP, #4]
0x1628	0xF7FFFE20  BL	easymx_v7_STM32F107VC__log_write+0
0x162C	0x9801    LDR	R0, [SP, #4]
;easymx_v7_STM32F107VC.c, 333 :: 		ptr++;
0x162E	0x1C40    ADDS	R0, R0, #1
;easymx_v7_STM32F107VC.c, 334 :: 		}
; ptr end address is: 0 (R0)
0x1630	0xE7F7    B	L_mikrobus_logWrite99
L_mikrobus_logWrite100:
;easymx_v7_STM32F107VC.c, 335 :: 		break;
0x1632	0xE01A    B	L_mikrobus_logWrite96
;easymx_v7_STM32F107VC.c, 336 :: 		case _LOG_LINE :
L_mikrobus_logWrite101:
;easymx_v7_STM32F107VC.c, 337 :: 		while( *ptr )
; ptr start address is: 0 (R0)
L_mikrobus_logWrite102:
; ptr end address is: 0 (R0)
; ptr start address is: 0 (R0)
0x1634	0x7802    LDRB	R2, [R0, #0]
0x1636	0xB12A    CBZ	R2, L_mikrobus_logWrite103
;easymx_v7_STM32F107VC.c, 339 :: 		_log_write( ptr );
0x1638	0x9001    STR	R0, [SP, #4]
0x163A	0xF7FFFE17  BL	easymx_v7_STM32F107VC__log_write+0
0x163E	0x9801    LDR	R0, [SP, #4]
;easymx_v7_STM32F107VC.c, 340 :: 		ptr++;
0x1640	0x1C40    ADDS	R0, R0, #1
;easymx_v7_STM32F107VC.c, 341 :: 		}
; ptr end address is: 0 (R0)
0x1642	0xE7F7    B	L_mikrobus_logWrite102
L_mikrobus_logWrite103:
;easymx_v7_STM32F107VC.c, 342 :: 		_log_write( &row );
0x1644	0xAA02    ADD	R2, SP, #8
0x1646	0x4610    MOV	R0, R2
0x1648	0xF7FFFE10  BL	easymx_v7_STM32F107VC__log_write+0
;easymx_v7_STM32F107VC.c, 343 :: 		_log_write( &line );
0x164C	0xF10D0209  ADD	R2, SP, #9
0x1650	0x4610    MOV	R0, R2
0x1652	0xF7FFFE0B  BL	easymx_v7_STM32F107VC__log_write+0
;easymx_v7_STM32F107VC.c, 344 :: 		break;
0x1656	0xE008    B	L_mikrobus_logWrite96
;easymx_v7_STM32F107VC.c, 345 :: 		default :
L_mikrobus_logWrite104:
;easymx_v7_STM32F107VC.c, 346 :: 		return _MIKROBUS_ERR_LOG;
0x1658	0x2006    MOVS	R0, #6
0x165A	0xE007    B	L_end_mikrobus_logWrite
;easymx_v7_STM32F107VC.c, 347 :: 		}
L_mikrobus_logWrite95:
; ptr start address is: 0 (R0)
; format start address is: 4 (R1)
0x165C	0x2900    CMP	R1, #0
0x165E	0xD0DD    BEQ	L_mikrobus_logWrite97
0x1660	0x2901    CMP	R1, #1
0x1662	0xD0DE    BEQ	L_mikrobus_logWrite98
0x1664	0x2902    CMP	R1, #2
0x1666	0xD0E5    BEQ	L_mikrobus_logWrite101
; format end address is: 4 (R1)
; ptr end address is: 0 (R0)
0x1668	0xE7F6    B	L_mikrobus_logWrite104
L_mikrobus_logWrite96:
;easymx_v7_STM32F107VC.c, 348 :: 		return 0;
0x166A	0x2000    MOVS	R0, #0
;easymx_v7_STM32F107VC.c, 349 :: 		}
L_end_mikrobus_logWrite:
0x166C	0xF8DDE000  LDR	LR, [SP, #0]
0x1670	0xB003    ADD	SP, SP, #12
0x1672	0x4770    BX	LR
; end of _mikrobus_logWrite
easymx_v7_STM32F107VC__log_write:
;__em_f107vc_log.c, 17 :: 		static T_mikrobus_ret _log_write(uint8_t *data_)
; data_ start address is: 0 (R0)
0x126C	0xB081    SUB	SP, SP, #4
0x126E	0xF8CDE000  STR	LR, [SP, #0]
; data_ end address is: 0 (R0)
; data_ start address is: 0 (R0)
;__em_f107vc_log.c, 19 :: 		logger( *data_ );
0x1272	0x7801    LDRB	R1, [R0, #0]
; data_ end address is: 0 (R0)
0x1274	0xB2CC    UXTB	R4, R1
0x1276	0xB2A0    UXTH	R0, R4
0x1278	0x4C03    LDR	R4, [PC, #12]
0x127A	0x6824    LDR	R4, [R4, #0]
0x127C	0x47A0    BLX	R4
;__em_f107vc_log.c, 20 :: 		return 0;
0x127E	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 21 :: 		}
L_end__log_write:
0x1280	0xF8DDE000  LDR	LR, [SP, #0]
0x1284	0xB001    ADD	SP, SP, #4
0x1286	0x4770    BX	LR
0x1288	0x00B02000  	_logger+0
; end of easymx_v7_STM32F107VC__log_write
_UART1_Write:
;__Lib_UART_123_45.c, 41 :: 		
; _data start address is: 0 (R0)
0x1218	0xB081    SUB	SP, SP, #4
0x121A	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 42 :: 		
0x121E	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x1220	0x4803    LDR	R0, [PC, #12]
0x1222	0xF7FFFF0D  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 43 :: 		
L_end_UART1_Write:
0x1226	0xF8DDE000  LDR	LR, [SP, #0]
0x122A	0xB001    ADD	SP, SP, #4
0x122C	0x4770    BX	LR
0x122E	0xBF00    NOP
0x1230	0x38004001  	USART1_SR+0
; end of _UART1_Write
__Lib_UART_123_45_UARTx_Write:
;__Lib_UART_123_45.c, 35 :: 		
; _data start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x1040	0xB081    SUB	SP, SP, #4
; _data end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; _data start address is: 4 (R1)
0x1042	0xF8AD1000  STRH	R1, [SP, #0]
; UART_Base end address is: 0 (R0)
; _data end address is: 4 (R1)
0x1046	0x4601    MOV	R1, R0
0x1048	0xF8BD0000  LDRH	R0, [SP, #0]
;__Lib_UART_123_45.c, 36 :: 		
L___Lib_UART_123_45_UARTx_Write0:
; _data start address is: 0 (R0)
; UART_Base start address is: 4 (R1)
0x104C	0x680B    LDR	R3, [R1, #0]
0x104E	0xF3C312C0  UBFX	R2, R3, #7, #1
0x1052	0xB902    CBNZ	R2, L___Lib_UART_123_45_UARTx_Write1
;__Lib_UART_123_45.c, 37 :: 		
0x1054	0xE7FA    B	L___Lib_UART_123_45_UARTx_Write0
L___Lib_UART_123_45_UARTx_Write1:
;__Lib_UART_123_45.c, 38 :: 		
0x1056	0x1D0A    ADDS	R2, R1, #4
; UART_Base end address is: 4 (R1)
0x1058	0x6010    STR	R0, [R2, #0]
; _data end address is: 0 (R0)
;__Lib_UART_123_45.c, 39 :: 		
L_end_UARTx_Write:
0x105A	0xB001    ADD	SP, SP, #4
0x105C	0x4770    BX	LR
; end of __Lib_UART_123_45_UARTx_Write
_UART2_Write:
;__Lib_UART_123_45.c, 45 :: 		
; _data start address is: 0 (R0)
0x1148	0xB081    SUB	SP, SP, #4
0x114A	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 46 :: 		
0x114E	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x1150	0x4803    LDR	R0, [PC, #12]
0x1152	0xF7FFFF75  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 47 :: 		
L_end_UART2_Write:
0x1156	0xF8DDE000  LDR	LR, [SP, #0]
0x115A	0xB001    ADD	SP, SP, #4
0x115C	0x4770    BX	LR
0x115E	0xBF00    NOP
0x1160	0x44004000  	USART2_SR+0
; end of _UART2_Write
_UART3_Write:
;__Lib_UART_123_45.c, 49 :: 		
; _data start address is: 0 (R0)
0x1190	0xB081    SUB	SP, SP, #4
0x1192	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 50 :: 		
0x1196	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x1198	0x4803    LDR	R0, [PC, #12]
0x119A	0xF7FFFF51  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 51 :: 		
L_end_UART3_Write:
0x119E	0xF8DDE000  LDR	LR, [SP, #0]
0x11A2	0xB001    ADD	SP, SP, #4
0x11A4	0x4770    BX	LR
0x11A6	0xBF00    NOP
0x11A8	0x48004000  	USART3_SR+0
; end of _UART3_Write
_UART4_Write:
;__Lib_UART_123_45.c, 53 :: 		
; _data start address is: 0 (R0)
0x1250	0xB081    SUB	SP, SP, #4
0x1252	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 54 :: 		
0x1256	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x1258	0x4803    LDR	R0, [PC, #12]
0x125A	0xF7FFFEF1  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 55 :: 		
L_end_UART4_Write:
0x125E	0xF8DDE000  LDR	LR, [SP, #0]
0x1262	0xB001    ADD	SP, SP, #4
0x1264	0x4770    BX	LR
0x1266	0xBF00    NOP
0x1268	0x4C004000  	UART4_SR+0
; end of _UART4_Write
_UART5_Write:
;__Lib_UART_123_45.c, 57 :: 		
; _data start address is: 0 (R0)
0x1234	0xB081    SUB	SP, SP, #4
0x1236	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 58 :: 		
0x123A	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x123C	0x4803    LDR	R0, [PC, #12]
0x123E	0xF7FFFEFF  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 59 :: 		
L_end_UART5_Write:
0x1242	0xF8DDE000  LDR	LR, [SP, #0]
0x1246	0xB001    ADD	SP, SP, #4
0x1248	0x4770    BX	LR
0x124A	0xBF00    NOP
0x124C	0x50004000  	UART5_SR+0
; end of _UART5_Write
_applicationInit:
;Click_Equalizer_STM.c, 125 :: 		void applicationInit()
0x18E0	0xB081    SUB	SP, SP, #4
0x18E2	0xF8CDE000  STR	LR, [SP, #0]
;Click_Equalizer_STM.c, 127 :: 		eqalizer_i2cDriverInit( (T_EQUALIZER_P)&_MIKROBUS1_GPIO, (T_EQUALIZER_P)&_MIKROBUS1_I2C, _EQUALIZER_DEVICE_SLAVE_ADDRESS_11 );
0x18E6	0x2246    MOVS	R2, __EQUALIZER_DEVICE_SLAVE_ADDRESS_11
0x18E8	0x4911    LDR	R1, [PC, #68]
0x18EA	0x4812    LDR	R0, [PC, #72]
0x18EC	0xF7FFFF60  BL	_eqalizer_i2cDriverInit+0
;Click_Equalizer_STM.c, 128 :: 		equalizer_defaultConfiguration();
0x18F0	0xF7FFFEDA  BL	_equalizer_defaultConfiguration+0
;Click_Equalizer_STM.c, 129 :: 		mikrobus_logWrite(" --- START EQUALIZER --- ", _LOG_LINE);
0x18F4	0x4810    LDR	R0, [PC, #64]
0x18F6	0x2102    MOVS	R1, #2
0x18F8	0xF7FFFE84  BL	_mikrobus_logWrite+0
;Click_Equalizer_STM.c, 132 :: 		equalizer_setVolumePart(_EQUALIZER_CHANNEL_1, _EQUALIZER_SET_VOLUME_0dB, _EQUALIZER_SET_VOLUME_0dB);
0x18FC	0x2200    MOVS	R2, __EQUALIZER_SET_VOLUME_0dB
0x18FE	0x2100    MOVS	R1, __EQUALIZER_SET_VOLUME_0dB
0x1900	0x2080    MOVS	R0, __EQUALIZER_CHANNEL_1
0x1902	0xF7FFFCC3  BL	_equalizer_setVolumePart+0
;Click_Equalizer_STM.c, 133 :: 		equalizer_setVolumePart(_EQUALIZER_CHANNEL_2, _EQUALIZER_SET_VOLUME_0dB, _EQUALIZER_SET_VOLUME_0dB);
0x1906	0x2200    MOVS	R2, __EQUALIZER_SET_VOLUME_0dB
0x1908	0x2100    MOVS	R1, __EQUALIZER_SET_VOLUME_0dB
0x190A	0x2040    MOVS	R0, __EQUALIZER_CHANNEL_2
0x190C	0xF7FFFCBE  BL	_equalizer_setVolumePart+0
;Click_Equalizer_STM.c, 134 :: 		Delay_ms( 1000 );
0x1910	0xF64127FF  MOVW	R7, #6911
0x1914	0xF2C007B7  MOVT	R7, #183
L_applicationInit20:
0x1918	0x1E7F    SUBS	R7, R7, #1
0x191A	0xD1FD    BNE	L_applicationInit20
0x191C	0xBF00    NOP
0x191E	0xBF00    NOP
0x1920	0xBF00    NOP
0x1922	0xBF00    NOP
0x1924	0xBF00    NOP
;Click_Equalizer_STM.c, 135 :: 		}
L_end_applicationInit:
0x1926	0xF8DDE000  LDR	LR, [SP, #0]
0x192A	0xB001    ADD	SP, SP, #4
0x192C	0x4770    BX	LR
0x192E	0xBF00    NOP
0x1930	0x1E580000  	__MIKROBUS1_I2C+0
0x1934	0x1DDC0000  	__MIKROBUS1_GPIO+0
0x1938	0x00342000  	?lstr7_Click_Equalizer_STM+0
; end of _applicationInit
_eqalizer_i2cDriverInit:
;__eqalizer_driver.c, 87 :: 		void eqalizer_i2cDriverInit(T_EQUALIZER_P gpioObj, T_EQUALIZER_P i2cObj, uint8_t slave)
; slave start address is: 8 (R2)
; i2cObj start address is: 4 (R1)
; gpioObj start address is: 0 (R0)
0x17B0	0xB081    SUB	SP, SP, #4
0x17B2	0xF8CDE000  STR	LR, [SP, #0]
0x17B6	0x4604    MOV	R4, R0
; slave end address is: 8 (R2)
; i2cObj end address is: 4 (R1)
; gpioObj end address is: 0 (R0)
; gpioObj start address is: 16 (R4)
; i2cObj start address is: 4 (R1)
; slave start address is: 8 (R2)
;__eqalizer_driver.c, 89 :: 		_slaveAddress = slave;
0x17B8	0x4B05    LDR	R3, [PC, #20]
0x17BA	0x701A    STRB	R2, [R3, #0]
; slave end address is: 8 (R2)
;__eqalizer_driver.c, 90 :: 		hal_i2cMap( (T_HAL_P)i2cObj );
0x17BC	0x4608    MOV	R0, R1
; i2cObj end address is: 4 (R1)
0x17BE	0xF7FFFD97  BL	__eqalizer_driver_hal_i2cMap+0
;__eqalizer_driver.c, 91 :: 		hal_gpioMap( (T_HAL_P)gpioObj );
0x17C2	0x4620    MOV	R0, R4
; gpioObj end address is: 16 (R4)
0x17C4	0xF7FFFDBE  BL	__eqalizer_driver_hal_gpioMap+0
;__eqalizer_driver.c, 92 :: 		}
L_end_eqalizer_i2cDriverInit:
0x17C8	0xF8DDE000  LDR	LR, [SP, #0]
0x17CC	0xB001    ADD	SP, SP, #4
0x17CE	0x4770    BX	LR
0x17D0	0x00862000  	__eqalizer_driver__slaveAddress+0
; end of _eqalizer_i2cDriverInit
__eqalizer_driver_hal_i2cMap:
;__hal_stm32.c, 82 :: 		static void hal_i2cMap(T_HAL_P i2cObj)
; i2cObj start address is: 0 (R0)
; i2cObj end address is: 0 (R0)
; i2cObj start address is: 0 (R0)
;__hal_stm32.c, 86 :: 		fp_i2cStart    = tmp->i2cStart;
0x12F0	0x6802    LDR	R2, [R0, #0]
0x12F2	0x4906    LDR	R1, [PC, #24]
0x12F4	0x600A    STR	R2, [R1, #0]
;__hal_stm32.c, 87 :: 		fp_i2cWrite    = tmp->i2cWrite;
0x12F6	0x1D01    ADDS	R1, R0, #4
0x12F8	0x680A    LDR	R2, [R1, #0]
0x12FA	0x4905    LDR	R1, [PC, #20]
0x12FC	0x600A    STR	R2, [R1, #0]
;__hal_stm32.c, 88 :: 		fp_i2cRead     = tmp->i2cRead;
0x12FE	0xF2000108  ADDW	R1, R0, #8
; i2cObj end address is: 0 (R0)
0x1302	0x680A    LDR	R2, [R1, #0]
0x1304	0x4903    LDR	R1, [PC, #12]
0x1306	0x600A    STR	R2, [R1, #0]
;__hal_stm32.c, 89 :: 		}
L_end_hal_i2cMap:
0x1308	0x4770    BX	LR
0x130A	0xBF00    NOP
0x130C	0x00B42000  	__eqalizer_driver_fp_i2cStart+0
0x1310	0x00B82000  	__eqalizer_driver_fp_i2cWrite+0
0x1314	0x00BC2000  	__eqalizer_driver_fp_i2cRead+0
; end of __eqalizer_driver_hal_i2cMap
__eqalizer_driver_hal_gpioMap:
;__eqalizer_hal.c, 321 :: 		static void hal_gpioMap(T_HAL_P gpioObj)
;__eqalizer_hal.c, 397 :: 		}
L_end_hal_gpioMap:
0x1344	0x4770    BX	LR
; end of __eqalizer_driver_hal_gpioMap
_equalizer_defaultConfiguration:
;__eqalizer_driver.c, 154 :: 		void equalizer_defaultConfiguration()
0x16A8	0xB081    SUB	SP, SP, #4
0x16AA	0xF8CDE000  STR	LR, [SP, #0]
;__eqalizer_driver.c, 156 :: 		Delay_ms( 300 );
0x16AE	0xF64E677F  MOVW	R7, #61055
0x16B2	0xF2C00736  MOVT	R7, #54
0x16B6	0xBF00    NOP
0x16B8	0xBF00    NOP
L_equalizer_defaultConfiguration0:
0x16BA	0x1E7F    SUBS	R7, R7, #1
0x16BC	0xD1FD    BNE	L_equalizer_defaultConfiguration0
0x16BE	0xBF00    NOP
0x16C0	0xBF00    NOP
0x16C2	0xBF00    NOP
;__eqalizer_driver.c, 157 :: 		equalizer_clear();
0x16C4	0xF7FFFE28  BL	_equalizer_clear+0
;__eqalizer_driver.c, 159 :: 		equalizer_setVolumePart(_EQUALIZER_CHANNEL_1, _EQUALIZER_SET_VOLUME_0dB, _EQUALIZER_SET_VOLUME_0dB);
0x16C8	0x2200    MOVS	R2, #0
0x16CA	0x2100    MOVS	R1, #0
0x16CC	0x2080    MOVS	R0, #128
0x16CE	0xF7FFFDDD  BL	_equalizer_setVolumePart+0
;__eqalizer_driver.c, 160 :: 		equalizer_setVolumePart(_EQUALIZER_CHANNEL_2, _EQUALIZER_SET_VOLUME_0dB, _EQUALIZER_SET_VOLUME_0dB);
0x16D2	0x2200    MOVS	R2, #0
0x16D4	0x2100    MOVS	R1, #0
0x16D6	0x2040    MOVS	R0, #64
0x16D8	0xF7FFFDD8  BL	_equalizer_setVolumePart+0
;__eqalizer_driver.c, 161 :: 		equalizer_setVolumePart(_EQUALIZER_CHANNEL_3, _EQUALIZER_SET_VOLUME_0dB, _EQUALIZER_SET_VOLUME_0dB);
0x16DC	0x2200    MOVS	R2, #0
0x16DE	0x2100    MOVS	R1, #0
0x16E0	0x2000    MOVS	R0, #0
0x16E2	0xF7FFFDD3  BL	_equalizer_setVolumePart+0
;__eqalizer_driver.c, 162 :: 		equalizer_setVolumePart(_EQUALIZER_CHANNEL_4, _EQUALIZER_SET_VOLUME_0dB, _EQUALIZER_SET_VOLUME_0dB);
0x16E6	0x2200    MOVS	R2, #0
0x16E8	0x2100    MOVS	R1, #0
0x16EA	0x2020    MOVS	R0, #32
0x16EC	0xF7FFFDCE  BL	_equalizer_setVolumePart+0
;__eqalizer_driver.c, 163 :: 		equalizer_setVolumePart(_EQUALIZER_CHANNEL_5, _EQUALIZER_SET_VOLUME_0dB, _EQUALIZER_SET_VOLUME_0dB);
0x16F0	0x2200    MOVS	R2, #0
0x16F2	0x2100    MOVS	R1, #0
0x16F4	0x2060    MOVS	R0, #96
0x16F6	0xF7FFFDC9  BL	_equalizer_setVolumePart+0
;__eqalizer_driver.c, 164 :: 		equalizer_setVolumePart(_EQUALIZER_CHANNEL_6, _EQUALIZER_SET_VOLUME_0dB, _EQUALIZER_SET_VOLUME_0dB);
0x16FA	0x2200    MOVS	R2, #0
0x16FC	0x2100    MOVS	R1, #0
0x16FE	0x20A0    MOVS	R0, #160
0x1700	0xF7FFFDC4  BL	_equalizer_setVolumePart+0
;__eqalizer_driver.c, 165 :: 		equalizer_setVolumePart(_EQUALIZER_ALL_CHANNEL, _EQUALIZER_SET_VOLUME_0dB, _EQUALIZER_SET_VOLUME_0dB);
0x1704	0x2200    MOVS	R2, #0
0x1706	0x2100    MOVS	R1, #0
0x1708	0x20C0    MOVS	R0, #192
0x170A	0xF7FFFDBF  BL	_equalizer_setVolumePart+0
;__eqalizer_driver.c, 167 :: 		equalizer_mute(_EQUALIZER_ALL_CHANNEL_UNMUTE);
0x170E	0x20F8    MOVS	R0, #248
0x1710	0xF7FFFDD8  BL	_equalizer_mute+0
;__eqalizer_driver.c, 168 :: 		}
L_end_equalizer_defaultConfiguration:
0x1714	0xF8DDE000  LDR	LR, [SP, #0]
0x1718	0xB001    ADD	SP, SP, #4
0x171A	0x4770    BX	LR
; end of _equalizer_defaultConfiguration
_equalizer_clear:
;__eqalizer_driver.c, 134 :: 		void equalizer_clear()
0x1318	0xB082    SUB	SP, SP, #8
0x131A	0xF8CDE000  STR	LR, [SP, #0]
;__eqalizer_driver.c, 138 :: 		writeReg[ 0 ] = _EQUALIZER_CLEAR_ALL;
0x131E	0xA901    ADD	R1, SP, #4
0x1320	0x20C0    MOVS	R0, #192
0x1322	0x7008    STRB	R0, [R1, #0]
;__eqalizer_driver.c, 140 :: 		hal_i2cStart();
0x1324	0xF7FFFF1E  BL	__eqalizer_driver_hal_i2cStart+0
;__eqalizer_driver.c, 141 :: 		hal_i2cWrite(_slaveAddress, writeReg, 1, END_MODE_STOP);
0x1328	0xA901    ADD	R1, SP, #4
0x132A	0x4805    LDR	R0, [PC, #20]
0x132C	0x7800    LDRB	R0, [R0, #0]
0x132E	0x2301    MOVS	R3, #1
0x1330	0x2201    MOVS	R2, #1
0x1332	0xF7FFFEE1  BL	__eqalizer_driver_hal_i2cWrite+0
;__eqalizer_driver.c, 142 :: 		}
L_end_equalizer_clear:
0x1336	0xF8DDE000  LDR	LR, [SP, #0]
0x133A	0xB002    ADD	SP, SP, #8
0x133C	0x4770    BX	LR
0x133E	0xBF00    NOP
0x1340	0x00862000  	__eqalizer_driver__slaveAddress+0
; end of _equalizer_clear
__eqalizer_driver_hal_i2cStart:
;__hal_stm32.c, 91 :: 		static int hal_i2cStart()
0x1164	0xB082    SUB	SP, SP, #8
0x1166	0xF8CDE000  STR	LR, [SP, #0]
;__hal_stm32.c, 93 :: 		int res = 0;
0x116A	0xF2400400  MOVW	R4, #0
0x116E	0xF8AD4004  STRH	R4, [SP, #4]
;__hal_stm32.c, 94 :: 		res |= fp_i2cStart();
0x1172	0x4C06    LDR	R4, [PC, #24]
0x1174	0x6824    LDR	R4, [R4, #0]
0x1176	0x47A0    BLX	R4
0x1178	0xF9BD1004  LDRSH	R1, [SP, #4]
0x117C	0xEA410000  ORR	R0, R1, R0, LSL #0
;__hal_stm32.c, 95 :: 		return res;
0x1180	0xB200    SXTH	R0, R0
;__hal_stm32.c, 96 :: 		}
L_end_hal_i2cStart:
0x1182	0xF8DDE000  LDR	LR, [SP, #0]
0x1186	0xB002    ADD	SP, SP, #8
0x1188	0x4770    BX	LR
0x118A	0xBF00    NOP
0x118C	0x00B42000  	__eqalizer_driver_fp_i2cStart+0
; end of __eqalizer_driver_hal_i2cStart
_I2C1_Start:
;__Lib_I2C_12.c, 536 :: 		
0x1078	0xB081    SUB	SP, SP, #4
0x107A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_I2C_12.c, 537 :: 		
0x107E	0x4803    LDR	R0, [PC, #12]
0x1080	0xF7FFFB14  BL	_I2Cx_Start+0
;__Lib_I2C_12.c, 538 :: 		
L_end_I2C1_Start:
0x1084	0xF8DDE000  LDR	LR, [SP, #0]
0x1088	0xB001    ADD	SP, SP, #4
0x108A	0x4770    BX	LR
0x108C	0x54004000  	I2C1_CR1+0
; end of _I2C1_Start
_I2Cx_Start:
;__Lib_I2C_12.c, 204 :: 		
; I2C_BASE start address is: 0 (R0)
0x06AC	0xB083    SUB	SP, SP, #12
0x06AE	0xF8CDE000  STR	LR, [SP, #0]
0x06B2	0x4603    MOV	R3, R0
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 12 (R3)
;__Lib_I2C_12.c, 205 :: 		
; timeout start address is: 0 (R0)
0x06B4	0xF04F0000  MOV	R0, #0
;__Lib_I2C_12.c, 208 :: 		
0x06B8	0x4926    LDR	R1, [PC, #152]
0x06BA	0x428B    CMP	R3, R1
0x06BC	0xD106    BNE	L_I2Cx_Start7
; timeout end address is: 0 (R0)
;__Lib_I2C_12.c, 209 :: 		
0x06BE	0x4926    LDR	R1, [PC, #152]
; timeout start address is: 16 (R4)
0x06C0	0x680C    LDR	R4, [R1, #0]
;__Lib_I2C_12.c, 210 :: 		
0x06C2	0x4926    LDR	R1, [PC, #152]
0x06C4	0x680A    LDR	R2, [R1, #0]
0x06C6	0x4926    LDR	R1, [PC, #152]
0x06C8	0x600A    STR	R2, [R1, #0]
;__Lib_I2C_12.c, 211 :: 		
; timeout end address is: 16 (R4)
0x06CA	0xE00B    B	L_I2Cx_Start8
L_I2Cx_Start7:
;__Lib_I2C_12.c, 212 :: 		
; timeout start address is: 0 (R0)
0x06CC	0x4925    LDR	R1, [PC, #148]
0x06CE	0x428B    CMP	R3, R1
0x06D0	0xD107    BNE	L__I2Cx_Start123
; timeout end address is: 0 (R0)
;__Lib_I2C_12.c, 213 :: 		
0x06D2	0x4925    LDR	R1, [PC, #148]
; timeout start address is: 0 (R0)
0x06D4	0x6808    LDR	R0, [R1, #0]
;__Lib_I2C_12.c, 214 :: 		
0x06D6	0x4925    LDR	R1, [PC, #148]
0x06D8	0x680A    LDR	R2, [R1, #0]
0x06DA	0x4921    LDR	R1, [PC, #132]
0x06DC	0x600A    STR	R2, [R1, #0]
; timeout end address is: 0 (R0)
0x06DE	0x4604    MOV	R4, R0
;__Lib_I2C_12.c, 215 :: 		
0x06E0	0xE000    B	L_I2Cx_Start9
L__I2Cx_Start123:
;__Lib_I2C_12.c, 212 :: 		
0x06E2	0x4604    MOV	R4, R0
;__Lib_I2C_12.c, 215 :: 		
L_I2Cx_Start9:
; timeout start address is: 16 (R4)
; timeout end address is: 16 (R4)
L_I2Cx_Start8:
;__Lib_I2C_12.c, 217 :: 		
; timeout start address is: 16 (R4)
0x06E4	0x4922    LDR	R1, [PC, #136]
0x06E6	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 219 :: 		
0x06E8	0x9401    STR	R4, [SP, #4]
0x06EA	0x9302    STR	R3, [SP, #8]
0x06EC	0x4618    MOV	R0, R3
0x06EE	0xF7FFFEFB  BL	__Lib_I2C_12_I2Cx_Wait_For_Idle+0
0x06F2	0x9B02    LDR	R3, [SP, #8]
0x06F4	0x9C01    LDR	R4, [SP, #4]
0x06F6	0xB910    CBNZ	R0, L_I2Cx_Start10
; I2C_BASE end address is: 12 (R3)
; timeout end address is: 16 (R4)
;__Lib_I2C_12.c, 220 :: 		
0x06F8	0xF64F70FF  MOVW	R0, #65535
0x06FC	0xE025    B	L_end_I2Cx_Start
;__Lib_I2C_12.c, 221 :: 		
L_I2Cx_Start10:
;__Lib_I2C_12.c, 224 :: 		
; timeout start address is: 16 (R4)
; I2C_BASE start address is: 12 (R3)
0x06FE	0x2201    MOVS	R2, #1
0x0700	0x6819    LDR	R1, [R3, #0]
0x0702	0xF3622108  BFI	R1, R2, #8, #1
0x0706	0x6019    STR	R1, [R3, #0]
;__Lib_I2C_12.c, 226 :: 		
0x0708	0xF2030114  ADDW	R1, R3, #20
0x070C	0x680A    LDR	R2, [R1, #0]
0x070E	0xF3C22140  UBFX	R1, R2, #9, #1
0x0712	0xB111    CBZ	R1, L_I2Cx_Start11
; I2C_BASE end address is: 12 (R3)
; timeout end address is: 16 (R4)
;__Lib_I2C_12.c, 227 :: 		
0x0714	0xF64F70FF  MOVW	R0, #65535
0x0718	0xE017    B	L_end_I2Cx_Start
;__Lib_I2C_12.c, 228 :: 		
L_I2Cx_Start11:
;__Lib_I2C_12.c, 229 :: 		
; timeout start address is: 16 (R4)
; I2C_BASE start address is: 12 (R3)
0x071A	0x4625    MOV	R5, R4
; timeout end address is: 16 (R4)
0x071C	0x461C    MOV	R4, R3
L_I2Cx_Start12:
; I2C_BASE end address is: 12 (R3)
; timeout start address is: 20 (R5)
; I2C_BASE start address is: 16 (R4)
0x071E	0x4915    LDR	R1, [PC, #84]
0x0720	0x4620    MOV	R0, R4
0x0722	0xF7FFFECF  BL	_ChekXForEvent+0
0x0726	0xB978    CBNZ	R0, L_I2Cx_Start13
;__Lib_I2C_12.c, 230 :: 		
0x0728	0x4911    LDR	R1, [PC, #68]
0x072A	0x6809    LDR	R1, [R1, #0]
0x072C	0xB159    CBZ	R1, L__I2Cx_Start124
;__Lib_I2C_12.c, 231 :: 		
0x072E	0xB935    CBNZ	R5, L_I2Cx_Start15
; I2C_BASE end address is: 16 (R4)
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 232 :: 		
0x0730	0x2006    MOVS	R0, #6
0x0732	0x4C0B    LDR	R4, [PC, #44]
0x0734	0x6824    LDR	R4, [R4, #0]
0x0736	0x47A0    BLX	R4
;__Lib_I2C_12.c, 233 :: 		
0x0738	0xF64F70FF  MOVW	R0, #65535
0x073C	0xE005    B	L_end_I2Cx_Start
;__Lib_I2C_12.c, 234 :: 		
L_I2Cx_Start15:
;__Lib_I2C_12.c, 235 :: 		
; timeout start address is: 20 (R5)
; I2C_BASE start address is: 16 (R4)
0x073E	0x1E69    SUBS	R1, R5, #1
; timeout end address is: 20 (R5)
; timeout start address is: 0 (R0)
0x0740	0x4608    MOV	R0, R1
; timeout end address is: 0 (R0)
0x0742	0x4605    MOV	R5, R0
;__Lib_I2C_12.c, 236 :: 		
0x0744	0xE7FF    B	L_I2Cx_Start14
L__I2Cx_Start124:
;__Lib_I2C_12.c, 230 :: 		
;__Lib_I2C_12.c, 236 :: 		
L_I2Cx_Start14:
;__Lib_I2C_12.c, 237 :: 		
; timeout start address is: 20 (R5)
; I2C_BASE end address is: 16 (R4)
; timeout end address is: 20 (R5)
0x0746	0xE7EA    B	L_I2Cx_Start12
L_I2Cx_Start13:
;__Lib_I2C_12.c, 238 :: 		
0x0748	0x2000    MOVS	R0, #0
;__Lib_I2C_12.c, 239 :: 		
L_end_I2Cx_Start:
0x074A	0xF8DDE000  LDR	LR, [SP, #0]
0x074E	0xB003    ADD	SP, SP, #12
0x0750	0x4770    BX	LR
0x0752	0xBF00    NOP
0x0754	0x54004000  	I2C1_CR1+0
0x0758	0x00882000  	__Lib_I2C_12__I2C1_TIMEOUT+0
0x075C	0x00C82000  	_I2C1_Timeout_Ptr+0
0x0760	0x00C42000  	_I2Cx_Timeout_Ptr+0
0x0764	0x58004000  	I2C2_CR1+0
0x0768	0x008C2000  	__Lib_I2C_12__I2C2_TIMEOUT+0
0x076C	0x00CC2000  	_I2C2_Timeout_Ptr+0
0x0770	0x00902000  	__Lib_I2C_12__I2Cx_TIMEOUT+0
0x0774	0x00010003  	#196609
; end of _I2Cx_Start
easymx_v7_STM32F107VC__setAN_1:
;__em_f107vc_gpio.c, 43 :: 		static void _setAN_1  (uint8_t value) 	{ GPIOA_ODR.B4  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0464	0x4901    LDR	R1, [PC, #4]
0x0466	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setAN_1:
0x0468	0x4770    BX	LR
0x046A	0xBF00    NOP
0x046C	0x01904221  	GPIOA_ODR+0
; end of easymx_v7_STM32F107VC__setAN_1
easymx_v7_STM32F107VC__setRST_1:
;__em_f107vc_gpio.c, 44 :: 		static void _setRST_1 (uint8_t value) 	{ GPIOC_ODR.B2  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0458	0x4901    LDR	R1, [PC, #4]
0x045A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRST_1:
0x045C	0x4770    BX	LR
0x045E	0xBF00    NOP
0x0460	0x01884222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setRST_1
easymx_v7_STM32F107VC__setCS_1:
;__em_f107vc_gpio.c, 45 :: 		static void _setCS_1  (uint8_t value) 	{ GPIOD_ODR.B13 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x044C	0x4901    LDR	R1, [PC, #4]
0x044E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setCS_1:
0x0450	0x4770    BX	LR
0x0452	0xBF00    NOP
0x0454	0x81B44222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setCS_1
easymx_v7_STM32F107VC__setSCK_1:
;__em_f107vc_gpio.c, 46 :: 		static void _setSCK_1 (uint8_t value) 	{ GPIOC_ODR.B10 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0470	0x4901    LDR	R1, [PC, #4]
0x0472	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCK_1:
0x0474	0x4770    BX	LR
0x0476	0xBF00    NOP
0x0478	0x01A84222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setSCK_1
easymx_v7_STM32F107VC__setMISO_1:
;__em_f107vc_gpio.c, 47 :: 		static void _setMISO_1(uint8_t value) 	{ GPIOC_ODR.B11 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0494	0x4901    LDR	R1, [PC, #4]
0x0496	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMISO_1:
0x0498	0x4770    BX	LR
0x049A	0xBF00    NOP
0x049C	0x01AC4222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMISO_1
easymx_v7_STM32F107VC__setMOSI_1:
;__em_f107vc_gpio.c, 48 :: 		static void _setMOSI_1(uint8_t value) 	{ GPIOC_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0488	0x4901    LDR	R1, [PC, #4]
0x048A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMOSI_1:
0x048C	0x4770    BX	LR
0x048E	0xBF00    NOP
0x0490	0x01B04222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMOSI_1
easymx_v7_STM32F107VC__setPWM_1:
;__em_f107vc_gpio.c, 49 :: 		static void _setPWM_1 (uint8_t value) 	{ GPIOA_ODR.B0  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x047C	0x4901    LDR	R1, [PC, #4]
0x047E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setPWM_1:
0x0480	0x4770    BX	LR
0x0482	0xBF00    NOP
0x0484	0x01804221  	GPIOA_ODR+0
; end of easymx_v7_STM32F107VC__setPWM_1
easymx_v7_STM32F107VC__setINT_1:
;__em_f107vc_gpio.c, 50 :: 		static void _setINT_1 (uint8_t value) 	{ GPIOD_ODR.B10 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0440	0x4901    LDR	R1, [PC, #4]
0x0442	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setINT_1:
0x0444	0x4770    BX	LR
0x0446	0xBF00    NOP
0x0448	0x81A84222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setINT_1
easymx_v7_STM32F107VC__setRX_1:
;__em_f107vc_gpio.c, 51 :: 		static void _setRX_1  (uint8_t value) 	{ GPIOD_ODR.B9  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0404	0x4901    LDR	R1, [PC, #4]
0x0406	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRX_1:
0x0408	0x4770    BX	LR
0x040A	0xBF00    NOP
0x040C	0x81A44222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setRX_1
easymx_v7_STM32F107VC__setTX_1:
;__em_f107vc_gpio.c, 52 :: 		static void _setTX_1  (uint8_t value) 	{ GPIOD_ODR.B8  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0410	0x4901    LDR	R1, [PC, #4]
0x0412	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setTX_1:
0x0414	0x4770    BX	LR
0x0416	0xBF00    NOP
0x0418	0x81A04222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setTX_1
easymx_v7_STM32F107VC__setSCL_1:
;__em_f107vc_gpio.c, 53 :: 		static void _setSCL_1 (uint8_t value) 	{ GPIOB_ODR.B6  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0434	0x4901    LDR	R1, [PC, #4]
0x0436	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCL_1:
0x0438	0x4770    BX	LR
0x043A	0xBF00    NOP
0x043C	0x81984221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSCL_1
easymx_v7_STM32F107VC__setSDA_1:
;__em_f107vc_gpio.c, 54 :: 		static void _setSDA_1 (uint8_t value) 	{ GPIOB_ODR.B7  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0428	0x4901    LDR	R1, [PC, #4]
0x042A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSDA_1:
0x042C	0x4770    BX	LR
0x042E	0xBF00    NOP
0x0430	0x819C4221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSDA_1
easymx_v7_STM32F107VC__setAN_2:
;__em_f107vc_gpio.c, 68 :: 		static void _setAN_2  (uint8_t value)   { GPIOA_ODR.B5  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x041C	0x4901    LDR	R1, [PC, #4]
0x041E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setAN_2:
0x0420	0x4770    BX	LR
0x0422	0xBF00    NOP
0x0424	0x01944221  	GPIOA_ODR+0
; end of easymx_v7_STM32F107VC__setAN_2
easymx_v7_STM32F107VC__setRST_2:
;__em_f107vc_gpio.c, 69 :: 		static void _setRST_2 (uint8_t value)   { GPIOC_ODR.B3  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x05A8	0x4901    LDR	R1, [PC, #4]
0x05AA	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRST_2:
0x05AC	0x4770    BX	LR
0x05AE	0xBF00    NOP
0x05B0	0x018C4222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setRST_2
easymx_v7_STM32F107VC__setCS_2:
;__em_f107vc_gpio.c, 70 :: 		static void _setCS_2  (uint8_t value)   { GPIOD_ODR.B14 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x059C	0x4901    LDR	R1, [PC, #4]
0x059E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setCS_2:
0x05A0	0x4770    BX	LR
0x05A2	0xBF00    NOP
0x05A4	0x81B84222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setCS_2
easymx_v7_STM32F107VC__setSCK_2:
;__em_f107vc_gpio.c, 71 :: 		static void _setSCK_2 (uint8_t value)   { GPIOC_ODR.B10 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0590	0x4901    LDR	R1, [PC, #4]
0x0592	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCK_2:
0x0594	0x4770    BX	LR
0x0596	0xBF00    NOP
0x0598	0x01A84222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setSCK_2
easymx_v7_STM32F107VC__setMISO_2:
;__em_f107vc_gpio.c, 72 :: 		static void _setMISO_2(uint8_t value)   { GPIOC_ODR.B11 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x05CC	0x4901    LDR	R1, [PC, #4]
0x05CE	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMISO_2:
0x05D0	0x4770    BX	LR
0x05D2	0xBF00    NOP
0x05D4	0x01AC4222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMISO_2
easymx_v7_STM32F107VC__setMOSI_2:
;__em_f107vc_gpio.c, 73 :: 		static void _setMOSI_2(uint8_t value)   { GPIOC_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x05C0	0x4901    LDR	R1, [PC, #4]
0x05C2	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMOSI_2:
0x05C4	0x4770    BX	LR
0x05C6	0xBF00    NOP
0x05C8	0x01B04222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMOSI_2
easymx_v7_STM32F107VC__setPWM_2:
;__em_f107vc_gpio.c, 74 :: 		static void _setPWM_2 (uint8_t value)   { GPIOD_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x05B4	0x4901    LDR	R1, [PC, #4]
0x05B6	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setPWM_2:
0x05B8	0x4770    BX	LR
0x05BA	0xBF00    NOP
0x05BC	0x81B04222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setPWM_2
easymx_v7_STM32F107VC__setINT_2:
;__em_f107vc_gpio.c, 75 :: 		static void _setINT_2 (uint8_t value)   { GPIOD_ODR.B11 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0584	0x4901    LDR	R1, [PC, #4]
0x0586	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setINT_2:
0x0588	0x4770    BX	LR
0x058A	0xBF00    NOP
0x058C	0x81AC4222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setINT_2
easymx_v7_STM32F107VC__setRX_2:
;__em_f107vc_gpio.c, 76 :: 		static void _setRX_2  (uint8_t value)   { GPIOD_ODR.B6  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x04B8	0x4901    LDR	R1, [PC, #4]
0x04BA	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRX_2:
0x04BC	0x4770    BX	LR
0x04BE	0xBF00    NOP
0x04C0	0x81984222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setRX_2
easymx_v7_STM32F107VC__setTX_2:
;__em_f107vc_gpio.c, 77 :: 		static void _setTX_2  (uint8_t value)   { GPIOD_ODR.B5  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x04AC	0x4901    LDR	R1, [PC, #4]
0x04AE	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setTX_2:
0x04B0	0x4770    BX	LR
0x04B2	0xBF00    NOP
0x04B4	0x81944222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setTX_2
easymx_v7_STM32F107VC__setSCL_2:
;__em_f107vc_gpio.c, 78 :: 		static void _setSCL_2 (uint8_t value)   { GPIOB_ODR.B6  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x04A0	0x4901    LDR	R1, [PC, #4]
0x04A2	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCL_2:
0x04A4	0x4770    BX	LR
0x04A6	0xBF00    NOP
0x04A8	0x81984221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSCL_2
easymx_v7_STM32F107VC__setSDA_2:
;__em_f107vc_gpio.c, 79 :: 		static void _setSDA_2 (uint8_t value)   { GPIOB_ODR.B7  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0578	0x4901    LDR	R1, [PC, #4]
0x057A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSDA_2:
0x057C	0x4770    BX	LR
0x057E	0xBF00    NOP
0x0580	0x819C4221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSDA_2
__Lib_I2C_12_I2Cx_Wait_For_Idle:
;__Lib_I2C_12.c, 172 :: 		
; I2C_BASE start address is: 0 (R0)
0x04E8	0xB081    SUB	SP, SP, #4
0x04EA	0xF8CDE000  STR	LR, [SP, #0]
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
;__Lib_I2C_12.c, 173 :: 		
; timeout start address is: 8 (R2)
0x04EE	0xF04F0200  MOV	R2, #0
;__Lib_I2C_12.c, 176 :: 		
0x04F2	0x4919    LDR	R1, [PC, #100]
0x04F4	0x4288    CMP	R0, R1
0x04F6	0xD107    BNE	L___Lib_I2C_12_I2Cx_Wait_For_Idle0
; timeout end address is: 8 (R2)
;__Lib_I2C_12.c, 177 :: 		
0x04F8	0x4918    LDR	R1, [PC, #96]
; timeout start address is: 12 (R3)
0x04FA	0x680B    LDR	R3, [R1, #0]
;__Lib_I2C_12.c, 178 :: 		
0x04FC	0x4918    LDR	R1, [PC, #96]
0x04FE	0x680A    LDR	R2, [R1, #0]
0x0500	0x4918    LDR	R1, [PC, #96]
0x0502	0x600A    STR	R2, [R1, #0]
;__Lib_I2C_12.c, 179 :: 		
0x0504	0x461C    MOV	R4, R3
; timeout end address is: 12 (R3)
0x0506	0xE00B    B	L___Lib_I2C_12_I2Cx_Wait_For_Idle1
L___Lib_I2C_12_I2Cx_Wait_For_Idle0:
;__Lib_I2C_12.c, 180 :: 		
; timeout start address is: 8 (R2)
0x0508	0x4917    LDR	R1, [PC, #92]
0x050A	0x4288    CMP	R0, R1
0x050C	0xD107    BNE	L___Lib_I2C_12_I2Cx_Wait_For_Idle121
; timeout end address is: 8 (R2)
;__Lib_I2C_12.c, 181 :: 		
0x050E	0x4917    LDR	R1, [PC, #92]
; timeout start address is: 12 (R3)
0x0510	0x680B    LDR	R3, [R1, #0]
;__Lib_I2C_12.c, 182 :: 		
0x0512	0x4917    LDR	R1, [PC, #92]
0x0514	0x680A    LDR	R2, [R1, #0]
0x0516	0x4913    LDR	R1, [PC, #76]
0x0518	0x600A    STR	R2, [R1, #0]
; timeout end address is: 12 (R3)
0x051A	0x461C    MOV	R4, R3
;__Lib_I2C_12.c, 183 :: 		
0x051C	0xE000    B	L___Lib_I2C_12_I2Cx_Wait_For_Idle2
L___Lib_I2C_12_I2Cx_Wait_For_Idle121:
;__Lib_I2C_12.c, 180 :: 		
0x051E	0x4614    MOV	R4, R2
;__Lib_I2C_12.c, 183 :: 		
L___Lib_I2C_12_I2Cx_Wait_For_Idle2:
; timeout start address is: 16 (R4)
; timeout end address is: 16 (R4)
L___Lib_I2C_12_I2Cx_Wait_For_Idle1:
;__Lib_I2C_12.c, 185 :: 		
; timeout start address is: 16 (R4)
0x0520	0x4914    LDR	R1, [PC, #80]
0x0522	0x600C    STR	R4, [R1, #0]
; I2C_BASE end address is: 0 (R0)
; timeout end address is: 16 (R4)
0x0524	0x4603    MOV	R3, R0
;__Lib_I2C_12.c, 187 :: 		
L___Lib_I2C_12_I2Cx_Wait_For_Idle3:
; timeout start address is: 16 (R4)
; I2C_BASE start address is: 12 (R3)
0x0526	0x4618    MOV	R0, R3
0x0528	0xF7FFFF52  BL	_I2Cx_Is_Idle+0
0x052C	0xB970    CBNZ	R0, L___Lib_I2C_12_I2Cx_Wait_For_Idle4
;__Lib_I2C_12.c, 188 :: 		
0x052E	0x4911    LDR	R1, [PC, #68]
0x0530	0x6809    LDR	R1, [R1, #0]
0x0532	0xB151    CBZ	R1, L___Lib_I2C_12_I2Cx_Wait_For_Idle122
;__Lib_I2C_12.c, 189 :: 		
0x0534	0xB92C    CBNZ	R4, L___Lib_I2C_12_I2Cx_Wait_For_Idle6
; I2C_BASE end address is: 12 (R3)
; timeout end address is: 16 (R4)
;__Lib_I2C_12.c, 190 :: 		
0x0536	0x2005    MOVS	R0, #5
0x0538	0x4C0A    LDR	R4, [PC, #40]
0x053A	0x6824    LDR	R4, [R4, #0]
0x053C	0x47A0    BLX	R4
;__Lib_I2C_12.c, 191 :: 		
0x053E	0x2000    MOVS	R0, #0
0x0540	0xE005    B	L_end_I2Cx_Wait_For_Idle
;__Lib_I2C_12.c, 192 :: 		
L___Lib_I2C_12_I2Cx_Wait_For_Idle6:
;__Lib_I2C_12.c, 193 :: 		
; timeout start address is: 16 (R4)
; I2C_BASE start address is: 12 (R3)
0x0542	0x1E61    SUBS	R1, R4, #1
; timeout end address is: 16 (R4)
; timeout start address is: 0 (R0)
0x0544	0x4608    MOV	R0, R1
; timeout end address is: 0 (R0)
0x0546	0x4604    MOV	R4, R0
;__Lib_I2C_12.c, 194 :: 		
0x0548	0xE7FF    B	L___Lib_I2C_12_I2Cx_Wait_For_Idle5
L___Lib_I2C_12_I2Cx_Wait_For_Idle122:
;__Lib_I2C_12.c, 188 :: 		
;__Lib_I2C_12.c, 194 :: 		
L___Lib_I2C_12_I2Cx_Wait_For_Idle5:
;__Lib_I2C_12.c, 195 :: 		
; timeout start address is: 16 (R4)
; I2C_BASE end address is: 12 (R3)
; timeout end address is: 16 (R4)
0x054A	0xE7EC    B	L___Lib_I2C_12_I2Cx_Wait_For_Idle3
L___Lib_I2C_12_I2Cx_Wait_For_Idle4:
;__Lib_I2C_12.c, 196 :: 		
0x054C	0x2001    MOVS	R0, #1
;__Lib_I2C_12.c, 197 :: 		
L_end_I2Cx_Wait_For_Idle:
0x054E	0xF8DDE000  LDR	LR, [SP, #0]
0x0552	0xB001    ADD	SP, SP, #4
0x0554	0x4770    BX	LR
0x0556	0xBF00    NOP
0x0558	0x54004000  	I2C1_CR1+0
0x055C	0x00882000  	__Lib_I2C_12__I2C1_TIMEOUT+0
0x0560	0x00C82000  	_I2C1_Timeout_Ptr+0
0x0564	0x00C42000  	_I2Cx_Timeout_Ptr+0
0x0568	0x58004000  	I2C2_CR1+0
0x056C	0x008C2000  	__Lib_I2C_12__I2C2_TIMEOUT+0
0x0570	0x00CC2000  	_I2C2_Timeout_Ptr+0
0x0574	0x00902000  	__Lib_I2C_12__I2Cx_TIMEOUT+0
; end of __Lib_I2C_12_I2Cx_Wait_For_Idle
_I2Cx_Is_Idle:
;__Lib_I2C_12.c, 167 :: 		
; I2C_BASE start address is: 0 (R0)
0x03D0	0xB081    SUB	SP, SP, #4
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
;__Lib_I2C_12.c, 168 :: 		
0x03D2	0xF2000118  ADDW	R1, R0, #24
; I2C_BASE end address is: 0 (R0)
0x03D6	0x680A    LDR	R2, [R1, #0]
0x03D8	0xF3C20140  UBFX	R1, R2, #1, #1
0x03DC	0xF0810101  EOR	R1, R1, #1
0x03E0	0xB2C9    UXTB	R1, R1
0x03E2	0xB2C8    UXTB	R0, R1
;__Lib_I2C_12.c, 169 :: 		
L_end_I2Cx_Is_Idle:
0x03E4	0xB001    ADD	SP, SP, #4
0x03E6	0x4770    BX	LR
; end of _I2Cx_Is_Idle
_ChekXForEvent:
;__Lib_I2C_12.c, 199 :: 		
; Event start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x04C4	0xB081    SUB	SP, SP, #4
0x04C6	0xF8CDE000  STR	LR, [SP, #0]
0x04CA	0x460B    MOV	R3, R1
; Event end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
; Event start address is: 12 (R3)
;__Lib_I2C_12.c, 200 :: 		
; I2C_BASE end address is: 0 (R0)
0x04CC	0xF7FFFF8C  BL	_I2Cx_Get_Status+0
0x04D0	0xEA000203  AND	R2, R0, R3, LSL #0
0x04D4	0x429A    CMP	R2, R3
0x04D6	0xF2400200  MOVW	R2, #0
0x04DA	0xD100    BNE	L__ChekXForEvent156
0x04DC	0x2201    MOVS	R2, #1
L__ChekXForEvent156:
; Event end address is: 12 (R3)
0x04DE	0xB2D0    UXTB	R0, R2
;__Lib_I2C_12.c, 201 :: 		
L_end_ChekXForEvent:
0x04E0	0xF8DDE000  LDR	LR, [SP, #0]
0x04E4	0xB001    ADD	SP, SP, #4
0x04E6	0x4770    BX	LR
; end of _ChekXForEvent
_I2Cx_Get_Status:
;__Lib_I2C_12.c, 154 :: 		
; I2C_BASE start address is: 0 (R0)
0x03E8	0xB081    SUB	SP, SP, #4
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
;__Lib_I2C_12.c, 157 :: 		
0x03EA	0xF2000114  ADDW	R1, R0, #20
0x03EE	0x680A    LDR	R2, [R1, #0]
;__Lib_I2C_12.c, 158 :: 		
0x03F0	0xF2000118  ADDW	R1, R0, #24
; I2C_BASE end address is: 0 (R0)
0x03F4	0x6809    LDR	R1, [R1, #0]
;__Lib_I2C_12.c, 160 :: 		
0x03F6	0x0409    LSLS	R1, R1, #16
0x03F8	0xEA420101  ORR	R1, R2, R1, LSL #0
0x03FC	0x4608    MOV	R0, R1
;__Lib_I2C_12.c, 161 :: 		
L_end_I2Cx_Get_Status:
0x03FE	0xB001    ADD	SP, SP, #4
0x0400	0x4770    BX	LR
; end of _I2Cx_Get_Status
_I2C2_Start:
;__Lib_I2C_12.c, 566 :: 		
0x0CC4	0xB081    SUB	SP, SP, #4
0x0CC6	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_I2C_12.c, 567 :: 		
0x0CCA	0x4803    LDR	R0, [PC, #12]
0x0CCC	0xF7FFFCEE  BL	_I2Cx_Start+0
;__Lib_I2C_12.c, 568 :: 		
L_end_I2C2_Start:
0x0CD0	0xF8DDE000  LDR	LR, [SP, #0]
0x0CD4	0xB001    ADD	SP, SP, #4
0x0CD6	0x4770    BX	LR
0x0CD8	0x58004000  	I2C2_CR1+0
; end of _I2C2_Start
_UART1_Read:
;__Lib_UART_123_45.c, 104 :: 		
0x0CAC	0xB081    SUB	SP, SP, #4
0x0CAE	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 105 :: 		
0x0CB2	0x4803    LDR	R0, [PC, #12]
0x0CB4	0xF7FFFCE2  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 106 :: 		
L_end_UART1_Read:
0x0CB8	0xF8DDE000  LDR	LR, [SP, #0]
0x0CBC	0xB001    ADD	SP, SP, #4
0x0CBE	0x4770    BX	LR
0x0CC0	0x38004001  	USART1_SR+0
; end of _UART1_Read
__Lib_UART_123_45_UARTx_Read:
;__Lib_UART_123_45.c, 96 :: 		
; UART_Base start address is: 0 (R0)
0x067C	0xB081    SUB	SP, SP, #4
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; UART_Base end address is: 0 (R0)
;__Lib_UART_123_45.c, 98 :: 		
L___Lib_UART_123_45_UARTx_Read4:
; UART_Base start address is: 0 (R0)
0x067E	0x6802    LDR	R2, [R0, #0]
0x0680	0xF3C21140  UBFX	R1, R2, #5, #1
0x0684	0xB901    CBNZ	R1, L___Lib_UART_123_45_UARTx_Read5
0x0686	0xE7FA    B	L___Lib_UART_123_45_UARTx_Read4
L___Lib_UART_123_45_UARTx_Read5:
;__Lib_UART_123_45.c, 101 :: 		
0x0688	0x1D01    ADDS	R1, R0, #4
; UART_Base end address is: 0 (R0)
0x068A	0x6809    LDR	R1, [R1, #0]
0x068C	0xB288    UXTH	R0, R1
;__Lib_UART_123_45.c, 102 :: 		
L_end_UARTx_Read:
0x068E	0xB001    ADD	SP, SP, #4
0x0690	0x4770    BX	LR
; end of __Lib_UART_123_45_UARTx_Read
_UART1_Data_Ready:
;__Lib_UART_123_45.c, 131 :: 		
0x0F20	0xB081    SUB	SP, SP, #4
0x0F22	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 132 :: 		
0x0F26	0x4803    LDR	R0, [PC, #12]
0x0F28	0xF7FFFBBA  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 133 :: 		
L_end_UART1_Data_Ready:
0x0F2C	0xF8DDE000  LDR	LR, [SP, #0]
0x0F30	0xB001    ADD	SP, SP, #4
0x0F32	0x4770    BX	LR
0x0F34	0x38004001  	USART1_SR+0
; end of _UART1_Data_Ready
__Lib_UART_123_45_UARTx_Data_Ready:
;__Lib_UART_123_45.c, 126 :: 		
; UART_Base start address is: 0 (R0)
0x06A0	0xB081    SUB	SP, SP, #4
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
;__Lib_UART_123_45.c, 128 :: 		
0x06A2	0x6801    LDR	R1, [R0, #0]
; UART_Base end address is: 0 (R0)
0x06A4	0xF3C11040  UBFX	R0, R1, #5, #1
;__Lib_UART_123_45.c, 129 :: 		
L_end_UARTx_Data_Ready:
0x06A8	0xB001    ADD	SP, SP, #4
0x06AA	0x4770    BX	LR
; end of __Lib_UART_123_45_UARTx_Data_Ready
_UART1_Tx_Idle:
;__Lib_UART_123_45.c, 212 :: 		
0x0AC8	0xB081    SUB	SP, SP, #4
0x0ACA	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 213 :: 		
0x0ACE	0x4803    LDR	R0, [PC, #12]
0x0AD0	0xF7FFFDE0  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 214 :: 		
L_end_UART1_Tx_Idle:
0x0AD4	0xF8DDE000  LDR	LR, [SP, #0]
0x0AD8	0xB001    ADD	SP, SP, #4
0x0ADA	0x4770    BX	LR
0x0ADC	0x38004001  	USART1_SR+0
; end of _UART1_Tx_Idle
__Lib_UART_123_45_UARTx_Tx_Idle:
;__Lib_UART_123_45.c, 208 :: 		
; UART_Base start address is: 0 (R0)
0x0694	0xB081    SUB	SP, SP, #4
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
;__Lib_UART_123_45.c, 209 :: 		
0x0696	0x6801    LDR	R1, [R0, #0]
; UART_Base end address is: 0 (R0)
0x0698	0xF3C11080  UBFX	R0, R1, #6, #1
;__Lib_UART_123_45.c, 210 :: 		
L_end_UARTx_Tx_Idle:
0x069C	0xB001    ADD	SP, SP, #4
0x069E	0x4770    BX	LR
; end of __Lib_UART_123_45_UARTx_Tx_Idle
_UART2_Read:
;__Lib_UART_123_45.c, 108 :: 		
0x0AF8	0xB081    SUB	SP, SP, #4
0x0AFA	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 109 :: 		
0x0AFE	0x4803    LDR	R0, [PC, #12]
0x0B00	0xF7FFFDBC  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 110 :: 		
L_end_UART2_Read:
0x0B04	0xF8DDE000  LDR	LR, [SP, #0]
0x0B08	0xB001    ADD	SP, SP, #4
0x0B0A	0x4770    BX	LR
0x0B0C	0x44004000  	USART2_SR+0
; end of _UART2_Read
_UART2_Data_Ready:
;__Lib_UART_123_45.c, 135 :: 		
0x0AE0	0xB081    SUB	SP, SP, #4
0x0AE2	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 136 :: 		
0x0AE6	0x4803    LDR	R0, [PC, #12]
0x0AE8	0xF7FFFDDA  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 137 :: 		
L_end_UART2_Data_Ready:
0x0AEC	0xF8DDE000  LDR	LR, [SP, #0]
0x0AF0	0xB001    ADD	SP, SP, #4
0x0AF2	0x4770    BX	LR
0x0AF4	0x44004000  	USART2_SR+0
; end of _UART2_Data_Ready
_UART2_Tx_Idle:
;__Lib_UART_123_45.c, 216 :: 		
0x1028	0xB081    SUB	SP, SP, #4
0x102A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 217 :: 		
0x102E	0x4803    LDR	R0, [PC, #12]
0x1030	0xF7FFFB30  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 218 :: 		
L_end_UART2_Tx_Idle:
0x1034	0xF8DDE000  LDR	LR, [SP, #0]
0x1038	0xB001    ADD	SP, SP, #4
0x103A	0x4770    BX	LR
0x103C	0x44004000  	USART2_SR+0
; end of _UART2_Tx_Idle
_UART3_Read:
;__Lib_UART_123_45.c, 112 :: 		
0x1010	0xB081    SUB	SP, SP, #4
0x1012	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 113 :: 		
0x1016	0x4803    LDR	R0, [PC, #12]
0x1018	0xF7FFFB30  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 114 :: 		
L_end_UART3_Read:
0x101C	0xF8DDE000  LDR	LR, [SP, #0]
0x1020	0xB001    ADD	SP, SP, #4
0x1022	0x4770    BX	LR
0x1024	0x48004000  	USART3_SR+0
; end of _UART3_Read
_UART3_Data_Ready:
;__Lib_UART_123_45.c, 139 :: 		
0x0FF8	0xB081    SUB	SP, SP, #4
0x0FFA	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 140 :: 		
0x0FFE	0x4803    LDR	R0, [PC, #12]
0x1000	0xF7FFFB4E  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 141 :: 		
L_end_UART3_Data_Ready:
0x1004	0xF8DDE000  LDR	LR, [SP, #0]
0x1008	0xB001    ADD	SP, SP, #4
0x100A	0x4770    BX	LR
0x100C	0x48004000  	USART3_SR+0
; end of _UART3_Data_Ready
_UART3_Tx_Idle:
;__Lib_UART_123_45.c, 220 :: 		
0x1090	0xB081    SUB	SP, SP, #4
0x1092	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 221 :: 		
0x1096	0x4803    LDR	R0, [PC, #12]
0x1098	0xF7FFFAFC  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 222 :: 		
L_end_UART3_Tx_Idle:
0x109C	0xF8DDE000  LDR	LR, [SP, #0]
0x10A0	0xB001    ADD	SP, SP, #4
0x10A2	0x4770    BX	LR
0x10A4	0x48004000  	USART3_SR+0
; end of _UART3_Tx_Idle
_UART4_Read:
;__Lib_UART_123_45.c, 116 :: 		
0x1060	0xB081    SUB	SP, SP, #4
0x1062	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 117 :: 		
0x1066	0x4803    LDR	R0, [PC, #12]
0x1068	0xF7FFFB08  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 118 :: 		
L_end_UART4_Read:
0x106C	0xF8DDE000  LDR	LR, [SP, #0]
0x1070	0xB001    ADD	SP, SP, #4
0x1072	0x4770    BX	LR
0x1074	0x4C004000  	UART4_SR+0
; end of _UART4_Read
_UART4_Data_Ready:
;__Lib_UART_123_45.c, 143 :: 		
0x0F68	0xB081    SUB	SP, SP, #4
0x0F6A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 144 :: 		
0x0F6E	0x4803    LDR	R0, [PC, #12]
0x0F70	0xF7FFFB96  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 145 :: 		
L_end_UART4_Data_Ready:
0x0F74	0xF8DDE000  LDR	LR, [SP, #0]
0x0F78	0xB001    ADD	SP, SP, #4
0x0F7A	0x4770    BX	LR
0x0F7C	0x4C004000  	UART4_SR+0
; end of _UART4_Data_Ready
_UART4_Tx_Idle:
;__Lib_UART_123_45.c, 224 :: 		
0x0F50	0xB081    SUB	SP, SP, #4
0x0F52	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 225 :: 		
0x0F56	0x4803    LDR	R0, [PC, #12]
0x0F58	0xF7FFFB9C  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 226 :: 		
L_end_UART4_Tx_Idle:
0x0F5C	0xF8DDE000  LDR	LR, [SP, #0]
0x0F60	0xB001    ADD	SP, SP, #4
0x0F62	0x4770    BX	LR
0x0F64	0x4C004000  	UART4_SR+0
; end of _UART4_Tx_Idle
_UART5_Read:
;__Lib_UART_123_45.c, 120 :: 		
0x0F38	0xB081    SUB	SP, SP, #4
0x0F3A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 121 :: 		
0x0F3E	0x4803    LDR	R0, [PC, #12]
0x0F40	0xF7FFFB9C  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 122 :: 		
L_end_UART5_Read:
0x0F44	0xF8DDE000  LDR	LR, [SP, #0]
0x0F48	0xB001    ADD	SP, SP, #4
0x0F4A	0x4770    BX	LR
0x0F4C	0x50004000  	UART5_SR+0
; end of _UART5_Read
_UART5_Data_Ready:
;__Lib_UART_123_45.c, 147 :: 		
0x0F80	0xB081    SUB	SP, SP, #4
0x0F82	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 148 :: 		
0x0F86	0x4803    LDR	R0, [PC, #12]
0x0F88	0xF7FFFB8A  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 149 :: 		
L_end_UART5_Data_Ready:
0x0F8C	0xF8DDE000  LDR	LR, [SP, #0]
0x0F90	0xB001    ADD	SP, SP, #4
0x0F92	0x4770    BX	LR
0x0F94	0x50004000  	UART5_SR+0
; end of _UART5_Data_Ready
_UART5_Tx_Idle:
;__Lib_UART_123_45.c, 228 :: 		
0x0FE0	0xB081    SUB	SP, SP, #4
0x0FE2	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 229 :: 		
0x0FE6	0x4803    LDR	R0, [PC, #12]
0x0FE8	0xF7FFFB54  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 230 :: 		
L_end_UART5_Tx_Idle:
0x0FEC	0xF8DDE000  LDR	LR, [SP, #0]
0x0FF0	0xB001    ADD	SP, SP, #4
0x0FF2	0x4770    BX	LR
0x0FF4	0x50004000  	UART5_SR+0
; end of _UART5_Tx_Idle
__eqalizer_driver_hal_i2cWrite:
;__hal_stm32.c, 98 :: 		static int hal_i2cWrite(uint8_t slaveAddress, uint8_t *pBuf, uint16_t nBytes, uint8_t endMode)
; endMode start address is: 12 (R3)
; nBytes start address is: 8 (R2)
; pBuf start address is: 4 (R1)
; slaveAddress start address is: 0 (R0)
0x10F8	0xB082    SUB	SP, SP, #8
0x10FA	0xF8CDE000  STR	LR, [SP, #0]
; endMode end address is: 12 (R3)
; nBytes end address is: 8 (R2)
; pBuf end address is: 4 (R1)
; slaveAddress end address is: 0 (R0)
; slaveAddress start address is: 0 (R0)
; pBuf start address is: 4 (R1)
; nBytes start address is: 8 (R2)
; endMode start address is: 12 (R3)
;__hal_stm32.c, 100 :: 		int res = 0;
0x10FE	0xF2400400  MOVW	R4, #0
0x1102	0xF8AD4004  STRH	R4, [SP, #4]
;__hal_stm32.c, 102 :: 		res |= fp_i2cWrite(slaveAddress, ptr, nBytes, endMode);
; endMode end address is: 12 (R3)
; nBytes end address is: 8 (R2)
; pBuf end address is: 4 (R1)
; slaveAddress end address is: 0 (R0)
0x1106	0x4C05    LDR	R4, [PC, #20]
0x1108	0x6824    LDR	R4, [R4, #0]
0x110A	0x47A0    BLX	R4
0x110C	0xF9BD4004  LDRSH	R4, [SP, #4]
0x1110	0x4304    ORRS	R4, R0
;__hal_stm32.c, 103 :: 		return res;
0x1112	0xB220    SXTH	R0, R4
;__hal_stm32.c, 104 :: 		}
L_end_hal_i2cWrite:
0x1114	0xF8DDE000  LDR	LR, [SP, #0]
0x1118	0xB002    ADD	SP, SP, #8
0x111A	0x4770    BX	LR
0x111C	0x00B82000  	__eqalizer_driver_fp_i2cWrite+0
; end of __eqalizer_driver_hal_i2cWrite
_I2C1_Write:
;__Lib_I2C_12.c, 556 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x0FBC	0xB081    SUB	SP, SP, #4
0x0FBE	0xF8CDE000  STR	LR, [SP, #0]
; END_mode end address is: 12 (R3)
; count end address is: 8 (R2)
; buf end address is: 4 (R1)
; slave_address end address is: 0 (R0)
; slave_address start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
;__Lib_I2C_12.c, 557 :: 		
0x0FC2	0xB408    PUSH	(R3)
; count end address is: 8 (R2)
0x0FC4	0x4613    MOV	R3, R2
0x0FC6	0x460A    MOV	R2, R1
; buf end address is: 4 (R1)
0x0FC8	0xB2C1    UXTB	R1, R0
; slave_address end address is: 0 (R0)
0x0FCA	0x4804    LDR	R0, [PC, #16]
; END_mode end address is: 12 (R3)
0x0FCC	0xF7FFFCB0  BL	_I2Cx_Write+0
0x0FD0	0xB001    ADD	SP, SP, #4
;__Lib_I2C_12.c, 558 :: 		
L_end_I2C1_Write:
0x0FD2	0xF8DDE000  LDR	LR, [SP, #0]
0x0FD6	0xB001    ADD	SP, SP, #4
0x0FD8	0x4770    BX	LR
0x0FDA	0xBF00    NOP
0x0FDC	0x54004000  	I2C1_CR1+0
; end of _I2C1_Write
_I2Cx_Write:
;__Lib_I2C_12.c, 245 :: 		
; count start address is: 12 (R3)
; buf start address is: 8 (R2)
; slave_address start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x0930	0xB082    SUB	SP, SP, #8
0x0932	0xF8CDE000  STR	LR, [SP, #0]
; count end address is: 12 (R3)
; buf end address is: 8 (R2)
; slave_address end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
; slave_address start address is: 4 (R1)
; buf start address is: 8 (R2)
; count start address is: 12 (R3)
; END_mode start address is: 24 (R6)
0x0936	0x9E02    LDR	R6, [SP, #8]
;__Lib_I2C_12.c, 247 :: 		
; timeout start address is: 20 (R5)
0x0938	0xF04F0500  MOV	R5, #0
;__Lib_I2C_12.c, 250 :: 		
0x093C	0x4C56    LDR	R4, [PC, #344]
0x093E	0x42A0    CMP	R0, R4
0x0940	0xD106    BNE	L_I2Cx_Write16
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 251 :: 		
0x0942	0x4C56    LDR	R4, [PC, #344]
; timeout start address is: 28 (R7)
0x0944	0x6827    LDR	R7, [R4, #0]
;__Lib_I2C_12.c, 252 :: 		
0x0946	0x4C56    LDR	R4, [PC, #344]
0x0948	0x6825    LDR	R5, [R4, #0]
0x094A	0x4C56    LDR	R4, [PC, #344]
0x094C	0x6025    STR	R5, [R4, #0]
;__Lib_I2C_12.c, 253 :: 		
; timeout end address is: 28 (R7)
0x094E	0xE00A    B	L_I2Cx_Write17
L_I2Cx_Write16:
;__Lib_I2C_12.c, 254 :: 		
; timeout start address is: 20 (R5)
0x0950	0x4C55    LDR	R4, [PC, #340]
0x0952	0x42A0    CMP	R0, R4
0x0954	0xD106    BNE	L__I2Cx_Write125
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 255 :: 		
0x0956	0x4C55    LDR	R4, [PC, #340]
; timeout start address is: 28 (R7)
0x0958	0x6827    LDR	R7, [R4, #0]
;__Lib_I2C_12.c, 256 :: 		
0x095A	0x4C55    LDR	R4, [PC, #340]
0x095C	0x6825    LDR	R5, [R4, #0]
0x095E	0x4C51    LDR	R4, [PC, #324]
0x0960	0x6025    STR	R5, [R4, #0]
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 257 :: 		
0x0962	0xE000    B	L_I2Cx_Write18
L__I2Cx_Write125:
;__Lib_I2C_12.c, 254 :: 		
0x0964	0x462F    MOV	R7, R5
;__Lib_I2C_12.c, 257 :: 		
L_I2Cx_Write18:
; timeout start address is: 28 (R7)
; timeout end address is: 28 (R7)
L_I2Cx_Write17:
;__Lib_I2C_12.c, 259 :: 		
; timeout start address is: 28 (R7)
0x0966	0x4C53    LDR	R4, [PC, #332]
0x0968	0x6027    STR	R7, [R4, #0]
;__Lib_I2C_12.c, 261 :: 		
0x096A	0xF2000510  ADDW	R5, R0, #16
0x096E	0x004C    LSLS	R4, R1, #1
0x0970	0xB2A4    UXTH	R4, R4
; slave_address end address is: 4 (R1)
0x0972	0x602C    STR	R4, [R5, #0]
; I2C_BASE end address is: 0 (R0)
; buf end address is: 8 (R2)
; count end address is: 12 (R3)
; END_mode end address is: 24 (R6)
; timeout end address is: 28 (R7)
0x0974	0x46B9    MOV	R9, R7
0x0976	0x4607    MOV	R7, R0
0x0978	0x4690    MOV	R8, R2
0x097A	0x4635    MOV	R5, R6
0x097C	0x461E    MOV	R6, R3
;__Lib_I2C_12.c, 262 :: 		
L_I2Cx_Write19:
; timeout start address is: 36 (R9)
; END_mode start address is: 20 (R5)
; count start address is: 24 (R6)
; buf start address is: 32 (R8)
; I2C_BASE start address is: 28 (R7)
0x097E	0x494E    LDR	R1, [PC, #312]
0x0980	0x4638    MOV	R0, R7
0x0982	0xF7FFFD9F  BL	_ChekXForEvent+0
0x0986	0xB988    CBNZ	R0, L_I2Cx_Write20
;__Lib_I2C_12.c, 263 :: 		
0x0988	0x4C4A    LDR	R4, [PC, #296]
0x098A	0x6824    LDR	R4, [R4, #0]
0x098C	0xB16C    CBZ	R4, L__I2Cx_Write126
;__Lib_I2C_12.c, 264 :: 		
0x098E	0xF1B90F00  CMP	R9, #0
0x0992	0xD106    BNE	L_I2Cx_Write22
; count end address is: 24 (R6)
; I2C_BASE end address is: 28 (R7)
; buf end address is: 32 (R8)
; timeout end address is: 36 (R9)
; END_mode end address is: 20 (R5)
;__Lib_I2C_12.c, 265 :: 		
0x0994	0x2004    MOVS	R0, #4
0x0996	0x4C43    LDR	R4, [PC, #268]
0x0998	0x6824    LDR	R4, [R4, #0]
0x099A	0x47A0    BLX	R4
;__Lib_I2C_12.c, 266 :: 		
0x099C	0xF64F70FF  MOVW	R0, #65535
0x09A0	0xE076    B	L_end_I2Cx_Write
;__Lib_I2C_12.c, 267 :: 		
L_I2Cx_Write22:
;__Lib_I2C_12.c, 268 :: 		
; END_mode start address is: 20 (R5)
; timeout start address is: 36 (R9)
; buf start address is: 32 (R8)
; I2C_BASE start address is: 28 (R7)
; count start address is: 24 (R6)
0x09A2	0xF1A90001  SUB	R0, R9, #1
; timeout end address is: 36 (R9)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x09A6	0x4681    MOV	R9, R0
;__Lib_I2C_12.c, 269 :: 		
0x09A8	0xE7FF    B	L_I2Cx_Write21
L__I2Cx_Write126:
;__Lib_I2C_12.c, 263 :: 		
;__Lib_I2C_12.c, 269 :: 		
L_I2Cx_Write21:
;__Lib_I2C_12.c, 270 :: 		
; timeout start address is: 36 (R9)
; timeout end address is: 36 (R9)
0x09AA	0xE7E8    B	L_I2Cx_Write19
L_I2Cx_Write20:
;__Lib_I2C_12.c, 271 :: 		
; i start address is: 0 (R0)
0x09AC	0x2000    MOVS	R0, #0
; count end address is: 24 (R6)
; I2C_BASE end address is: 28 (R7)
; buf end address is: 32 (R8)
; i end address is: 0 (R0)
; END_mode end address is: 20 (R5)
0x09AE	0x9701    STR	R7, [SP, #4]
0x09B0	0x4629    MOV	R1, R5
0x09B2	0x4637    MOV	R7, R6
0x09B4	0x9E01    LDR	R6, [SP, #4]
L_I2Cx_Write23:
; i start address is: 0 (R0)
; I2C_BASE start address is: 24 (R6)
; buf start address is: 32 (R8)
; count start address is: 28 (R7)
; END_mode start address is: 4 (R1)
0x09B6	0x1E7C    SUBS	R4, R7, #1
0x09B8	0x42A0    CMP	R0, R4
0x09BA	0xD226    BCS	L_I2Cx_Write24
;__Lib_I2C_12.c, 272 :: 		
0x09BC	0xF2060510  ADDW	R5, R6, #16
0x09C0	0xEB080400  ADD	R4, R8, R0, LSL #0
0x09C4	0x7824    LDRB	R4, [R4, #0]
0x09C6	0x602C    STR	R4, [R5, #0]
;__Lib_I2C_12.c, 274 :: 		
0x09C8	0x4C3A    LDR	R4, [PC, #232]
; timeout start address is: 36 (R9)
0x09CA	0xF8D49000  LDR	R9, [R4, #0]
; END_mode end address is: 4 (R1)
; count end address is: 28 (R7)
; buf end address is: 32 (R8)
; timeout end address is: 36 (R9)
; i end address is: 0 (R0)
; I2C_BASE end address is: 24 (R6)
0x09CE	0x4682    MOV	R10, R0
0x09D0	0x460D    MOV	R5, R1
;__Lib_I2C_12.c, 275 :: 		
L_I2Cx_Write26:
; timeout start address is: 36 (R9)
; END_mode start address is: 20 (R5)
; count start address is: 28 (R7)
; buf start address is: 32 (R8)
; I2C_BASE start address is: 24 (R6)
; i start address is: 40 (R10)
0x09D2	0x493A    LDR	R1, [PC, #232]
0x09D4	0x4630    MOV	R0, R6
0x09D6	0xF7FFFD75  BL	_ChekXForEvent+0
0x09DA	0xB988    CBNZ	R0, L_I2Cx_Write27
;__Lib_I2C_12.c, 276 :: 		
0x09DC	0x4C35    LDR	R4, [PC, #212]
0x09DE	0x6824    LDR	R4, [R4, #0]
0x09E0	0xB16C    CBZ	R4, L__I2Cx_Write127
;__Lib_I2C_12.c, 277 :: 		
0x09E2	0xF1B90F00  CMP	R9, #0
0x09E6	0xD106    BNE	L_I2Cx_Write29
; count end address is: 28 (R7)
; buf end address is: 32 (R8)
; i end address is: 40 (R10)
; timeout end address is: 36 (R9)
; END_mode end address is: 20 (R5)
; I2C_BASE end address is: 24 (R6)
;__Lib_I2C_12.c, 278 :: 		
0x09E8	0x2004    MOVS	R0, #4
0x09EA	0x4C2E    LDR	R4, [PC, #184]
0x09EC	0x6824    LDR	R4, [R4, #0]
0x09EE	0x47A0    BLX	R4
;__Lib_I2C_12.c, 279 :: 		
0x09F0	0xF64F70FF  MOVW	R0, #65535
0x09F4	0xE04C    B	L_end_I2Cx_Write
;__Lib_I2C_12.c, 280 :: 		
L_I2Cx_Write29:
;__Lib_I2C_12.c, 281 :: 		
; I2C_BASE start address is: 24 (R6)
; END_mode start address is: 20 (R5)
; timeout start address is: 36 (R9)
; i start address is: 40 (R10)
; buf start address is: 32 (R8)
; count start address is: 28 (R7)
0x09F6	0xF1A90001  SUB	R0, R9, #1
; timeout end address is: 36 (R9)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x09FA	0x4681    MOV	R9, R0
;__Lib_I2C_12.c, 282 :: 		
0x09FC	0xE7FF    B	L_I2Cx_Write28
L__I2Cx_Write127:
;__Lib_I2C_12.c, 276 :: 		
;__Lib_I2C_12.c, 282 :: 		
L_I2Cx_Write28:
;__Lib_I2C_12.c, 283 :: 		
; timeout start address is: 36 (R9)
; timeout end address is: 36 (R9)
0x09FE	0xE7E8    B	L_I2Cx_Write26
L_I2Cx_Write27:
;__Lib_I2C_12.c, 271 :: 		
0x0A00	0xF10A0401  ADD	R4, R10, #1
; i end address is: 40 (R10)
; i start address is: 0 (R0)
0x0A04	0x4620    MOV	R0, R4
;__Lib_I2C_12.c, 284 :: 		
0x0A06	0x4629    MOV	R1, R5
; count end address is: 28 (R7)
; END_mode end address is: 20 (R5)
0x0A08	0xE7D5    B	L_I2Cx_Write23
L_I2Cx_Write24:
;__Lib_I2C_12.c, 286 :: 		
; END_mode start address is: 4 (R1)
0x0A0A	0xF2060510  ADDW	R5, R6, #16
0x0A0E	0xEB080400  ADD	R4, R8, R0, LSL #0
; buf end address is: 32 (R8)
; i end address is: 0 (R0)
0x0A12	0x7824    LDRB	R4, [R4, #0]
0x0A14	0x602C    STR	R4, [R5, #0]
;__Lib_I2C_12.c, 288 :: 		
0x0A16	0x4C27    LDR	R4, [PC, #156]
; timeout start address is: 28 (R7)
0x0A18	0x6827    LDR	R7, [R4, #0]
; END_mode end address is: 4 (R1)
; I2C_BASE end address is: 24 (R6)
; timeout end address is: 28 (R7)
0x0A1A	0x460D    MOV	R5, R1
;__Lib_I2C_12.c, 289 :: 		
L_I2Cx_Write30:
; timeout start address is: 28 (R7)
; END_mode start address is: 20 (R5)
; I2C_BASE start address is: 24 (R6)
0x0A1C	0x4928    LDR	R1, [PC, #160]
0x0A1E	0x4630    MOV	R0, R6
0x0A20	0xF7FFFD50  BL	_ChekXForEvent+0
0x0A24	0xB970    CBNZ	R0, L_I2Cx_Write31
;__Lib_I2C_12.c, 290 :: 		
0x0A26	0x4C23    LDR	R4, [PC, #140]
0x0A28	0x6824    LDR	R4, [R4, #0]
0x0A2A	0xB154    CBZ	R4, L__I2Cx_Write128
;__Lib_I2C_12.c, 291 :: 		
0x0A2C	0xB937    CBNZ	R7, L_I2Cx_Write33
; END_mode end address is: 20 (R5)
; I2C_BASE end address is: 24 (R6)
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 292 :: 		
0x0A2E	0x2004    MOVS	R0, #4
0x0A30	0x4C1C    LDR	R4, [PC, #112]
0x0A32	0x6824    LDR	R4, [R4, #0]
0x0A34	0x47A0    BLX	R4
;__Lib_I2C_12.c, 293 :: 		
0x0A36	0xF64F70FF  MOVW	R0, #65535
0x0A3A	0xE029    B	L_end_I2Cx_Write
;__Lib_I2C_12.c, 294 :: 		
L_I2Cx_Write33:
;__Lib_I2C_12.c, 295 :: 		
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 24 (R6)
; END_mode start address is: 20 (R5)
0x0A3C	0x1E78    SUBS	R0, R7, #1
; timeout end address is: 28 (R7)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0A3E	0x4607    MOV	R7, R0
;__Lib_I2C_12.c, 296 :: 		
0x0A40	0xE7FF    B	L_I2Cx_Write32
L__I2Cx_Write128:
;__Lib_I2C_12.c, 290 :: 		
;__Lib_I2C_12.c, 296 :: 		
L_I2Cx_Write32:
;__Lib_I2C_12.c, 297 :: 		
; timeout start address is: 28 (R7)
; timeout end address is: 28 (R7)
0x0A42	0xE7EB    B	L_I2Cx_Write30
L_I2Cx_Write31:
;__Lib_I2C_12.c, 298 :: 		
0x0A44	0x2D01    CMP	R5, #1
0x0A46	0xD105    BNE	L_I2Cx_Write34
; END_mode end address is: 20 (R5)
;__Lib_I2C_12.c, 299 :: 		
0x0A48	0x2501    MOVS	R5, #1
0x0A4A	0x6834    LDR	R4, [R6, #0]
0x0A4C	0xF3652449  BFI	R4, R5, #9, #1
0x0A50	0x6034    STR	R4, [R6, #0]
; I2C_BASE end address is: 24 (R6)
0x0A52	0xE01C    B	L_I2Cx_Write35
L_I2Cx_Write34:
;__Lib_I2C_12.c, 301 :: 		
; I2C_BASE start address is: 24 (R6)
0x0A54	0x2501    MOVS	R5, #1
0x0A56	0x6834    LDR	R4, [R6, #0]
0x0A58	0xF3652408  BFI	R4, R5, #8, #1
0x0A5C	0x6034    STR	R4, [R6, #0]
;__Lib_I2C_12.c, 303 :: 		
0x0A5E	0x4C15    LDR	R4, [PC, #84]
; timeout start address is: 28 (R7)
0x0A60	0x6827    LDR	R7, [R4, #0]
; I2C_BASE end address is: 24 (R6)
; timeout end address is: 28 (R7)
0x0A62	0x4635    MOV	R5, R6
;__Lib_I2C_12.c, 304 :: 		
L_I2Cx_Write36:
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 20 (R5)
0x0A64	0x4917    LDR	R1, [PC, #92]
0x0A66	0x4628    MOV	R0, R5
0x0A68	0xF7FFFD2C  BL	_ChekXForEvent+0
0x0A6C	0xB978    CBNZ	R0, L_I2Cx_Write37
;__Lib_I2C_12.c, 305 :: 		
0x0A6E	0x4C11    LDR	R4, [PC, #68]
0x0A70	0x6824    LDR	R4, [R4, #0]
0x0A72	0xB15C    CBZ	R4, L__I2Cx_Write129
;__Lib_I2C_12.c, 306 :: 		
0x0A74	0xB937    CBNZ	R7, L_I2Cx_Write39
; I2C_BASE end address is: 20 (R5)
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 307 :: 		
0x0A76	0x2004    MOVS	R0, #4
0x0A78	0x4C0A    LDR	R4, [PC, #40]
0x0A7A	0x6824    LDR	R4, [R4, #0]
0x0A7C	0x47A0    BLX	R4
;__Lib_I2C_12.c, 308 :: 		
0x0A7E	0xF64F70FF  MOVW	R0, #65535
0x0A82	0xE005    B	L_end_I2Cx_Write
;__Lib_I2C_12.c, 309 :: 		
L_I2Cx_Write39:
;__Lib_I2C_12.c, 310 :: 		
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 20 (R5)
0x0A84	0x1E7C    SUBS	R4, R7, #1
; timeout end address is: 28 (R7)
; timeout start address is: 0 (R0)
0x0A86	0x4620    MOV	R0, R4
; timeout end address is: 0 (R0)
0x0A88	0x4607    MOV	R7, R0
;__Lib_I2C_12.c, 311 :: 		
0x0A8A	0xE7FF    B	L_I2Cx_Write38
L__I2Cx_Write129:
;__Lib_I2C_12.c, 305 :: 		
;__Lib_I2C_12.c, 311 :: 		
L_I2Cx_Write38:
;__Lib_I2C_12.c, 312 :: 		
; timeout start address is: 28 (R7)
; I2C_BASE end address is: 20 (R5)
; timeout end address is: 28 (R7)
0x0A8C	0xE7EA    B	L_I2Cx_Write36
L_I2Cx_Write37:
;__Lib_I2C_12.c, 313 :: 		
L_I2Cx_Write35:
;__Lib_I2C_12.c, 314 :: 		
0x0A8E	0x2000    MOVS	R0, #0
;__Lib_I2C_12.c, 315 :: 		
L_end_I2Cx_Write:
0x0A90	0xF8DDE000  LDR	LR, [SP, #0]
0x0A94	0xB002    ADD	SP, SP, #8
0x0A96	0x4770    BX	LR
0x0A98	0x54004000  	I2C1_CR1+0
0x0A9C	0x00882000  	__Lib_I2C_12__I2C1_TIMEOUT+0
0x0AA0	0x00C82000  	_I2C1_Timeout_Ptr+0
0x0AA4	0x00C42000  	_I2Cx_Timeout_Ptr+0
0x0AA8	0x58004000  	I2C2_CR1+0
0x0AAC	0x008C2000  	__Lib_I2C_12__I2C2_TIMEOUT+0
0x0AB0	0x00CC2000  	_I2C2_Timeout_Ptr+0
0x0AB4	0x00902000  	__Lib_I2C_12__I2Cx_TIMEOUT+0
0x0AB8	0x00820007  	#458882
0x0ABC	0x00800007  	#458880
0x0AC0	0x00840007  	#458884
0x0AC4	0x00010003  	#196609
; end of _I2Cx_Write
_I2C2_Write:
;__Lib_I2C_12.c, 586 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x0F98	0xB081    SUB	SP, SP, #4
0x0F9A	0xF8CDE000  STR	LR, [SP, #0]
; END_mode end address is: 12 (R3)
; count end address is: 8 (R2)
; buf end address is: 4 (R1)
; slave_address end address is: 0 (R0)
; slave_address start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
;__Lib_I2C_12.c, 587 :: 		
0x0F9E	0xB408    PUSH	(R3)
; count end address is: 8 (R2)
0x0FA0	0x4613    MOV	R3, R2
0x0FA2	0x460A    MOV	R2, R1
; buf end address is: 4 (R1)
0x0FA4	0xB2C1    UXTB	R1, R0
; slave_address end address is: 0 (R0)
0x0FA6	0x4804    LDR	R0, [PC, #16]
; END_mode end address is: 12 (R3)
0x0FA8	0xF7FFFCC2  BL	_I2Cx_Write+0
0x0FAC	0xB001    ADD	SP, SP, #4
;__Lib_I2C_12.c, 588 :: 		
L_end_I2C2_Write:
0x0FAE	0xF8DDE000  LDR	LR, [SP, #0]
0x0FB2	0xB001    ADD	SP, SP, #4
0x0FB4	0x4770    BX	LR
0x0FB6	0xBF00    NOP
0x0FB8	0x58004000  	I2C2_CR1+0
; end of _I2C2_Write
_equalizer_setVolumePart:
;__eqalizer_driver.c, 107 :: 		void equalizer_setVolumePart(uint8_t channel, uint8_t volume1, uint8_t volume2)
; volume2 start address is: 8 (R2)
; volume1 start address is: 4 (R1)
; channel start address is: 0 (R0)
0x128C	0xB082    SUB	SP, SP, #8
0x128E	0xF8CDE000  STR	LR, [SP, #0]
; volume2 end address is: 8 (R2)
; volume1 end address is: 4 (R1)
; channel end address is: 0 (R0)
; channel start address is: 0 (R0)
; volume1 start address is: 4 (R1)
; volume2 start address is: 8 (R2)
;__eqalizer_driver.c, 111 :: 		writeReg[ 0 ] = channel | volume1;
0x1292	0xAC01    ADD	R4, SP, #4
0x1294	0xEA400301  ORR	R3, R0, R1, LSL #0
; volume1 end address is: 4 (R1)
0x1298	0x7023    STRB	R3, [R4, #0]
;__eqalizer_driver.c, 112 :: 		writeReg[ 1 ] = channel | volume2;
0x129A	0x1C64    ADDS	R4, R4, #1
0x129C	0xEA400302  ORR	R3, R0, R2, LSL #0
; channel end address is: 0 (R0)
; volume2 end address is: 8 (R2)
0x12A0	0x7023    STRB	R3, [R4, #0]
;__eqalizer_driver.c, 114 :: 		hal_i2cStart();
0x12A2	0xF7FFFF5F  BL	__eqalizer_driver_hal_i2cStart+0
;__eqalizer_driver.c, 115 :: 		hal_i2cWrite(_slaveAddress, writeReg, 2, END_MODE_STOP);
0x12A6	0xAC01    ADD	R4, SP, #4
0x12A8	0x4B05    LDR	R3, [PC, #20]
0x12AA	0x781B    LDRB	R3, [R3, #0]
0x12AC	0x2202    MOVS	R2, #2
0x12AE	0x4621    MOV	R1, R4
0x12B0	0xB2D8    UXTB	R0, R3
0x12B2	0x2301    MOVS	R3, #1
0x12B4	0xF7FFFF20  BL	__eqalizer_driver_hal_i2cWrite+0
;__eqalizer_driver.c, 116 :: 		}
L_end_equalizer_setVolumePart:
0x12B8	0xF8DDE000  LDR	LR, [SP, #0]
0x12BC	0xB002    ADD	SP, SP, #8
0x12BE	0x4770    BX	LR
0x12C0	0x00862000  	__eqalizer_driver__slaveAddress+0
; end of _equalizer_setVolumePart
_equalizer_mute:
;__eqalizer_driver.c, 144 :: 		void equalizer_mute(uint8_t mute)
; mute start address is: 0 (R0)
0x12C4	0xB082    SUB	SP, SP, #8
0x12C6	0xF8CDE000  STR	LR, [SP, #0]
; mute end address is: 0 (R0)
; mute start address is: 0 (R0)
;__eqalizer_driver.c, 148 :: 		writeReg[ 0 ] = mute;
0x12CA	0xA901    ADD	R1, SP, #4
0x12CC	0x7008    STRB	R0, [R1, #0]
; mute end address is: 0 (R0)
;__eqalizer_driver.c, 150 :: 		hal_i2cStart();
0x12CE	0xF7FFFF49  BL	__eqalizer_driver_hal_i2cStart+0
;__eqalizer_driver.c, 151 :: 		hal_i2cWrite(_slaveAddress, writeReg, 1, END_MODE_STOP);
0x12D2	0xAA01    ADD	R2, SP, #4
0x12D4	0x4905    LDR	R1, [PC, #20]
0x12D6	0x7809    LDRB	R1, [R1, #0]
0x12D8	0x2301    MOVS	R3, #1
0x12DA	0xB2C8    UXTB	R0, R1
0x12DC	0x4611    MOV	R1, R2
0x12DE	0x2201    MOVS	R2, #1
0x12E0	0xF7FFFF0A  BL	__eqalizer_driver_hal_i2cWrite+0
;__eqalizer_driver.c, 152 :: 		}
L_end_equalizer_mute:
0x12E4	0xF8DDE000  LDR	LR, [SP, #0]
0x12E8	0xB002    ADD	SP, SP, #8
0x12EA	0x4770    BX	LR
0x12EC	0x00862000  	__eqalizer_driver__slaveAddress+0
; end of _equalizer_mute
_applicationTask:
;Click_Equalizer_STM.c, 137 :: 		void applicationTask()
0x193C	0xB081    SUB	SP, SP, #4
0x193E	0xF8CDE000  STR	LR, [SP, #0]
;Click_Equalizer_STM.c, 142 :: 		dataReady_ = UART_Rdy_Ptr( );
0x1942	0x4C2E    LDR	R4, [PC, #184]
0x1944	0x6824    LDR	R4, [R4, #0]
0x1946	0x47A0    BLX	R4
;Click_Equalizer_STM.c, 144 :: 		if (dataReady_ != 0)
0x1948	0xB2C4    UXTB	R4, R0
0x194A	0x2C00    CMP	R4, #0
0x194C	0xF0008052  BEQ	L_applicationTask22
;Click_Equalizer_STM.c, 146 :: 		receivedData_ = UART_Rd_Ptr( );
0x1950	0x4C2B    LDR	R4, [PC, #172]
0x1952	0x6824    LDR	R4, [R4, #0]
0x1954	0x47A0    BLX	R4
; receivedData_ start address is: 0 (R0)
0x1956	0xB2C0    UXTB	R0, R0
;Click_Equalizer_STM.c, 148 :: 		switch (receivedData_)
0x1958	0xE040    B	L_applicationTask23
; receivedData_ end address is: 0 (R0)
;Click_Equalizer_STM.c, 150 :: 		case 'z' :
L_applicationTask25:
;Click_Equalizer_STM.c, 153 :: 		_channel --;
0x195A	0x492A    LDR	R1, [PC, #168]
0x195C	0x7808    LDRB	R0, [R1, #0]
0x195E	0x1E40    SUBS	R0, R0, #1
0x1960	0xB2C0    UXTB	R0, R0
0x1962	0x7008    STRB	R0, [R1, #0]
;Click_Equalizer_STM.c, 154 :: 		if(_channel < 1)
0x1964	0x2801    CMP	R0, #1
0x1966	0xD202    BCS	L_applicationTask26
;Click_Equalizer_STM.c, 156 :: 		_channel = 1;
0x1968	0x2101    MOVS	R1, #1
0x196A	0x4826    LDR	R0, [PC, #152]
0x196C	0x7001    STRB	R1, [R0, #0]
;Click_Equalizer_STM.c, 157 :: 		}
L_applicationTask26:
;Click_Equalizer_STM.c, 158 :: 		_playFlag = 1;
0x196E	0x2101    MOVS	R1, #1
0x1970	0x4825    LDR	R0, [PC, #148]
0x1972	0x7001    STRB	R1, [R0, #0]
;Click_Equalizer_STM.c, 159 :: 		break;
0x1974	0xE03C    B	L_applicationTask24
;Click_Equalizer_STM.c, 161 :: 		case 'x' :
L_applicationTask27:
;Click_Equalizer_STM.c, 164 :: 		_channel ++;
0x1976	0x4923    LDR	R1, [PC, #140]
0x1978	0x7808    LDRB	R0, [R1, #0]
0x197A	0x1C40    ADDS	R0, R0, #1
0x197C	0xB2C0    UXTB	R0, R0
0x197E	0x7008    STRB	R0, [R1, #0]
;Click_Equalizer_STM.c, 165 :: 		if(_channel > 6)
0x1980	0x2806    CMP	R0, #6
0x1982	0xD902    BLS	L_applicationTask28
;Click_Equalizer_STM.c, 167 :: 		_channel = 6;
0x1984	0x2106    MOVS	R1, #6
0x1986	0x481F    LDR	R0, [PC, #124]
0x1988	0x7001    STRB	R1, [R0, #0]
;Click_Equalizer_STM.c, 168 :: 		}
L_applicationTask28:
;Click_Equalizer_STM.c, 169 :: 		_playFlag = 1;
0x198A	0x2101    MOVS	R1, #1
0x198C	0x481E    LDR	R0, [PC, #120]
0x198E	0x7001    STRB	R1, [R0, #0]
;Click_Equalizer_STM.c, 170 :: 		break;
0x1990	0xE02E    B	L_applicationTask24
;Click_Equalizer_STM.c, 172 :: 		case '+' :
L_applicationTask29:
;Click_Equalizer_STM.c, 175 :: 		_volume++;
0x1992	0x491E    LDR	R1, [PC, #120]
0x1994	0xF9910000  LDRSB	R0, [R1, #0]
0x1998	0x1C40    ADDS	R0, R0, #1
0x199A	0xB240    SXTB	R0, R0
0x199C	0x7008    STRB	R0, [R1, #0]
;Click_Equalizer_STM.c, 176 :: 		if(_volume > 0)
0x199E	0x2800    CMP	R0, #0
0x19A0	0xDD03    BLE	L_applicationTask30
;Click_Equalizer_STM.c, 178 :: 		_volume = 0;
0x19A2	0x2100    MOVS	R1, #0
0x19A4	0xB249    SXTB	R1, R1
0x19A6	0x4819    LDR	R0, [PC, #100]
0x19A8	0x7001    STRB	R1, [R0, #0]
;Click_Equalizer_STM.c, 179 :: 		}
L_applicationTask30:
;Click_Equalizer_STM.c, 180 :: 		_playFlag = 1;
0x19AA	0x2101    MOVS	R1, #1
0x19AC	0x4816    LDR	R0, [PC, #88]
0x19AE	0x7001    STRB	R1, [R0, #0]
;Click_Equalizer_STM.c, 181 :: 		break;
0x19B0	0xE01E    B	L_applicationTask24
;Click_Equalizer_STM.c, 183 :: 		case '-' :
L_applicationTask31:
;Click_Equalizer_STM.c, 186 :: 		_volume--;
0x19B2	0x4A16    LDR	R2, [PC, #88]
0x19B4	0xF9920000  LDRSB	R0, [R2, #0]
0x19B8	0x1E41    SUBS	R1, R0, #1
0x19BA	0xB249    SXTB	R1, R1
0x19BC	0x7011    STRB	R1, [R2, #0]
;Click_Equalizer_STM.c, 187 :: 		if(_volume < -79)
0x19BE	0xF06F004E  MVN	R0, #78
0x19C2	0x4281    CMP	R1, R0
0x19C4	0xDA03    BGE	L_applicationTask32
;Click_Equalizer_STM.c, 189 :: 		_volume = -79;
0x19C6	0x21B1    MOVS	R1, #-79
0x19C8	0xB249    SXTB	R1, R1
0x19CA	0x4810    LDR	R0, [PC, #64]
0x19CC	0x7001    STRB	R1, [R0, #0]
;Click_Equalizer_STM.c, 190 :: 		}
L_applicationTask32:
;Click_Equalizer_STM.c, 191 :: 		_playFlag = 1;
0x19CE	0x2101    MOVS	R1, #1
0x19D0	0x480D    LDR	R0, [PC, #52]
0x19D2	0x7001    STRB	R1, [R0, #0]
;Click_Equalizer_STM.c, 192 :: 		break;
0x19D4	0xE00C    B	L_applicationTask24
;Click_Equalizer_STM.c, 194 :: 		case 'm' :
L_applicationTask33:
;Click_Equalizer_STM.c, 196 :: 		_mute();
0x19D6	0xF7FFFEC5  BL	__mute+0
;Click_Equalizer_STM.c, 197 :: 		break;
0x19DA	0xE009    B	L_applicationTask24
;Click_Equalizer_STM.c, 199 :: 		}
L_applicationTask23:
; receivedData_ start address is: 0 (R0)
0x19DC	0x287A    CMP	R0, #122
0x19DE	0xD0BC    BEQ	L_applicationTask25
0x19E0	0x2878    CMP	R0, #120
0x19E2	0xD0C8    BEQ	L_applicationTask27
0x19E4	0x282B    CMP	R0, #43
0x19E6	0xD0D4    BEQ	L_applicationTask29
0x19E8	0x282D    CMP	R0, #45
0x19EA	0xD0E2    BEQ	L_applicationTask31
0x19EC	0x286D    CMP	R0, #109
0x19EE	0xD0F2    BEQ	L_applicationTask33
; receivedData_ end address is: 0 (R0)
L_applicationTask24:
;Click_Equalizer_STM.c, 200 :: 		_play();
0x19F0	0xF7FFFDBA  BL	__play+0
;Click_Equalizer_STM.c, 201 :: 		}
L_applicationTask22:
;Click_Equalizer_STM.c, 202 :: 		}
L_end_applicationTask:
0x19F4	0xF8DDE000  LDR	LR, [SP, #0]
0x19F8	0xB001    ADD	SP, SP, #4
0x19FA	0x4770    BX	LR
0x19FC	0x00942000  	_UART_Rdy_Ptr+0
0x1A00	0x00982000  	_UART_Rd_Ptr+0
0x1A04	0x00312000  	__channel+0
0x1A08	0x00322000  	__playFlag+0
0x1A0C	0x00332000  	__volume+0
; end of _applicationTask
__mute:
;Click_Equalizer_STM.c, 98 :: 		void _mute()
0x1764	0xB081    SUB	SP, SP, #4
0x1766	0xF8CDE000  STR	LR, [SP, #0]
;Click_Equalizer_STM.c, 101 :: 		if(_muteFlag == 0)
0x176A	0x480E    LDR	R0, [PC, #56]
0x176C	0x7800    LDRB	R0, [R0, #0]
0x176E	0xB950    CBNZ	R0, L__mute14
;Click_Equalizer_STM.c, 103 :: 		_muteFlag = 1;
0x1770	0x2101    MOVS	R1, #1
0x1772	0x480C    LDR	R0, [PC, #48]
0x1774	0x7001    STRB	R1, [R0, #0]
;Click_Equalizer_STM.c, 104 :: 		equalizer_mute(_EQUALIZER_ALL_CHANNEL_MUTE);
0x1776	0x20F9    MOVS	R0, __EQUALIZER_ALL_CHANNEL_MUTE
0x1778	0xF7FFFDA4  BL	_equalizer_mute+0
;Click_Equalizer_STM.c, 105 :: 		mikrobus_logWrite(" All channels MUTE !!!", _LOG_LINE);
0x177C	0x480A    LDR	R0, [PC, #40]
0x177E	0x2102    MOVS	R1, #2
0x1780	0xF7FFFF40  BL	_mikrobus_logWrite+0
;Click_Equalizer_STM.c, 106 :: 		}
0x1784	0xE009    B	L__mute15
L__mute14:
;Click_Equalizer_STM.c, 109 :: 		_muteFlag = 0;
0x1786	0x2100    MOVS	R1, #0
0x1788	0x4806    LDR	R0, [PC, #24]
0x178A	0x7001    STRB	R1, [R0, #0]
;Click_Equalizer_STM.c, 110 :: 		equalizer_mute(_EQUALIZER_ALL_CHANNEL_UNMUTE);
0x178C	0x20F8    MOVS	R0, __EQUALIZER_ALL_CHANNEL_UNMUTE
0x178E	0xF7FFFD99  BL	_equalizer_mute+0
;Click_Equalizer_STM.c, 111 :: 		mikrobus_logWrite(" All channels UNMUTE !!!", _LOG_LINE);
0x1792	0x4806    LDR	R0, [PC, #24]
0x1794	0x2102    MOVS	R1, #2
0x1796	0xF7FFFF35  BL	_mikrobus_logWrite+0
;Click_Equalizer_STM.c, 112 :: 		}
L__mute15:
;Click_Equalizer_STM.c, 113 :: 		}
L_end__mute:
0x179A	0xF8DDE000  LDR	LR, [SP, #0]
0x179E	0xB001    ADD	SP, SP, #4
0x17A0	0x4770    BX	LR
0x17A2	0xBF00    NOP
0x17A4	0x00002000  	__muteFlag+0
0x17A8	0x00012000  	?lstr4_Click_Equalizer_STM+0
0x17AC	0x00182000  	?lstr5_Click_Equalizer_STM+0
; end of __mute
__play:
;Click_Equalizer_STM.c, 79 :: 		void _play()
0x1568	0xB081    SUB	SP, SP, #4
0x156A	0xF8CDE000  STR	LR, [SP, #0]
;Click_Equalizer_STM.c, 81 :: 		if((_playFlag == 1) && (_muteFlag != 1))
0x156E	0x481C    LDR	R0, [PC, #112]
0x1570	0x7800    LDRB	R0, [R0, #0]
0x1572	0x2801    CMP	R0, #1
0x1574	0xD130    BNE	L___play38
0x1576	0x481B    LDR	R0, [PC, #108]
0x1578	0x7800    LDRB	R0, [R0, #0]
0x157A	0x2801    CMP	R0, #1
0x157C	0xD02C    BEQ	L___play37
L___play36:
;Click_Equalizer_STM.c, 83 :: 		_currentChannel = _getCurrentChannel(_channel);
0x157E	0x481A    LDR	R0, [PC, #104]
0x1580	0x7800    LDRB	R0, [R0, #0]
0x1582	0xF7FFFEE1  BL	__getCurrentChannel+0
0x1586	0x4919    LDR	R1, [PC, #100]
0x1588	0x7008    STRB	R0, [R1, #0]
;Click_Equalizer_STM.c, 84 :: 		equalizer_setVolumeFull(_currentChannel, _volume);
0x158A	0x4919    LDR	R1, [PC, #100]
0x158C	0xF9911000  LDRSB	R1, [R1, #0]
0x1590	0xF7FFFF04  BL	_equalizer_setVolumeFull+0
;Click_Equalizer_STM.c, 86 :: 		mikrobus_logWrite(" Channel [  ", _LOG_TEXT);
0x1594	0x4817    LDR	R0, [PC, #92]
0x1596	0x2101    MOVS	R1, #1
0x1598	0xF000F834  BL	_mikrobus_logWrite+0
;Click_Equalizer_STM.c, 87 :: 		IntToStr(_channel, demoText);
0x159C	0x4812    LDR	R0, [PC, #72]
0x159E	0x7800    LDRB	R0, [R0, #0]
0x15A0	0x4915    LDR	R1, [PC, #84]
0x15A2	0xF7FFFF39  BL	_IntToStr+0
;Click_Equalizer_STM.c, 88 :: 		mikrobus_logWrite(demoText, _LOG_TEXT);
0x15A6	0x2101    MOVS	R1, #1
0x15A8	0x4813    LDR	R0, [PC, #76]
0x15AA	0xF000F82B  BL	_mikrobus_logWrite+0
;Click_Equalizer_STM.c, 89 :: 		mikrobus_logWrite(" ] -- Volume [ ", _LOG_TEXT);
0x15AE	0x4813    LDR	R0, [PC, #76]
0x15B0	0x2101    MOVS	R1, #1
0x15B2	0xF000F827  BL	_mikrobus_logWrite+0
;Click_Equalizer_STM.c, 90 :: 		IntToStr(_volume, demoText);
0x15B6	0x480E    LDR	R0, [PC, #56]
0x15B8	0xF9900000  LDRSB	R0, [R0, #0]
0x15BC	0x490E    LDR	R1, [PC, #56]
0x15BE	0xF7FFFF2B  BL	_IntToStr+0
;Click_Equalizer_STM.c, 91 :: 		mikrobus_logWrite(demoText, _LOG_TEXT);
0x15C2	0x2101    MOVS	R1, #1
0x15C4	0x480C    LDR	R0, [PC, #48]
0x15C6	0xF000F81D  BL	_mikrobus_logWrite+0
;Click_Equalizer_STM.c, 92 :: 		mikrobus_logWrite(" ] ", _LOG_LINE);
0x15CA	0x480D    LDR	R0, [PC, #52]
0x15CC	0x2102    MOVS	R1, #2
0x15CE	0xF000F819  BL	_mikrobus_logWrite+0
;Click_Equalizer_STM.c, 94 :: 		_playFlag = 0;
0x15D2	0x2100    MOVS	R1, #0
0x15D4	0x4802    LDR	R0, [PC, #8]
0x15D6	0x7001    STRB	R1, [R0, #0]
;Click_Equalizer_STM.c, 81 :: 		if((_playFlag == 1) && (_muteFlag != 1))
L___play38:
L___play37:
;Click_Equalizer_STM.c, 96 :: 		}
L_end__play:
0x15D8	0xF8DDE000  LDR	LR, [SP, #0]
0x15DC	0xB001    ADD	SP, SP, #4
0x15DE	0x4770    BX	LR
0x15E0	0x00322000  	__playFlag+0
0x15E4	0x00002000  	__muteFlag+0
0x15E8	0x00312000  	__channel+0
0x15EC	0x00852000  	__currentChannel+0
0x15F0	0x00332000  	__volume+0
0x15F4	0x00642000  	?lstr1_Click_Equalizer_STM+0
0x15F8	0x009C2000  	_demoText+0
0x15FC	0x00712000  	?lstr2_Click_Equalizer_STM+0
0x1600	0x00812000  	?lstr3_Click_Equalizer_STM+0
; end of __play
__getCurrentChannel:
;Click_Equalizer_STM.c, 50 :: 		uint8_t _getCurrentChannel(uint8_t ch)
; ch start address is: 0 (R0)
; ch end address is: 0 (R0)
; ch start address is: 0 (R0)
;Click_Equalizer_STM.c, 52 :: 		if(ch == 1)
0x1348	0x2801    CMP	R0, #1
0x134A	0xD101    BNE	L__getCurrentChannel0
; ch end address is: 0 (R0)
;Click_Equalizer_STM.c, 54 :: 		return _EQUALIZER_CHANNEL_1;
0x134C	0x2080    MOVS	R0, __EQUALIZER_CHANNEL_1
0x134E	0xE014    B	L_end__getCurrentChannel
;Click_Equalizer_STM.c, 55 :: 		}
L__getCurrentChannel0:
;Click_Equalizer_STM.c, 56 :: 		else if( ch == 2 )
; ch start address is: 0 (R0)
0x1350	0x2802    CMP	R0, #2
0x1352	0xD101    BNE	L__getCurrentChannel2
; ch end address is: 0 (R0)
;Click_Equalizer_STM.c, 58 :: 		return _EQUALIZER_CHANNEL_2;
0x1354	0x2040    MOVS	R0, __EQUALIZER_CHANNEL_2
0x1356	0xE010    B	L_end__getCurrentChannel
;Click_Equalizer_STM.c, 59 :: 		}
L__getCurrentChannel2:
;Click_Equalizer_STM.c, 60 :: 		else if( ch == 3 )
; ch start address is: 0 (R0)
0x1358	0x2803    CMP	R0, #3
0x135A	0xD101    BNE	L__getCurrentChannel4
; ch end address is: 0 (R0)
;Click_Equalizer_STM.c, 62 :: 		return _EQUALIZER_CHANNEL_3;
0x135C	0x2000    MOVS	R0, __EQUALIZER_CHANNEL_3
0x135E	0xE00C    B	L_end__getCurrentChannel
;Click_Equalizer_STM.c, 63 :: 		}
L__getCurrentChannel4:
;Click_Equalizer_STM.c, 64 :: 		else if( ch == 4 )
; ch start address is: 0 (R0)
0x1360	0x2804    CMP	R0, #4
0x1362	0xD101    BNE	L__getCurrentChannel6
; ch end address is: 0 (R0)
;Click_Equalizer_STM.c, 66 :: 		return _EQUALIZER_CHANNEL_4;
0x1364	0x2020    MOVS	R0, __EQUALIZER_CHANNEL_4
0x1366	0xE008    B	L_end__getCurrentChannel
;Click_Equalizer_STM.c, 67 :: 		}
L__getCurrentChannel6:
;Click_Equalizer_STM.c, 68 :: 		else if( ch == 5 )
; ch start address is: 0 (R0)
0x1368	0x2805    CMP	R0, #5
0x136A	0xD101    BNE	L__getCurrentChannel8
; ch end address is: 0 (R0)
;Click_Equalizer_STM.c, 70 :: 		return _EQUALIZER_CHANNEL_5;
0x136C	0x2060    MOVS	R0, __EQUALIZER_CHANNEL_5
0x136E	0xE004    B	L_end__getCurrentChannel
;Click_Equalizer_STM.c, 71 :: 		}
L__getCurrentChannel8:
;Click_Equalizer_STM.c, 72 :: 		else if( ch == 6 )
; ch start address is: 0 (R0)
0x1370	0x2806    CMP	R0, #6
0x1372	0xD101    BNE	L__getCurrentChannel10
; ch end address is: 0 (R0)
;Click_Equalizer_STM.c, 74 :: 		return _EQUALIZER_CHANNEL_6;
0x1374	0x20A0    MOVS	R0, __EQUALIZER_CHANNEL_6
0x1376	0xE000    B	L_end__getCurrentChannel
;Click_Equalizer_STM.c, 75 :: 		}
L__getCurrentChannel10:
;Click_Equalizer_STM.c, 76 :: 		return _EQUALIZER_CHANNEL_1;
0x1378	0x2080    MOVS	R0, __EQUALIZER_CHANNEL_1
;Click_Equalizer_STM.c, 77 :: 		}
L_end__getCurrentChannel:
0x137A	0x4770    BX	LR
; end of __getCurrentChannel
_equalizer_setVolumeFull:
;__eqalizer_driver.c, 118 :: 		void equalizer_setVolumeFull(uint8_t channel, int8_t volume)
; volume start address is: 4 (R1)
; channel start address is: 0 (R0)
0x139C	0xB082    SUB	SP, SP, #8
0x139E	0xF8CDE000  STR	LR, [SP, #0]
; volume end address is: 4 (R1)
; channel end address is: 0 (R0)
; channel start address is: 0 (R0)
; volume start address is: 4 (R1)
;__eqalizer_driver.c, 124 :: 		Volume2 = (-volume) % 10;
0x13A2	0x424B    RSBS	R3, R1, #0
0x13A4	0xB21B    SXTH	R3, R3
; volume end address is: 4 (R1)
0x13A6	0x220A    MOVS	R2, #10
0x13A8	0xB212    SXTH	R2, R2
0x13AA	0xFB93F4F2  SDIV	R4, R3, R2
0x13AE	0xFB023414  MLS	R4, R2, R4, R3
;__eqalizer_driver.c, 125 :: 		Volume1 = (-volume) / 10;
0x13B2	0x220A    MOVS	R2, #10
0x13B4	0xB212    SXTH	R2, R2
0x13B6	0xFB93F2F2  SDIV	R2, R3, R2
; Volume1 start address is: 4 (R1)
0x13BA	0xB2D1    UXTB	R1, R2
;__eqalizer_driver.c, 127 :: 		writeReg[ 0 ] = channel | (0x10 | volume2);
0x13BC	0xAB01    ADD	R3, SP, #4
0x13BE	0xB2E2    UXTB	R2, R4
0x13C0	0xF0420210  ORR	R2, R2, #16
0x13C4	0xB2D2    UXTB	R2, R2
0x13C6	0xEA400202  ORR	R2, R0, R2, LSL #0
0x13CA	0x701A    STRB	R2, [R3, #0]
;__eqalizer_driver.c, 128 :: 		writeReg[ 1 ] = channel | volume1;
0x13CC	0x1C5B    ADDS	R3, R3, #1
0x13CE	0xEA400201  ORR	R2, R0, R1, LSL #0
; channel end address is: 0 (R0)
; Volume1 end address is: 4 (R1)
0x13D2	0x701A    STRB	R2, [R3, #0]
;__eqalizer_driver.c, 130 :: 		hal_i2cStart();
0x13D4	0xF7FFFEC6  BL	__eqalizer_driver_hal_i2cStart+0
;__eqalizer_driver.c, 131 :: 		hal_i2cWrite(_slaveAddress, writeReg, 2, END_MODE_STOP);
0x13D8	0xAB01    ADD	R3, SP, #4
0x13DA	0x4A06    LDR	R2, [PC, #24]
0x13DC	0x7812    LDRB	R2, [R2, #0]
0x13DE	0x4619    MOV	R1, R3
0x13E0	0x2301    MOVS	R3, #1
0x13E2	0xB2D0    UXTB	R0, R2
0x13E4	0x2202    MOVS	R2, #2
0x13E6	0xF7FFFE87  BL	__eqalizer_driver_hal_i2cWrite+0
;__eqalizer_driver.c, 132 :: 		}
L_end_equalizer_setVolumeFull:
0x13EA	0xF8DDE000  LDR	LR, [SP, #0]
0x13EE	0xB002    ADD	SP, SP, #8
0x13F0	0x4770    BX	LR
0x13F2	0xBF00    NOP
0x13F4	0x00862000  	__eqalizer_driver__slaveAddress+0
; end of _equalizer_setVolumeFull
_IntToStr:
;__Lib_Conversions.c, 211 :: 		
; output start address is: 4 (R1)
; input start address is: 0 (R0)
0x1418	0xB081    SUB	SP, SP, #4
0x141A	0xF8CDE000  STR	LR, [SP, #0]
0x141E	0x460E    MOV	R6, R1
; output end address is: 4 (R1)
; input end address is: 0 (R0)
; input start address is: 0 (R0)
; output start address is: 24 (R6)
;__Lib_Conversions.c, 217 :: 		
; negative start address is: 4 (R1)
0x1420	0x2100    MOVS	R1, #0
;__Lib_Conversions.c, 218 :: 		
; inword start address is: 12 (R3)
0x1422	0xB283    UXTH	R3, R0
;__Lib_Conversions.c, 219 :: 		
0x1424	0x2800    CMP	R0, #0
0x1426	0xDA05    BGE	L__IntToStr165
; inword end address is: 12 (R3)
;__Lib_Conversions.c, 220 :: 		
0x1428	0x2101    MOVS	R1, #1
;__Lib_Conversions.c, 221 :: 		
0x142A	0x4240    RSBS	R0, R0, #0
0x142C	0xB280    UXTH	R0, R0
; input end address is: 0 (R0)
; inword start address is: 0 (R0)
0x142E	0xB280    UXTH	R0, R0
; negative end address is: 4 (R1)
; inword end address is: 0 (R0)
0x1430	0xB28F    UXTH	R7, R1
;__Lib_Conversions.c, 222 :: 		
0x1432	0xE001    B	L_IntToStr37
L__IntToStr165:
;__Lib_Conversions.c, 219 :: 		
0x1434	0xB298    UXTH	R0, R3
0x1436	0xB28F    UXTH	R7, R1
;__Lib_Conversions.c, 222 :: 		
L_IntToStr37:
;__Lib_Conversions.c, 223 :: 		
; inword start address is: 0 (R0)
; negative start address is: 28 (R7)
0x1438	0x4631    MOV	R1, R6
; inword end address is: 0 (R0)
0x143A	0xF7FFFE35  BL	_WordToStr+0
;__Lib_Conversions.c, 225 :: 		
; i start address is: 4 (R1)
0x143E	0x2106    MOVS	R1, #6
; output end address is: 24 (R6)
; negative end address is: 28 (R7)
; i end address is: 4 (R1)
0x1440	0x4634    MOV	R4, R6
0x1442	0xB2B8    UXTH	R0, R7
;__Lib_Conversions.c, 226 :: 		
L_IntToStr38:
; i start address is: 4 (R1)
; negative start address is: 0 (R0)
; output start address is: 16 (R4)
0x1444	0x2900    CMP	R1, #0
0x1446	0xD908    BLS	L_IntToStr39
;__Lib_Conversions.c, 227 :: 		
0x1448	0x1863    ADDS	R3, R4, R1
0x144A	0x1E4A    SUBS	R2, R1, #1
0x144C	0xB292    UXTH	R2, R2
0x144E	0x18A2    ADDS	R2, R4, R2
0x1450	0x7812    LDRB	R2, [R2, #0]
0x1452	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 228 :: 		
0x1454	0x1E49    SUBS	R1, R1, #1
0x1456	0xB289    UXTH	R1, R1
;__Lib_Conversions.c, 229 :: 		
; i end address is: 4 (R1)
0x1458	0xE7F4    B	L_IntToStr38
L_IntToStr39:
;__Lib_Conversions.c, 230 :: 		
0x145A	0x2220    MOVS	R2, #32
0x145C	0x7022    STRB	R2, [R4, #0]
;__Lib_Conversions.c, 231 :: 		
0x145E	0xB170    CBZ	R0, L_IntToStr40
; negative end address is: 0 (R0)
;__Lib_Conversions.c, 232 :: 		
; i start address is: 0 (R0)
0x1460	0x2000    MOVS	R0, #0
; output end address is: 16 (R4)
; i end address is: 0 (R0)
0x1462	0xB281    UXTH	R1, R0
0x1464	0x4620    MOV	R0, R4
;__Lib_Conversions.c, 233 :: 		
L_IntToStr41:
; i start address is: 4 (R1)
; output start address is: 0 (R0)
0x1466	0x1842    ADDS	R2, R0, R1
0x1468	0x7812    LDRB	R2, [R2, #0]
0x146A	0x2A20    CMP	R2, #32
0x146C	0xD102    BNE	L_IntToStr42
0x146E	0x1C49    ADDS	R1, R1, #1
0x1470	0xB289    UXTH	R1, R1
0x1472	0xE7F8    B	L_IntToStr41
L_IntToStr42:
;__Lib_Conversions.c, 234 :: 		
0x1474	0x1E4A    SUBS	R2, R1, #1
0x1476	0xB292    UXTH	R2, R2
; i end address is: 4 (R1)
;__Lib_Conversions.c, 235 :: 		
0x1478	0x1883    ADDS	R3, R0, R2
; output end address is: 0 (R0)
0x147A	0x222D    MOVS	R2, #45
0x147C	0x701A    STRB	R2, [R3, #0]
L_IntToStr40:
;__Lib_Conversions.c, 236 :: 		
L_end_IntToStr:
0x147E	0xF8DDE000  LDR	LR, [SP, #0]
0x1482	0xB001    ADD	SP, SP, #4
0x1484	0x4770    BX	LR
; end of _IntToStr
_WordToStr:
;__Lib_Conversions.c, 114 :: 		
; output start address is: 4 (R1)
; input start address is: 0 (R0)
0x10A8	0xB081    SUB	SP, SP, #4
0x10AA	0x460A    MOV	R2, R1
0x10AC	0xB281    UXTH	R1, R0
; output end address is: 4 (R1)
; input end address is: 0 (R0)
; input start address is: 4 (R1)
; output start address is: 8 (R2)
;__Lib_Conversions.c, 119 :: 		
; len start address is: 0 (R0)
0x10AE	0x2000    MOVS	R0, #0
; input end address is: 4 (R1)
; output end address is: 8 (R2)
; len end address is: 0 (R0)
0x10B0	0xB28D    UXTH	R5, R1
0x10B2	0x4611    MOV	R1, R2
L_WordToStr11:
; len start address is: 0 (R0)
; output start address is: 4 (R1)
; input start address is: 20 (R5)
0x10B4	0x2805    CMP	R0, #5
0x10B6	0xD205    BCS	L_WordToStr12
;__Lib_Conversions.c, 120 :: 		
0x10B8	0x180B    ADDS	R3, R1, R0
0x10BA	0x2220    MOVS	R2, #32
0x10BC	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 119 :: 		
0x10BE	0x1C40    ADDS	R0, R0, #1
0x10C0	0xB2C0    UXTB	R0, R0
;__Lib_Conversions.c, 120 :: 		
0x10C2	0xE7F7    B	L_WordToStr11
L_WordToStr12:
;__Lib_Conversions.c, 121 :: 		
0x10C4	0x180B    ADDS	R3, R1, R0
0x10C6	0x2200    MOVS	R2, #0
0x10C8	0x701A    STRB	R2, [R3, #0]
0x10CA	0x1E40    SUBS	R0, R0, #1
0x10CC	0xB2C0    UXTB	R0, R0
; output end address is: 4 (R1)
; len end address is: 0 (R0)
;__Lib_Conversions.c, 123 :: 		
L_WordToStr14:
;__Lib_Conversions.c, 124 :: 		
; len start address is: 0 (R0)
; input start address is: 20 (R5)
; output start address is: 4 (R1)
0x10CE	0x180C    ADDS	R4, R1, R0
0x10D0	0x230A    MOVS	R3, #10
0x10D2	0xFBB5F2F3  UDIV	R2, R5, R3
0x10D6	0xFB035212  MLS	R2, R3, R2, R5
0x10DA	0xB292    UXTH	R2, R2
0x10DC	0x3230    ADDS	R2, #48
0x10DE	0x7022    STRB	R2, [R4, #0]
;__Lib_Conversions.c, 125 :: 		
0x10E0	0x220A    MOVS	R2, #10
0x10E2	0xFBB5F2F2  UDIV	R2, R5, R2
0x10E6	0xB292    UXTH	R2, R2
0x10E8	0xB295    UXTH	R5, R2
; input end address is: 20 (R5)
;__Lib_Conversions.c, 126 :: 		
0x10EA	0xB902    CBNZ	R2, L_WordToStr16
; output end address is: 4 (R1)
; input end address is: 20 (R5)
; len end address is: 0 (R0)
;__Lib_Conversions.c, 127 :: 		
0x10EC	0xE002    B	L_WordToStr15
L_WordToStr16:
;__Lib_Conversions.c, 128 :: 		
; len start address is: 0 (R0)
; input start address is: 20 (R5)
; output start address is: 4 (R1)
0x10EE	0x1E40    SUBS	R0, R0, #1
0x10F0	0xB2C0    UXTB	R0, R0
;__Lib_Conversions.c, 129 :: 		
; output end address is: 4 (R1)
; input end address is: 20 (R5)
; len end address is: 0 (R0)
0x10F2	0xE7EC    B	L_WordToStr14
L_WordToStr15:
;__Lib_Conversions.c, 130 :: 		
L_end_WordToStr:
0x10F4	0xB001    ADD	SP, SP, #4
0x10F6	0x4770    BX	LR
; end of _WordToStr
__Lib_System_105_107_InitialSetUpRCCRCC2:
;__Lib_System_105_107.c, 383 :: 		
0x1A60	0xB081    SUB	SP, SP, #4
0x1A62	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_System_105_107.c, 386 :: 		
; ulRCC_CR start address is: 8 (R2)
0x1A66	0x4A46    LDR	R2, [PC, #280]
;__Lib_System_105_107.c, 387 :: 		
; ulRCC_CFGR start address is: 12 (R3)
0x1A68	0x4B46    LDR	R3, [PC, #280]
;__Lib_System_105_107.c, 388 :: 		
; ulRCC_CFGR2 start address is: 16 (R4)
0x1A6A	0x4C47    LDR	R4, [PC, #284]
;__Lib_System_105_107.c, 389 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1A6C	0x4947    LDR	R1, [PC, #284]
;__Lib_System_105_107.c, 396 :: 		
0x1A6E	0xF64B3080  MOVW	R0, #48000
0x1A72	0x4281    CMP	R1, R0
0x1A74	0xD906    BLS	L___Lib_System_105_107_InitialSetUpRCCRCC232
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_105_107.c, 397 :: 		
0x1A76	0x4846    LDR	R0, [PC, #280]
0x1A78	0x6800    LDR	R0, [R0, #0]
0x1A7A	0xF0400102  ORR	R1, R0, #2
0x1A7E	0x4844    LDR	R0, [PC, #272]
0x1A80	0x6001    STR	R1, [R0, #0]
0x1A82	0xE011    B	L___Lib_System_105_107_InitialSetUpRCCRCC233
L___Lib_System_105_107_InitialSetUpRCCRCC232:
;__Lib_System_105_107.c, 398 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1A84	0xF64550C0  MOVW	R0, #24000
0x1A88	0x4281    CMP	R1, R0
0x1A8A	0xD906    BLS	L___Lib_System_105_107_InitialSetUpRCCRCC234
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_105_107.c, 399 :: 		
0x1A8C	0x4840    LDR	R0, [PC, #256]
0x1A8E	0x6800    LDR	R0, [R0, #0]
0x1A90	0xF0400101  ORR	R1, R0, #1
0x1A94	0x483E    LDR	R0, [PC, #248]
0x1A96	0x6001    STR	R1, [R0, #0]
0x1A98	0xE006    B	L___Lib_System_105_107_InitialSetUpRCCRCC235
L___Lib_System_105_107_InitialSetUpRCCRCC234:
;__Lib_System_105_107.c, 401 :: 		
0x1A9A	0x483D    LDR	R0, [PC, #244]
0x1A9C	0x6801    LDR	R1, [R0, #0]
0x1A9E	0xF06F0007  MVN	R0, #7
0x1AA2	0x4001    ANDS	R1, R0
0x1AA4	0x483A    LDR	R0, [PC, #232]
0x1AA6	0x6001    STR	R1, [R0, #0]
L___Lib_System_105_107_InitialSetUpRCCRCC235:
L___Lib_System_105_107_InitialSetUpRCCRCC233:
;__Lib_System_105_107.c, 403 :: 		
0x1AA8	0xF7FFFE94  BL	__Lib_System_105_107_SystemClockSetDefault+0
;__Lib_System_105_107.c, 405 :: 		
0x1AAC	0x4839    LDR	R0, [PC, #228]
0x1AAE	0x6003    STR	R3, [R0, #0]
;__Lib_System_105_107.c, 406 :: 		
0x1AB0	0x4839    LDR	R0, [PC, #228]
0x1AB2	0x6004    STR	R4, [R0, #0]
; ulRCC_CFGR2 end address is: 16 (R4)
;__Lib_System_105_107.c, 407 :: 		
0x1AB4	0x4839    LDR	R0, [PC, #228]
0x1AB6	0xEA020100  AND	R1, R2, R0, LSL #0
0x1ABA	0x4839    LDR	R0, [PC, #228]
0x1ABC	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 409 :: 		
0x1ABE	0xF0020001  AND	R0, R2, #1
0x1AC2	0xB140    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC253
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
0x1AC4	0x4619    MOV	R1, R3
;__Lib_System_105_107.c, 410 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC237:
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x1AC6	0x4836    LDR	R0, [PC, #216]
0x1AC8	0x6800    LDR	R0, [R0, #0]
0x1ACA	0xF0000002  AND	R0, R0, #2
0x1ACE	0x2800    CMP	R0, #0
0x1AD0	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC238
;__Lib_System_105_107.c, 411 :: 		
0x1AD2	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC237
L___Lib_System_105_107_InitialSetUpRCCRCC238:
;__Lib_System_105_107.c, 412 :: 		
; ulRCC_CFGR end address is: 4 (R1)
0x1AD4	0xE000    B	L___Lib_System_105_107_InitialSetUpRCCRCC236
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_105_107_InitialSetUpRCCRCC253:
;__Lib_System_105_107.c, 409 :: 		
0x1AD6	0x4619    MOV	R1, R3
;__Lib_System_105_107.c, 412 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC236:
;__Lib_System_105_107.c, 414 :: 		
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x1AD8	0xF4023080  AND	R0, R2, #65536
0x1ADC	0xB140    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC254
; ulRCC_CR end address is: 8 (R2)
; ulRCC_CFGR end address is: 4 (R1)
0x1ADE	0x460B    MOV	R3, R1
;__Lib_System_105_107.c, 415 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC240:
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 12 (R3)
0x1AE0	0x482F    LDR	R0, [PC, #188]
0x1AE2	0x6800    LDR	R0, [R0, #0]
0x1AE4	0xF4003000  AND	R0, R0, #131072
0x1AE8	0x2800    CMP	R0, #0
0x1AEA	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC241
;__Lib_System_105_107.c, 416 :: 		
0x1AEC	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC240
L___Lib_System_105_107_InitialSetUpRCCRCC241:
;__Lib_System_105_107.c, 417 :: 		
; ulRCC_CR end address is: 8 (R2)
0x1AEE	0xE000    B	L___Lib_System_105_107_InitialSetUpRCCRCC239
; ulRCC_CFGR end address is: 12 (R3)
L___Lib_System_105_107_InitialSetUpRCCRCC254:
;__Lib_System_105_107.c, 414 :: 		
0x1AF0	0x460B    MOV	R3, R1
;__Lib_System_105_107.c, 417 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC239:
;__Lib_System_105_107.c, 419 :: 		
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 12 (R3)
0x1AF2	0xF0025080  AND	R0, R2, #268435456
0x1AF6	0xB168    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC255
;__Lib_System_105_107.c, 420 :: 		
0x1AF8	0x4829    LDR	R0, [PC, #164]
0x1AFA	0x6800    LDR	R0, [R0, #0]
0x1AFC	0xF0405180  ORR	R1, R0, #268435456
0x1B00	0x4827    LDR	R0, [PC, #156]
0x1B02	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
;__Lib_System_105_107.c, 421 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC243:
; ulRCC_CFGR start address is: 12 (R3)
; ulRCC_CR start address is: 8 (R2)
0x1B04	0x4826    LDR	R0, [PC, #152]
0x1B06	0x6800    LDR	R0, [R0, #0]
0x1B08	0xF0005000  AND	R0, R0, #536870912
0x1B0C	0x2800    CMP	R0, #0
0x1B0E	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC244
;__Lib_System_105_107.c, 422 :: 		
0x1B10	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC243
L___Lib_System_105_107_InitialSetUpRCCRCC244:
;__Lib_System_105_107.c, 423 :: 		
; ulRCC_CR end address is: 8 (R2)
0x1B12	0xE7FF    B	L___Lib_System_105_107_InitialSetUpRCCRCC242
; ulRCC_CFGR end address is: 12 (R3)
L___Lib_System_105_107_InitialSetUpRCCRCC255:
;__Lib_System_105_107.c, 419 :: 		
;__Lib_System_105_107.c, 423 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC242:
;__Lib_System_105_107.c, 425 :: 		
; ulRCC_CFGR start address is: 12 (R3)
; ulRCC_CR start address is: 8 (R2)
0x1B14	0xF0026080  AND	R0, R2, #67108864
0x1B18	0xB178    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC256
;__Lib_System_105_107.c, 426 :: 		
0x1B1A	0x4821    LDR	R0, [PC, #132]
0x1B1C	0x6800    LDR	R0, [R0, #0]
0x1B1E	0xF0406180  ORR	R1, R0, #67108864
0x1B22	0x481F    LDR	R0, [PC, #124]
0x1B24	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
0x1B26	0x4611    MOV	R1, R2
0x1B28	0x461A    MOV	R2, R3
;__Lib_System_105_107.c, 427 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC246:
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x1B2A	0x481D    LDR	R0, [PC, #116]
0x1B2C	0x6800    LDR	R0, [R0, #0]
0x1B2E	0xF0006000  AND	R0, R0, #134217728
0x1B32	0x2800    CMP	R0, #0
0x1B34	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC247
;__Lib_System_105_107.c, 428 :: 		
0x1B36	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC246
L___Lib_System_105_107_InitialSetUpRCCRCC247:
;__Lib_System_105_107.c, 429 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x1B38	0xE001    B	L___Lib_System_105_107_InitialSetUpRCCRCC245
; ulRCC_CR end address is: 4 (R1)
L___Lib_System_105_107_InitialSetUpRCCRCC256:
;__Lib_System_105_107.c, 425 :: 		
0x1B3A	0x4611    MOV	R1, R2
0x1B3C	0x461A    MOV	R2, R3
;__Lib_System_105_107.c, 429 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC245:
;__Lib_System_105_107.c, 431 :: 		
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x1B3E	0xF0017080  AND	R0, R1, #16777216
; ulRCC_CR end address is: 4 (R1)
0x1B42	0xB170    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC257
;__Lib_System_105_107.c, 432 :: 		
0x1B44	0x4816    LDR	R0, [PC, #88]
0x1B46	0x6800    LDR	R0, [R0, #0]
0x1B48	0xF0407180  ORR	R1, R0, #16777216
0x1B4C	0x4814    LDR	R0, [PC, #80]
0x1B4E	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 8 (R2)
0x1B50	0x4611    MOV	R1, R2
;__Lib_System_105_107.c, 433 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC249:
; ulRCC_CFGR start address is: 4 (R1)
0x1B52	0x4813    LDR	R0, [PC, #76]
0x1B54	0x6800    LDR	R0, [R0, #0]
0x1B56	0xF0007000  AND	R0, R0, #33554432
0x1B5A	0xB900    CBNZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC250
;__Lib_System_105_107.c, 434 :: 		
0x1B5C	0xE7F9    B	L___Lib_System_105_107_InitialSetUpRCCRCC249
L___Lib_System_105_107_InitialSetUpRCCRCC250:
;__Lib_System_105_107.c, 435 :: 		
0x1B5E	0x460A    MOV	R2, R1
0x1B60	0xE7FF    B	L___Lib_System_105_107_InitialSetUpRCCRCC248
; ulRCC_CFGR end address is: 4 (R1)
L___Lib_System_105_107_InitialSetUpRCCRCC257:
;__Lib_System_105_107.c, 431 :: 		
;__Lib_System_105_107.c, 435 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC248:
;__Lib_System_105_107.c, 439 :: 		
; ulRCC_CFGR start address is: 8 (R2)
; ulRCC_CFGR end address is: 8 (R2)
L___Lib_System_105_107_InitialSetUpRCCRCC251:
; ulRCC_CFGR start address is: 8 (R2)
0x1B62	0x480C    LDR	R0, [PC, #48]
0x1B64	0x6800    LDR	R0, [R0, #0]
0x1B66	0xF000010C  AND	R1, R0, #12
0x1B6A	0x0090    LSLS	R0, R2, #2
0x1B6C	0xF000000C  AND	R0, R0, #12
0x1B70	0x4281    CMP	R1, R0
0x1B72	0xD000    BEQ	L___Lib_System_105_107_InitialSetUpRCCRCC252
;__Lib_System_105_107.c, 440 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x1B74	0xE7F5    B	L___Lib_System_105_107_InitialSetUpRCCRCC251
L___Lib_System_105_107_InitialSetUpRCCRCC252:
;__Lib_System_105_107.c, 441 :: 		
L_end_InitialSetUpRCCRCC2:
0x1B76	0xF8DDE000  LDR	LR, [SP, #0]
0x1B7A	0xB001    ADD	SP, SP, #4
0x1B7C	0x4770    BX	LR
0x1B7E	0xBF00    NOP
0x1B80	0x00810501  	#83951745
0x1B84	0x8402001D  	#1934338
0x1B88	0x06440001  	#67140
0x1B8C	0x19400001  	#72000
0x1B90	0x20004002  	FLASH_ACR+0
0x1B94	0x10044002  	RCC_CFGR+0
0x1B98	0x102C4002  	RCC_CFGR2+0
0x1B9C	0xFFFF000F  	#1048575
0x1BA0	0x10004002  	RCC_CR+0
; end of __Lib_System_105_107_InitialSetUpRCCRCC2
__Lib_System_105_107_SystemClockSetDefault:
;__Lib_System_105_107.c, 356 :: 		
0x17D4	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 359 :: 		
0x17D6	0x4815    LDR	R0, [PC, #84]
0x17D8	0x6800    LDR	R0, [R0, #0]
0x17DA	0xF0400101  ORR	R1, R0, #1
0x17DE	0x4813    LDR	R0, [PC, #76]
0x17E0	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 362 :: 		
0x17E2	0x4913    LDR	R1, [PC, #76]
0x17E4	0x4813    LDR	R0, [PC, #76]
0x17E6	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 365 :: 		
0x17E8	0x4810    LDR	R0, [PC, #64]
0x17EA	0x6801    LDR	R1, [R0, #0]
0x17EC	0x4812    LDR	R0, [PC, #72]
0x17EE	0x4001    ANDS	R1, R0
0x17F0	0x480E    LDR	R0, [PC, #56]
0x17F2	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 368 :: 		
0x17F4	0x480D    LDR	R0, [PC, #52]
0x17F6	0x6801    LDR	R1, [R0, #0]
0x17F8	0xF46F2080  MVN	R0, #262144
0x17FC	0x4001    ANDS	R1, R0
0x17FE	0x480B    LDR	R0, [PC, #44]
0x1800	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 371 :: 		
0x1802	0x480C    LDR	R0, [PC, #48]
0x1804	0x6801    LDR	R1, [R0, #0]
0x1806	0xF46F00FE  MVN	R0, #8323072
0x180A	0x4001    ANDS	R1, R0
0x180C	0x4809    LDR	R0, [PC, #36]
0x180E	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 374 :: 		
0x1810	0x4806    LDR	R0, [PC, #24]
0x1812	0x6801    LDR	R1, [R0, #0]
0x1814	0xF06F50A0  MVN	R0, #335544320
0x1818	0x4001    ANDS	R1, R0
0x181A	0x4804    LDR	R0, [PC, #16]
0x181C	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 377 :: 		
0x181E	0xF04F0100  MOV	R1, #0
0x1822	0x4806    LDR	R0, [PC, #24]
0x1824	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 381 :: 		
L_end_SystemClockSetDefault:
0x1826	0xB001    ADD	SP, SP, #4
0x1828	0x4770    BX	LR
0x182A	0xBF00    NOP
0x182C	0x10004002  	RCC_CR+0
0x1830	0x0000F0FF  	#-251723776
0x1834	0x10044002  	RCC_CFGR+0
0x1838	0xFFFFFEF6  	#-17367041
0x183C	0x102C4002  	RCC_CFGR2+0
; end of __Lib_System_105_107_SystemClockSetDefault
__Lib_System_105_107_InitialSetUpFosc:
;__Lib_System_105_107.c, 443 :: 		
0x1A24	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 444 :: 		
0x1A26	0x4902    LDR	R1, [PC, #8]
0x1A28	0x4802    LDR	R0, [PC, #8]
0x1A2A	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 445 :: 		
L_end_InitialSetUpFosc:
0x1A2C	0xB001    ADD	SP, SP, #4
0x1A2E	0x4770    BX	LR
0x1A30	0x19400001  	#72000
0x1A34	0x00C02000  	___System_CLOCK_IN_KHZ+0
; end of __Lib_System_105_107_InitialSetUpFosc
___GenExcept:
;__Lib_System_105_107.c, 307 :: 		
0x1A38	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 308 :: 		
L___GenExcept28:
0x1A3A	0xE7FE    B	L___GenExcept28
;__Lib_System_105_107.c, 309 :: 		
L_end___GenExcept:
0x1A3C	0xB001    ADD	SP, SP, #4
0x1A3E	0x4770    BX	LR
; end of ___GenExcept
0x1E64	0xB500    PUSH	(R14)
0x1E66	0xF8DFB024  LDR	R11, [PC, #36]
0x1E6A	0xF8DFA024  LDR	R10, [PC, #36]
0x1E6E	0xF8DFC024  LDR	R12, [PC, #36]
0x1E72	0xF7FFFDCD  BL	6672
0x1E76	0xF8DFB020  LDR	R11, [PC, #32]
0x1E7A	0xF8DFA020  LDR	R10, [PC, #32]
0x1E7E	0xF8DFC020  LDR	R12, [PC, #32]
0x1E82	0xF7FFFDC5  BL	6672
0x1E86	0xBD00    POP	(R15)
0x1E88	0x4770    BX	LR
0x1E8A	0xBF00    NOP
0x1E8C	0x00002000  	#536870912
0x1E90	0x00852000  	#536871045
0x1E94	0x1BA40000  	#7076
0x1E98	0x00882000  	#536871048
0x1E9C	0x00942000  	#536871060
0x1EA0	0x1E4C0000  	#7756
0x1F00	0xB500    PUSH	(R14)
0x1F02	0xF8DFB010  LDR	R11, [PC, #16]
0x1F06	0xF8DFA010  LDR	R10, [PC, #16]
0x1F0A	0xF7FFFC99  BL	6208
0x1F0E	0xBD00    POP	(R15)
0x1F10	0x4770    BX	LR
0x1F12	0xBF00    NOP
0x1F14	0x00002000  	#536870912
0x1F18	0x00E42000  	#536871140
;Click_Equalizer_STM.c,19 :: __EQUALIZER_I2C_CFG [4]
0x16A4	0x000186A0 ;__EQUALIZER_I2C_CFG+0
; end of __EQUALIZER_I2C_CFG
;__Lib_System_105_107.c,448 :: __Lib_System_105_107_ADCPrescTable [4]
0x187A	0x08060402 ;__Lib_System_105_107_ADCPrescTable+0
; end of __Lib_System_105_107_ADCPrescTable
;,0 :: _initBlock_2 [24]
; Containing: ?ICS__muteFlag [1]
;             ?ICS?lstr4_Click_Equalizer_STM [23]
0x1BA4	0x6C412000 ;_initBlock_2+0 : ?ICS__muteFlag at 0x1BA4 : ?ICS?lstr4_Click_Equalizer_STM at 0x1BA5
0x1BA8	0x6863206C ;_initBlock_2+4
0x1BAC	0x656E6E61 ;_initBlock_2+8
0x1BB0	0x4D20736C ;_initBlock_2+12
0x1BB4	0x20455455 ;_initBlock_2+16
0x1BB8	0x00212121 ;_initBlock_2+20
; end of _initBlock_2
;,0 :: _initBlock_3 [26]
; Containing: ?ICS?lstr5_Click_Equalizer_STM [25]
;             ?ICS__channel [1]
0x1BBC	0x6C6C4120 ;_initBlock_3+0 : ?ICS?lstr5_Click_Equalizer_STM at 0x1BBC
0x1BC0	0x61686320 ;_initBlock_3+4
0x1BC4	0x6C656E6E ;_initBlock_3+8
0x1BC8	0x4E552073 ;_initBlock_3+12
0x1BCC	0x4554554D ;_initBlock_3+16
0x1BD0	0x21212120 ;_initBlock_3+20
0x1BD4	0x0100 ;_initBlock_3+24 : ?ICS__channel at 0x1BD5
; end of _initBlock_3
;,0 :: _initBlock_4 [2]
; Containing: ?ICS__playFlag [1]
;             ?ICS__volume [1]
0x1BD6	0x0000 ;_initBlock_4+0 : ?ICS__playFlag at 0x1BD6 : ?ICS__volume at 0x1BD7
; end of _initBlock_4
;Click_Equalizer_STM.c,0 :: ?ICS?lstr7_Click_Equalizer_STM [26]
0x1BD8	0x2D2D2D20 ;?ICS?lstr7_Click_Equalizer_STM+0
0x1BDC	0x41545320 ;?ICS?lstr7_Click_Equalizer_STM+4
0x1BE0	0x45205452 ;?ICS?lstr7_Click_Equalizer_STM+8
0x1BE4	0x4C415551 ;?ICS?lstr7_Click_Equalizer_STM+12
0x1BE8	0x52455A49 ;?ICS?lstr7_Click_Equalizer_STM+16
0x1BEC	0x2D2D2D20 ;?ICS?lstr7_Click_Equalizer_STM+20
0x1BF0	0x0020 ;?ICS?lstr7_Click_Equalizer_STM+24
; end of ?ICS?lstr7_Click_Equalizer_STM
;Click_Equalizer_STM.c,0 :: ?ICS?lstr6_Click_Equalizer_STM [22]
0x1BF2	0x2D2D2D20 ;?ICS?lstr6_Click_Equalizer_STM+0
0x1BF6	0x73795320 ;?ICS?lstr6_Click_Equalizer_STM+4
0x1BFA	0x206D6574 ;?ICS?lstr6_Click_Equalizer_STM+8
0x1BFE	0x74696E49 ;?ICS?lstr6_Click_Equalizer_STM+12
0x1C02	0x2D2D2D20 ;?ICS?lstr6_Click_Equalizer_STM+16
0x1C06	0x0020 ;?ICS?lstr6_Click_Equalizer_STM+20
; end of ?ICS?lstr6_Click_Equalizer_STM
;,0 :: _initBlock_7 [33]
; Containing: ?ICS?lstr1_Click_Equalizer_STM [13]
;             ?ICS?lstr2_Click_Equalizer_STM [16]
;             ?ICS?lstr3_Click_Equalizer_STM [4]
0x1C08	0x61684320 ;_initBlock_7+0 : ?ICS?lstr1_Click_Equalizer_STM at 0x1C08
0x1C0C	0x6C656E6E ;_initBlock_7+4
0x1C10	0x20205B20 ;_initBlock_7+8
0x1C14	0x205D2000 ;_initBlock_7+12 : ?ICS?lstr2_Click_Equalizer_STM at 0x1C15
0x1C18	0x56202D2D ;_initBlock_7+16
0x1C1C	0x6D756C6F ;_initBlock_7+20
0x1C20	0x205B2065 ;_initBlock_7+24
0x1C24	0x205D2000 ;_initBlock_7+28 : ?ICS?lstr3_Click_Equalizer_STM at 0x1C25
0x1C28	0x00 ;_initBlock_7+32
; end of _initBlock_7
;__Lib_GPIO_32F10x_Defs.c,680 :: __GPIO_MODULE_I2C1_PB67 [108]
0x1C2C	0x00000016 ;__GPIO_MODULE_I2C1_PB67+0
0x1C30	0x00000017 ;__GPIO_MODULE_I2C1_PB67+4
0x1C34	0xFFFFFFFF ;__GPIO_MODULE_I2C1_PB67+8
0x1C38	0x00000000 ;__GPIO_MODULE_I2C1_PB67+12
0x1C3C	0x00000000 ;__GPIO_MODULE_I2C1_PB67+16
0x1C40	0x00000000 ;__GPIO_MODULE_I2C1_PB67+20
0x1C44	0x00000000 ;__GPIO_MODULE_I2C1_PB67+24
0x1C48	0x00000000 ;__GPIO_MODULE_I2C1_PB67+28
0x1C4C	0x00000000 ;__GPIO_MODULE_I2C1_PB67+32
0x1C50	0x00000000 ;__GPIO_MODULE_I2C1_PB67+36
0x1C54	0x00000000 ;__GPIO_MODULE_I2C1_PB67+40
0x1C58	0x00000000 ;__GPIO_MODULE_I2C1_PB67+44
0x1C5C	0x00000000 ;__GPIO_MODULE_I2C1_PB67+48
0x1C60	0x00000828 ;__GPIO_MODULE_I2C1_PB67+52
0x1C64	0x00000828 ;__GPIO_MODULE_I2C1_PB67+56
0x1C68	0x00000000 ;__GPIO_MODULE_I2C1_PB67+60
0x1C6C	0x00000000 ;__GPIO_MODULE_I2C1_PB67+64
0x1C70	0x00000000 ;__GPIO_MODULE_I2C1_PB67+68
0x1C74	0x00000000 ;__GPIO_MODULE_I2C1_PB67+72
0x1C78	0x00000000 ;__GPIO_MODULE_I2C1_PB67+76
0x1C7C	0x00000000 ;__GPIO_MODULE_I2C1_PB67+80
0x1C80	0x00000000 ;__GPIO_MODULE_I2C1_PB67+84
0x1C84	0x00000000 ;__GPIO_MODULE_I2C1_PB67+88
0x1C88	0x00000000 ;__GPIO_MODULE_I2C1_PB67+92
0x1C8C	0x00000000 ;__GPIO_MODULE_I2C1_PB67+96
0x1C90	0x00000000 ;__GPIO_MODULE_I2C1_PB67+100
0x1C94	0x00000002 ;__GPIO_MODULE_I2C1_PB67+104
; end of __GPIO_MODULE_I2C1_PB67
;__Lib_GPIO_32F10x_Defs.c,696 :: __GPIO_MODULE_USART1_PA9_10 [108]
0x1C98	0x00000009 ;__GPIO_MODULE_USART1_PA9_10+0
0x1C9C	0x0000000A ;__GPIO_MODULE_USART1_PA9_10+4
0x1CA0	0xFFFFFFFF ;__GPIO_MODULE_USART1_PA9_10+8
0x1CA4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+12
0x1CA8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+16
0x1CAC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+20
0x1CB0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+24
0x1CB4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+28
0x1CB8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+32
0x1CBC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+36
0x1CC0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+40
0x1CC4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+44
0x1CC8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+48
0x1CCC	0x00000818 ;__GPIO_MODULE_USART1_PA9_10+52
0x1CD0	0x00000018 ;__GPIO_MODULE_USART1_PA9_10+56
0x1CD4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+60
0x1CD8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+64
0x1CDC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+68
0x1CE0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+72
0x1CE4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+76
0x1CE8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+80
0x1CEC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+84
0x1CF0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+88
0x1CF4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+92
0x1CF8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+96
0x1CFC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+100
0x1D00	0x00000004 ;__GPIO_MODULE_USART1_PA9_10+104
; end of __GPIO_MODULE_USART1_PA9_10
;__Lib_GPIO_32F10x_Defs.c,726 :: __GPIO_MODULE_USART3_PD89 [108]
0x1D04	0x00000038 ;__GPIO_MODULE_USART3_PD89+0
0x1D08	0x00000039 ;__GPIO_MODULE_USART3_PD89+4
0x1D0C	0xFFFFFFFF ;__GPIO_MODULE_USART3_PD89+8
0x1D10	0x00000000 ;__GPIO_MODULE_USART3_PD89+12
0x1D14	0x00000000 ;__GPIO_MODULE_USART3_PD89+16
0x1D18	0x00000000 ;__GPIO_MODULE_USART3_PD89+20
0x1D1C	0x00000000 ;__GPIO_MODULE_USART3_PD89+24
0x1D20	0x00000000 ;__GPIO_MODULE_USART3_PD89+28
0x1D24	0x00000000 ;__GPIO_MODULE_USART3_PD89+32
0x1D28	0x00000000 ;__GPIO_MODULE_USART3_PD89+36
0x1D2C	0x00000000 ;__GPIO_MODULE_USART3_PD89+40
0x1D30	0x00000000 ;__GPIO_MODULE_USART3_PD89+44
0x1D34	0x00000000 ;__GPIO_MODULE_USART3_PD89+48
0x1D38	0x00000818 ;__GPIO_MODULE_USART3_PD89+52
0x1D3C	0x00000018 ;__GPIO_MODULE_USART3_PD89+56
0x1D40	0x00000000 ;__GPIO_MODULE_USART3_PD89+60
0x1D44	0x00000000 ;__GPIO_MODULE_USART3_PD89+64
0x1D48	0x00000000 ;__GPIO_MODULE_USART3_PD89+68
0x1D4C	0x00000000 ;__GPIO_MODULE_USART3_PD89+72
0x1D50	0x00000000 ;__GPIO_MODULE_USART3_PD89+76
0x1D54	0x00000000 ;__GPIO_MODULE_USART3_PD89+80
0x1D58	0x00000000 ;__GPIO_MODULE_USART3_PD89+84
0x1D5C	0x00000000 ;__GPIO_MODULE_USART3_PD89+88
0x1D60	0x00000000 ;__GPIO_MODULE_USART3_PD89+92
0x1D64	0x00000000 ;__GPIO_MODULE_USART3_PD89+96
0x1D68	0x00000000 ;__GPIO_MODULE_USART3_PD89+100
0x1D6C	0x08140030 ;__GPIO_MODULE_USART3_PD89+104
; end of __GPIO_MODULE_USART3_PD89
;__Lib_GPIO_32F10x_Defs.c,711 :: __GPIO_MODULE_USART2_PD56 [108]
0x1D70	0x00000035 ;__GPIO_MODULE_USART2_PD56+0
0x1D74	0x00000036 ;__GPIO_MODULE_USART2_PD56+4
0x1D78	0xFFFFFFFF ;__GPIO_MODULE_USART2_PD56+8
0x1D7C	0x00000000 ;__GPIO_MODULE_USART2_PD56+12
0x1D80	0x00000000 ;__GPIO_MODULE_USART2_PD56+16
0x1D84	0x00000000 ;__GPIO_MODULE_USART2_PD56+20
0x1D88	0x00000000 ;__GPIO_MODULE_USART2_PD56+24
0x1D8C	0x00000000 ;__GPIO_MODULE_USART2_PD56+28
0x1D90	0x00000000 ;__GPIO_MODULE_USART2_PD56+32
0x1D94	0x00000000 ;__GPIO_MODULE_USART2_PD56+36
0x1D98	0x00000000 ;__GPIO_MODULE_USART2_PD56+40
0x1D9C	0x00000000 ;__GPIO_MODULE_USART2_PD56+44
0x1DA0	0x00000000 ;__GPIO_MODULE_USART2_PD56+48
0x1DA4	0x00000818 ;__GPIO_MODULE_USART2_PD56+52
0x1DA8	0x00000018 ;__GPIO_MODULE_USART2_PD56+56
0x1DAC	0x00000000 ;__GPIO_MODULE_USART2_PD56+60
0x1DB0	0x00000000 ;__GPIO_MODULE_USART2_PD56+64
0x1DB4	0x00000000 ;__GPIO_MODULE_USART2_PD56+68
0x1DB8	0x00000000 ;__GPIO_MODULE_USART2_PD56+72
0x1DBC	0x00000000 ;__GPIO_MODULE_USART2_PD56+76
0x1DC0	0x00000000 ;__GPIO_MODULE_USART2_PD56+80
0x1DC4	0x00000000 ;__GPIO_MODULE_USART2_PD56+84
0x1DC8	0x00000000 ;__GPIO_MODULE_USART2_PD56+88
0x1DCC	0x00000000 ;__GPIO_MODULE_USART2_PD56+92
0x1DD0	0x00000000 ;__GPIO_MODULE_USART2_PD56+96
0x1DD4	0x00000000 ;__GPIO_MODULE_USART2_PD56+100
0x1DD8	0x08000008 ;__GPIO_MODULE_USART2_PD56+104
; end of __GPIO_MODULE_USART2_PD56
;easymx_v7_STM32F107VC.c,47 :: __MIKROBUS1_GPIO [96]
0x1DDC	0x00000465 ;__MIKROBUS1_GPIO+0
0x1DE0	0x00000459 ;__MIKROBUS1_GPIO+4
0x1DE4	0x0000044D ;__MIKROBUS1_GPIO+8
0x1DE8	0x00000471 ;__MIKROBUS1_GPIO+12
0x1DEC	0x00000495 ;__MIKROBUS1_GPIO+16
0x1DF0	0x00000489 ;__MIKROBUS1_GPIO+20
0x1DF4	0x0000047D ;__MIKROBUS1_GPIO+24
0x1DF8	0x00000441 ;__MIKROBUS1_GPIO+28
0x1DFC	0x00000405 ;__MIKROBUS1_GPIO+32
0x1E00	0x00000411 ;__MIKROBUS1_GPIO+36
0x1E04	0x00000435 ;__MIKROBUS1_GPIO+40
0x1E08	0x00000429 ;__MIKROBUS1_GPIO+44
0x1E0C	0xFFFFFFFF ;__MIKROBUS1_GPIO+48
0x1E10	0xFFFFFFFF ;__MIKROBUS1_GPIO+52
0x1E14	0xFFFFFFFF ;__MIKROBUS1_GPIO+56
0x1E18	0xFFFFFFFF ;__MIKROBUS1_GPIO+60
0x1E1C	0xFFFFFFFF ;__MIKROBUS1_GPIO+64
0x1E20	0xFFFFFFFF ;__MIKROBUS1_GPIO+68
0x1E24	0xFFFFFFFF ;__MIKROBUS1_GPIO+72
0x1E28	0xFFFFFFFF ;__MIKROBUS1_GPIO+76
0x1E2C	0xFFFFFFFF ;__MIKROBUS1_GPIO+80
0x1E30	0xFFFFFFFF ;__MIKROBUS1_GPIO+84
0x1E34	0xFFFFFFFF ;__MIKROBUS1_GPIO+88
0x1E38	0xFFFFFFFF ;__MIKROBUS1_GPIO+92
; end of __MIKROBUS1_GPIO
;__Lib_System_105_107.c,447 :: __Lib_System_105_107_APBAHBPrescTable [16]
0x1E3C	0x00000000 ;__Lib_System_105_107_APBAHBPrescTable+0
0x1E40	0x04030201 ;__Lib_System_105_107_APBAHBPrescTable+4
0x1E44	0x04030201 ;__Lib_System_105_107_APBAHBPrescTable+8
0x1E48	0x09080706 ;__Lib_System_105_107_APBAHBPrescTable+12
; end of __Lib_System_105_107_APBAHBPrescTable
;__Lib_I2C_12.c,0 :: ?ICS__Lib_I2C_12__I2C1_TIMEOUT [4]
0x1E4C	0x00000000 ;?ICS__Lib_I2C_12__I2C1_TIMEOUT+0
; end of ?ICS__Lib_I2C_12__I2C1_TIMEOUT
;__Lib_I2C_12.c,0 :: ?ICS__Lib_I2C_12__I2C2_TIMEOUT [4]
0x1E50	0x00000000 ;?ICS__Lib_I2C_12__I2C2_TIMEOUT+0
; end of ?ICS__Lib_I2C_12__I2C2_TIMEOUT
;__Lib_I2C_12.c,0 :: ?ICS__Lib_I2C_12__I2Cx_TIMEOUT [4]
0x1E54	0x00000000 ;?ICS__Lib_I2C_12__I2Cx_TIMEOUT+0
; end of ?ICS__Lib_I2C_12__I2Cx_TIMEOUT
;easymx_v7_STM32F107VC.c,15 :: __MIKROBUS1_I2C [12]
0x1E58	0x00001079 ;__MIKROBUS1_I2C+0
0x1E5C	0x00000FBD ;__MIKROBUS1_I2C+4
0x1E60	0xFFFFFFFF ;__MIKROBUS1_I2C+8
; end of __MIKROBUS1_I2C
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0150     [140]    _GPIO_Clk_Enable
0x01DC     [500]    _GPIO_Config
0x03D0      [24]    _I2Cx_Is_Idle
0x03E8      [26]    _I2Cx_Get_Status
0x0404      [12]    easymx_v7_STM32F107VC__setRX_1
0x0410      [12]    easymx_v7_STM32F107VC__setTX_1
0x041C      [12]    easymx_v7_STM32F107VC__setAN_2
0x0428      [12]    easymx_v7_STM32F107VC__setSDA_1
0x0434      [12]    easymx_v7_STM32F107VC__setSCL_1
0x0440      [12]    easymx_v7_STM32F107VC__setINT_1
0x044C      [12]    easymx_v7_STM32F107VC__setCS_1
0x0458      [12]    easymx_v7_STM32F107VC__setRST_1
0x0464      [12]    easymx_v7_STM32F107VC__setAN_1
0x0470      [12]    easymx_v7_STM32F107VC__setSCK_1
0x047C      [12]    easymx_v7_STM32F107VC__setPWM_1
0x0488      [12]    easymx_v7_STM32F107VC__setMOSI_1
0x0494      [12]    easymx_v7_STM32F107VC__setMISO_1
0x04A0      [12]    easymx_v7_STM32F107VC__setSCL_2
0x04AC      [12]    easymx_v7_STM32F107VC__setTX_2
0x04B8      [12]    easymx_v7_STM32F107VC__setRX_2
0x04C4      [36]    _ChekXForEvent
0x04E8     [144]    __Lib_I2C_12_I2Cx_Wait_For_Idle
0x0578      [12]    easymx_v7_STM32F107VC__setSDA_2
0x0584      [12]    easymx_v7_STM32F107VC__setINT_2
0x0590      [12]    easymx_v7_STM32F107VC__setSCK_2
0x059C      [12]    easymx_v7_STM32F107VC__setCS_2
0x05A8      [12]    easymx_v7_STM32F107VC__setRST_2
0x05B4      [12]    easymx_v7_STM32F107VC__setPWM_2
0x05C0      [12]    easymx_v7_STM32F107VC__setMOSI_2
0x05CC      [12]    easymx_v7_STM32F107VC__setMISO_2
0x05D8      [12]    _Get_Fosc_kHz
0x05E4     [152]    __Lib_GPIO_32F10x_GPIO_Configure_Pin
0x067C      [22]    __Lib_UART_123_45_UARTx_Read
0x0694      [12]    __Lib_UART_123_45_UARTx_Tx_Idle
0x06A0      [12]    __Lib_UART_123_45_UARTx_Data_Ready
0x06AC     [204]    _I2Cx_Start
0x0778     [272]    _GPIO_Alternate_Function_Enable
0x0888     [168]    _RCC_GetClocksFrequency
0x0930     [408]    _I2Cx_Write
0x0AC8      [24]    _UART1_Tx_Idle
0x0AE0      [24]    _UART2_Data_Ready
0x0AF8      [24]    _UART2_Read
0x0B10     [412]    _I2Cx_Init_Advanced
0x0CAC      [24]    _UART1_Read
0x0CC4      [24]    _I2C2_Start
0x0CDC     [580]    __Lib_UART_123_45_UARTx_Init_Advanced
0x0F20      [24]    _UART1_Data_Ready
0x0F38      [24]    _UART5_Read
0x0F50      [24]    _UART4_Tx_Idle
0x0F68      [24]    _UART4_Data_Ready
0x0F80      [24]    _UART5_Data_Ready
0x0F98      [36]    _I2C2_Write
0x0FBC      [36]    _I2C1_Write
0x0FE0      [24]    _UART5_Tx_Idle
0x0FF8      [24]    _UART3_Data_Ready
0x1010      [24]    _UART3_Read
0x1028      [24]    _UART2_Tx_Idle
0x1040      [30]    __Lib_UART_123_45_UARTx_Write
0x1060      [24]    _UART4_Read
0x1078      [24]    _I2C1_Start
0x1090      [24]    _UART3_Tx_Idle
0x10A8      [80]    _WordToStr
0x10F8      [40]    __eqalizer_driver_hal_i2cWrite
0x1120      [40]    _UART2_Init_Advanced
0x1148      [28]    _UART2_Write
0x1164      [44]    __eqalizer_driver_hal_i2cStart
0x1190      [28]    _UART3_Write
0x11AC      [40]    _UART3_Init_Advanced
0x11D4      [40]    _UART1_Init_Advanced
0x11FC      [28]    _I2C1_Init_Advanced
0x1218      [28]    _UART1_Write
0x1234      [28]    _UART5_Write
0x1250      [28]    _UART4_Write
0x126C      [32]    easymx_v7_STM32F107VC__log_write
0x128C      [56]    _equalizer_setVolumePart
0x12C4      [44]    _equalizer_mute
0x12F0      [40]    __eqalizer_driver_hal_i2cMap
0x1318      [44]    _equalizer_clear
0x1344       [2]    __eqalizer_driver_hal_gpioMap
0x1348      [52]    __getCurrentChannel
0x137C      [32]    easymx_v7_STM32F107VC__i2cInit_2
0x139C      [92]    _equalizer_setVolumeFull
0x13F8      [32]    easymx_v7_STM32F107VC__i2cInit_1
0x1418     [110]    _IntToStr
0x1488      [56]    easymx_v7_STM32F107VC__log_init2
0x14C0      [56]    easymx_v7_STM32F107VC__log_initUartB
0x14F8      [56]    easymx_v7_STM32F107VC__log_initUartA
0x1530      [56]    easymx_v7_STM32F107VC__log_init1
0x1568     [156]    __play
0x1604     [112]    _mikrobus_logWrite
0x1674      [48]    _mikrobus_i2cInit
0x16A8     [116]    _equalizer_defaultConfiguration
0x171C      [70]    _mikrobus_logInit
0x1764      [76]    __mute
0x17B0      [36]    _eqalizer_i2cDriverInit
0x17D4     [108]    __Lib_System_105_107_SystemClockSetDefault
0x1840      [58]    ___FillZeros
0x1880      [96]    _systemInit
0x18E0      [92]    _applicationInit
0x193C     [212]    _applicationTask
0x1A10      [20]    ___CC2DW
0x1A24      [20]    __Lib_System_105_107_InitialSetUpFosc
0x1A38       [8]    ___GenExcept
0x1A40      [32]    _main
0x1A60     [324]    __Lib_System_105_107_InitialSetUpRCCRCC2
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x20000000       [1]    __muteFlag
0x20000001      [23]    ?lstr4_Click_Equalizer_STM
0x20000018      [25]    ?lstr5_Click_Equalizer_STM
0x20000031       [1]    __channel
0x20000032       [1]    __playFlag
0x20000033       [1]    __volume
0x20000034      [26]    ?lstr7_Click_Equalizer_STM
0x2000004E      [22]    ?lstr6_Click_Equalizer_STM
0x20000064      [13]    ?lstr1_Click_Equalizer_STM
0x20000071      [16]    ?lstr2_Click_Equalizer_STM
0x20000081       [4]    ?lstr3_Click_Equalizer_STM
0x20000085       [1]    __currentChannel
0x20000086       [1]    __eqalizer_driver__slaveAddress
0x20000088       [4]    __Lib_I2C_12__I2C1_TIMEOUT
0x2000008C       [4]    __Lib_I2C_12__I2C2_TIMEOUT
0x20000090       [4]    __Lib_I2C_12__I2Cx_TIMEOUT
0x20000094       [4]    _UART_Rdy_Ptr
0x20000098       [4]    _UART_Rd_Ptr
0x2000009C      [20]    _demoText
0x200000B0       [4]    _logger
0x200000B4       [4]    __eqalizer_driver_fp_i2cStart
0x200000B8       [4]    __eqalizer_driver_fp_i2cWrite
0x200000BC       [4]    __eqalizer_driver_fp_i2cRead
0x200000C0       [4]    ___System_CLOCK_IN_KHZ
0x200000C4       [4]    _I2Cx_Timeout_Ptr
0x200000C8       [4]    _I2C1_Timeout_Ptr
0x200000CC       [4]    _I2C2_Timeout_Ptr
0x200000D0       [4]    _I2C_Start_Ptr
0x200000D4       [4]    _I2C_Read_Ptr
0x200000D8       [4]    _I2C_Write_Ptr
0x200000DC       [4]    _UART_Wr_Ptr
0x200000E0       [4]    _UART_Tx_Idle_Ptr
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x16A4       [4]    __EQUALIZER_I2C_CFG
0x187A       [4]    __Lib_System_105_107_ADCPrescTable
0x1BA4       [1]    ?ICS__muteFlag
0x1BA5      [23]    ?ICS?lstr4_Click_Equalizer_STM
0x1BBC      [25]    ?ICS?lstr5_Click_Equalizer_STM
0x1BD5       [1]    ?ICS__channel
0x1BD6       [1]    ?ICS__playFlag
0x1BD7       [1]    ?ICS__volume
0x1BD8      [26]    ?ICS?lstr7_Click_Equalizer_STM
0x1BF2      [22]    ?ICS?lstr6_Click_Equalizer_STM
0x1C08      [13]    ?ICS?lstr1_Click_Equalizer_STM
0x1C15      [16]    ?ICS?lstr2_Click_Equalizer_STM
0x1C25       [4]    ?ICS?lstr3_Click_Equalizer_STM
0x1C2C     [108]    __GPIO_MODULE_I2C1_PB67
0x1C98     [108]    __GPIO_MODULE_USART1_PA9_10
0x1D04     [108]    __GPIO_MODULE_USART3_PD89
0x1D70     [108]    __GPIO_MODULE_USART2_PD56
0x1DDC      [96]    __MIKROBUS1_GPIO
0x1E3C      [16]    __Lib_System_105_107_APBAHBPrescTable
0x1E4C       [4]    ?ICS__Lib_I2C_12__I2C1_TIMEOUT
0x1E50       [4]    ?ICS__Lib_I2C_12__I2C2_TIMEOUT
0x1E54       [4]    ?ICS__Lib_I2C_12__I2Cx_TIMEOUT
0x1E58      [12]    __MIKROBUS1_I2C
