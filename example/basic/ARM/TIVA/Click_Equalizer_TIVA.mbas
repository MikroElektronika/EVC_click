'
'Example for Equalizer Click
'
'    Date          : dec 2018.
'    Author        : Katarina Perendic
'
'Test configuration TIVA :
'    
'    MCU              : TM4C129XNCZAD
'    Dev. Board       : EasyMx PRO v7 for TIVA ARM
'    ARM Compiler ver : v6.0.0.0
'
'---
'
'Description :
'
'The application is composed of three sections :
'
'- System Initialization - Initialzes I2C module
'- Application Initialization - Initialization driver init, default configuration and sets first volume.
'- Application Task - Waits for valid user input and executes functions based on set of valid commands
'
'- Commands :
'  '+' - volume up
'  '-' - volume down
'  'x' - channel up
'  'z' - channel down
'  'm' - mute and unmute
'  
'Additional Functions :
'
'- void _getCurrentChannel( )  - Return current channel
'- void _play( )               - Start new settings of the channel
'- void _mute( )               - mute and unmute
'
program Click_Equalizer_TIVA

include Click_Equalizer_types
include Click_Equalizer_config
dim
    _muteFlag as uint8_t 
    _playFlag as uint8_t 
    _volume as int8_t 
    _channel as uint8_t 
    _currentChannel as uint8_t 
    demoText as char[20] 
    
sub function  _getCurrentChannel(dim ch as uint8_t) as uint8_t 
    if (ch = 1) then 
        result = _EQUALIZER_CHANNEL_1 
        exit 
    end if
    if (ch = 2) then 
        result = _EQUALIZER_CHANNEL_2 
        exit 
    end if
    if (ch = 3) then 
        result = _EQUALIZER_CHANNEL_3 
        exit 
    end if
    if (ch = 4) then 
        result = _EQUALIZER_CHANNEL_4 
        exit 
    end if
    if (ch = 5) then 
        result = _EQUALIZER_CHANNEL_5 
        exit 
    end if
    if (ch = 6) then 
        result = _EQUALIZER_CHANNEL_6 
        exit 
    end if
    result = _EQUALIZER_CHANNEL_1 
end sub

sub procedure _play() 
    if ((_playFlag = 1) and (_muteFlag <> 1)) then 
        _currentChannel = _getCurrentChannel(_channel) 
        equalizer_setVolumeFull(_currentChannel, _volume) 
        mikrobus_logWrite(" Channel [  ", _LOG_TEXT) 
        IntToStr(_channel, demoText) 
        mikrobus_logWrite(demoText, _LOG_TEXT) 
        mikrobus_logWrite(" ] -- Volume [ ", _LOG_TEXT) 
        IntToStr(_volume, demoText) 
        mikrobus_logWrite(demoText, _LOG_TEXT) 
        mikrobus_logWrite(" ] ", _LOG_LINE) 
        _playFlag = 0 
    end if
end sub

sub procedure _mute() 
    if (_muteFlag = 0) then 
        _muteFlag = 1 
        equalizer_mute(_EQUALIZER_ALL_CHANNEL_MUTE) 
        mikrobus_logWrite(" All channels MUTE !!!", _LOG_LINE) 
    else 
        _muteFlag = 0 
        equalizer_mute(_EQUALIZER_ALL_CHANNEL_UNMUTE) 
        mikrobus_logWrite(" All channels UNMUTE !!!", _LOG_LINE) 
    end if
end sub

sub procedure systemInit() 
    Delay_ms(300) 
    mikrobus_i2cInit(_MIKROBUS1, @_EQUALIZER_I2C_CFG[0]) 
    mikrobus_logInit(_LOG_USBUART_A, 9600) 
    mikrobus_logWrite(" --- System Init --- ", _LOG_LINE) 
    Delay_ms(100) 
end sub

sub procedure applicationInit() 
    eqalizer_i2cDriverInit(T_EQUALIZER_P(@_MIKROBUS1_GPIO), T_EQUALIZER_P(@_MIKROBUS1_I2C), _EQUALIZER_DEVICE_SLAVE_ADDRESS_11) 
    equalizer_defaultConfiguration() 
    mikrobus_logWrite(" --- START EQUALIZER --- ", _LOG_LINE) 
    equalizer_setVolumePart(_EQUALIZER_CHANNEL_1, _EQUALIZER_SET_VOLUME_0dB, _EQUALIZER_SET_VOLUME_0dB) 
    equalizer_setVolumePart(_EQUALIZER_CHANNEL_2, _EQUALIZER_SET_VOLUME_0dB, _EQUALIZER_SET_VOLUME_0dB) 
    Delay_ms(1000) 
end sub

sub procedure applicationTask() 
dim
    dataReady_ as uint8_t 
    receivedData_ as char 

    dataReady_ = UART_Rdy_Ptr() 
    if (dataReady_ <> 0) then 
        receivedData_ = UART_Rd_Ptr() 
        select case receivedData_
            case "z"
                dec(_channel)
                if (_channel < 1) then 
                    _channel = 1 
                end if
                _playFlag = 1 
            case "x"
                inc(_channel)
                if (_channel > 6) then 
                    _channel = 6 
                end if
                _playFlag = 1 
            case "+"
                inc(_volume)
                if (_volume > 0) then 
                    _volume = 0 
                end if
                _playFlag = 1 
            case "-"
                dec(_volume)
                if (_volume < -79) then 
                    _volume = -79 
                end if
                _playFlag = 1 
            case "m"
                _mute() 
        end select
        _play() 
    end if
end sub

main :
    _muteFlag = 0
    _playFlag = 0
    _volume = 0
    _channel = 1

    systemInit() 
    applicationInit() 
    while (1) 
        applicationTask() 
    wend
end.